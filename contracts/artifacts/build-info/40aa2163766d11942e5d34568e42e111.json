{
	"id": "40aa2163766d11942e5d34568e42e111",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/AllocationStaking.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"./math/SafeMath.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"./interfaces/ISalesFactory.sol\";\n\ncontract AllocationStaking is OwnableUpgradeable {\n\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    // Info of each user.每个用户的信息\n    struct UserInfo {\n        uint256 amount;     // How many LP tokens the user has provided.用户提供了多少 LP 代币。\n        uint256 rewardDebt; // Reward debt. Current reward debt when user joined farm. See explanation below.\n        //\n        // We do some fancy math here. Basically, any point in time, the amount of ERC20s\n        // entitled to a user but is pending to be distributed is:\n        //奖励债务。用户加入农场时的当前奖励债务。见下文解释\n        //我们在这里做了一些花哨的数学运算。基本上，在任何时间点，用户有权获得但待分配的 ERC20 数量是：\n        //\n        //   pending reward = (user.amount * pool.accERC20PerShare) - user.rewardDebt\n        //\n        // Whenever a user deposits or withdraws LP tokens to a pool. Here's what happens:\n        //每当用户将 LP 代币存入或提取到池中时。以下是发生的事情：\n        //   1. The pool's `accERC20PerShare` (and `lastRewardBlock`) gets updated.池的 `accERC20PerShare`（和 `lastRewardBlock`）会更新。\n        //   2. User receives the pending reward sent to his/her address.用户收到发送到其地址的待定奖励。\n        //   3. User's `amount` gets updated.用户的 `amount` 会更新\n        //   4. User's `rewardDebt` gets updated.用户的 `rewardDebt` 会更新。\n        uint256 tokensUnlockTime; // If user registered for sale, returns when tokens are getting unlocked。如果用户注册出售，则在代币解锁时返回\n        address [] salesRegistered;\n    }\n\n    // Info of each pool.每个池的信息\n    struct PoolInfo {\n        IERC20 lpToken;             // Address of LP token contract.LP 代币合约的地址。\n        uint256 allocPoint;         // How many allocation points assigned to this pool. ERC20s to distribute per block.分配给此池的分配点数。每个区块分配的 ERC20。\n        uint256 lastRewardTimestamp;    // Last timstamp that ERC20s distribution occurs.ERC20 分配发生的最后时间戳。\n        uint256 accERC20PerShare;   // Accumulated ERC20s per share, times 1e36.每股累计 ERC20，乘以 1e36。\n        uint256 totalDeposits; // Total amount of tokens deposited at the moment (staked)。当前存入的代币总量（质押）\n    }\n\n\n    // Address of the ERC20 Token contract.ERC20 代币合约的地址。\n    IERC20 public erc20;\n    // The total amount of ERC20 that's paid out as reward.作为奖励支付的 ERC20 总量。\n    uint256 public paidOut;\n    // ERC20 tokens rewarded per second.每秒奖励的 ERC20 代币。\n    uint256 public rewardPerSecond;\n    // Total rewards added to farm。添加到农场的总奖励\n    uint256 public totalRewards;\n    // Address of sales factory contract。销售工厂合约的地址\n    ISalesFactory public salesFactory;\n    // Info of each pool.每个池的信息。\n    PoolInfo[] public poolInfo;\n    // Info of each user that stakes LP tokens.质押 LP 代币的每个用户的信息。\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\n    // Total allocation points. Must be the sum of all allocation points in all pools.总分配点。必须是所有池中所有分配点的总和。\n    uint256 public totalAllocPoint;\n\n    // The timestamp when farming starts.农场开始的时间戳。\n    uint256 public startTimestamp;\n    // The timestamp when farming ends.农场结束的时间戳。\n    uint256 public endTimestamp;\n\n    // Events\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);//存款\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);//取款\n    event EmergencyWithdraw(address indexed user, uint256 indexed pid, uint256 amount);//紧急取款\n    event CompoundedEarnings(address indexed user, uint256 indexed pid, uint256 amountAdded, uint256 totalDeposited);//复合收益\n\n    // Restricting calls to only verified sales。限制仅对经过验证的销售进行调用\n    modifier onlyVerifiedSales {\n        require(salesFactory.isSaleCreatedThroughFactory(msg.sender), \"Sale not created through factory.\");\n        _;\n    }\n\n    function initialize(\n        address _ownable,\n        IERC20 _erc20,\n        uint256 _rewardPerSecond,\n        uint256 _startTimestamp,\n        address _salesFactory\n    )\n    initializer\n    public\n    {\n        __Ownable_init(_ownable);\n\n        erc20 = _erc20;\n        rewardPerSecond = _rewardPerSecond;\n        startTimestamp = _startTimestamp;\n        endTimestamp = _startTimestamp;\n        // Create sales factory contract\n        salesFactory = ISalesFactory(_salesFactory);\n    }\n\n    // Function where owner can set sales factory in case of upgrading some of smart-contracts\n    //所有者可以在升级某些智能合约时设置销售工厂的功能\n    function setSalesFactory(address _salesFactory) external onlyOwner {\n        require(_salesFactory != address(0));\n        salesFactory = ISalesFactory(_salesFactory);\n    }\n\n    // Number of LP pools\n    function poolLength() external view returns (uint256) {\n        return poolInfo.length;\n    }\n\n    // Fund the farm, increase the end block。给farm注资,设定结束时间\n    function fund(uint256 _amount) public {\n        require(block.timestamp < endTimestamp, \"fund: too late, the farm is closed\");\n        erc20.safeTransferFrom(address(msg.sender), address(this), _amount);\n        endTimestamp += _amount.div(rewardPerSecond);\n        totalRewards = totalRewards.add(_amount);\n    }\n\n    // Add a new lp to the pool. Can only be called by the owner.\n    // DO NOT add the same LP token more than once. Rewards will be messed up if you do.\n    //添加新的 LP 池中。只能由所有者调用。\n    //请勿多次添加相同的 LP 代币。如果这样做，奖励将会混乱。\n    function add(uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate) public onlyOwner {\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        uint256 lastRewardTimestamp = block.timestamp > startTimestamp ? block.timestamp : startTimestamp;\n        totalAllocPoint = totalAllocPoint.add(_allocPoint);\n        // Push new PoolInfo\n        poolInfo.push(\n            PoolInfo({\n        lpToken : _lpToken,\n        allocPoint : _allocPoint,\n        lastRewardTimestamp : lastRewardTimestamp,\n        accERC20PerShare : 0,\n        totalDeposits : 0\n        })\n        );\n    }\n\n    // Update the given pool's ERC20 allocation point. Can only be called by the owner.\n    //更新给定池的 ERC20 分配点。只能由所有者调用。\n    function set(uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint);\n        poolInfo[_pid].allocPoint = _allocPoint;\n    }\n\n    // View function to see deposited LP for a user.\n    function deposited(uint256 _pid, address _user) public view returns (uint256) {\n        UserInfo storage user = userInfo[_pid][_user];\n        return user.amount;\n    }\n\n    // View function to see pending ERC20s for a user.查看用户的pending ERC20。\n    function pending(uint256 _pid, address _user) public view returns (uint256) {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][_user];\n        uint256 accERC20PerShare = pool.accERC20PerShare;\n\n        uint256 lpSupply = pool.totalDeposits;\n\n        // Compute pending ERC20s\n        if (block.timestamp > pool.lastRewardTimestamp && lpSupply != 0) {\n            uint256 lastTimestamp = block.timestamp < endTimestamp ? block.timestamp : endTimestamp;\n            uint256 nrOfSeconds = lastTimestamp.sub(pool.lastRewardTimestamp);\n            uint256 erc20Reward = nrOfSeconds.mul(rewardPerSecond).mul(pool.allocPoint).div(totalAllocPoint);\n            accERC20PerShare = accERC20PerShare.add(erc20Reward.mul(1e36).div(lpSupply));\n        }\n        return user.amount.mul(accERC20PerShare).div(1e36).sub(user.rewardDebt);\n    }\n\n    // View function for total reward the farm has yet to pay out.\n    // NOTE: this is not necessarily the sum of all pending sums on all pools and users\n    //      example 1: when tokens have been wiped by emergency withdraw\n    //      example 2: when one pool has no LP supply\n    //查看农场尚未支付的总奖励的函数。\n    //注意：这不一定是所有池和用户的所有待处理金额的总和\n    //示例 1：当代币已被紧急提款清除时\n    //示例 2：当一个池没有 LP 供应时\n    function totalPending() external view returns (uint256) {\n        if (block.timestamp <= startTimestamp) {\n            return 0;\n        }\n\n        uint256 lastTimestamp = block.timestamp < endTimestamp ? block.timestamp : endTimestamp;\n        return rewardPerSecond.mul(lastTimestamp - startTimestamp).sub(paidOut);\n    }\n\n    // Update reward variables for all pools. Be careful of gas spending!\n    //更新所有池的奖励变量。小心 gas 支出！\n    function massUpdatePools() public {\n        uint256 length = poolInfo.length;\n        for (uint256 pid = 0; pid < length; ++pid) {\n            updatePool(pid);\n        }\n    }\n\n    function setTokensUnlockTime(uint256 _pid, address _user, uint256 _tokensUnlockTime) external onlyVerifiedSales {\n        UserInfo storage user = userInfo[_pid][_user];\n        // Require that tokens are currently unlocked.要求代币当前处于解锁状态\n        require(user.tokensUnlockTime <= block.timestamp);\n        user.tokensUnlockTime = _tokensUnlockTime;\n        // Add sale to the array of sales user registered for.将销售添加到用户注册的销售数组中。\n        user.salesRegistered.push(msg.sender);\n    }\n\n    // Update reward variables of the given pool to be up-to-date.\n    //更新给定池的奖励变量(accERC20PerShare)以保持最新\n    function updatePool(uint256 _pid) public {\n        PoolInfo storage pool = poolInfo[_pid];\n\n        uint256 lastTimestamp = block.timestamp < endTimestamp ? block.timestamp : endTimestamp;\n\n        if (lastTimestamp <= pool.lastRewardTimestamp) {\n            lastTimestamp = pool.lastRewardTimestamp;\n        }\n\n        uint256 lpSupply = pool.totalDeposits;\n\n        if (lpSupply == 0) {\n            pool.lastRewardTimestamp = lastTimestamp;\n            return;\n        }\n\n        uint256 nrOfSeconds = lastTimestamp.sub(pool.lastRewardTimestamp);\n        uint256 erc20Reward = nrOfSeconds.mul(rewardPerSecond).mul(pool.allocPoint).div(totalAllocPoint);\n\n        // Update pool accERC20PerShare\n        pool.accERC20PerShare = pool.accERC20PerShare.add(erc20Reward.mul(1e36).div(lpSupply));\n\n        // Update pool lastRewardTimestamp\n        pool.lastRewardTimestamp = lastTimestamp;\n    }\n\n    // Deposit LP tokens to Farm for ERC20 allocation.将 LP 代币存入 Farm 以获得 ERC20 分配。\n    function deposit(uint256 _pid, uint256 _amount) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n\n        uint256 depositAmount = _amount;\n\n        // Update pool\n        updatePool(_pid);\n\n        // Transfer pending amount to user if already staking。如果已经质押，则将待定金额转移给用户\n        if (user.amount > 0) {\n            uint256 pendingAmount = user.amount.mul(pool.accERC20PerShare).div(1e36).sub(user.rewardDebt);\n            erc20Transfer(msg.sender, pendingAmount);\n        }\n\n        // Safe transfer lpToken from user。安全从用户转移 lpToken\n        pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount);\n        // Add deposit to total deposits\n        pool.totalDeposits = pool.totalDeposits.add(depositAmount);\n        // Add deposit to user's amount\n        user.amount = user.amount.add(depositAmount);\n        // Compute reward debt\n        user.rewardDebt = user.amount.mul(pool.accERC20PerShare).div(1e36);\n        // Emit relevant event\n        emit Deposit(msg.sender, _pid, depositAmount);\n    }\n\n    // Withdraw LP tokens from Farm.\n    function withdraw(uint256 _pid, uint256 _amount) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        //您注册的上一次销售尚未完成。\n        require(user.tokensUnlockTime <= block.timestamp, \"Last sale you registered for is not finished yet.\");\n        require(user.amount >= _amount, \"withdraw: can't withdraw more than deposit\");\n\n        // Update pool\n        updatePool(_pid);\n\n        // Compute user's pending amount\n        uint256 pendingAmount = user.amount.mul(pool.accERC20PerShare).div(1e36).sub(user.rewardDebt);\n\n        // Transfer pending amount to user\n        erc20Transfer(msg.sender, pendingAmount);\n        user.amount = user.amount.sub(_amount);\n        user.rewardDebt = user.amount.mul(pool.accERC20PerShare).div(1e36);\n\n        // Transfer withdrawal amount to user\n        pool.lpToken.safeTransfer(address(msg.sender), _amount);\n        pool.totalDeposits = pool.totalDeposits.sub(_amount);\n\n        if (_amount > 0) {\n            // Reset the tokens unlock time\n            user.tokensUnlockTime = 0;\n        }\n\n        // Emit relevant event\n        emit Withdraw(msg.sender, _pid, _amount);\n    }\n\n    // Function to compound earnings into deposit.将收益复利存入存款\n    function compound(uint256 _pid) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n\n        require(user.amount >= 0, \"User does not have anything staked.\");\n\n        // Update pool\n        updatePool(_pid);\n\n        uint256 pendingAmount = user.amount.mul(pool.accERC20PerShare).div(1e36).sub(user.rewardDebt);\n\n        // Increase amount user is staking\n        user.amount = user.amount.add(pendingAmount);\n        user.rewardDebt = user.amount.mul(pool.accERC20PerShare).div(1e36);\n\n        // Increase pool's total deposits\n        pool.totalDeposits = pool.totalDeposits.add(pendingAmount);\n        emit CompoundedEarnings(msg.sender, _pid, pendingAmount, user.amount);\n    }\n\n    // Withdraw without caring about rewards. EMERGENCY ONLY.无需关心奖励即可提款。仅用于紧急情况。\n    function emergencyWithdraw(uint256 _pid) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        //在销售和冷却期间阻止紧急提款\n        require(user.tokensUnlockTime <= block.timestamp,\n            \"Emergency withdraw blocked during sale and cooldown period.\");\n\n        // Perform safeTransfer\n        pool.lpToken.safeTransfer(address(msg.sender), user.amount);\n        emit EmergencyWithdraw(msg.sender, _pid, user.amount);\n        // Adapt contract states\n        pool.totalDeposits = pool.totalDeposits.sub(user.amount);\n        user.amount = 0;\n        user.rewardDebt = 0;\n        user.tokensUnlockTime = 0;\n    }\n\n    // Transfer ERC20 and update the required ERC20 to payout all rewards\n    //支付奖励\n    function erc20Transfer(address _to, uint256 _amount) internal {\n        erc20.transfer(_to, _amount);\n        paidOut += _amount;\n    }\n\n    // Function to fetch deposits and earnings at one call for multiple users for passed pool id.\n    function getPendingAndDepositedForUsers(address [] memory users, uint pid)\n    external\n    view\n    returns (uint256 [] memory, uint256 [] memory)\n    {\n        uint256 [] memory deposits = new uint256[](users.length);\n        uint256 [] memory earnings = new uint256[](users.length);\n\n        // Get deposits and earnings for selected users\n        for (uint i = 0; i < users.length; i++) {\n            deposits[i] = deposited(pid, users[i]);\n            earnings[i] = pending(pid, users[i]);\n        }\n\n        return (deposits, earnings);\n    }\n\n\n}\n"
			},
			"contracts/interfaces/ISalesFactory.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.24;\n\ninterface ISalesFactory {\n    function setSaleOwnerAndToken(address saleOwner, address saleToken) external;\n    function isSaleCreatedThroughFactory(address sale) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.24;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cfc5fd02a9e07abd88cc34abc81a51070a36e3559d296b837112bea2db60e51264736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cfc5fd02a9e07abd88cc34abc81a51070a36e3559d296b837112bea2db60e51264736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xC5 REVERT MUL 0xA9 0xE0 PUSH27 0xBD88CC34ABC81A51070A36E3559D296B837112BEA2DB60E5126473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "751:5018:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;751:5018:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cfc5fd02a9e07abd88cc34abc81a51070a36e3559d296b837112bea2db60e51264736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xC5 REVERT MUL 0xA9 0xE0 PUSH27 0xBD88CC34ABC81A51070A36E3559D296B837112BEA2DB60E5126473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "751:5018:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cfc5fd02a9e07abd88cc34abc81a51070a36e3559d296b837112bea2db60e51264736f6c63430008180033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"contracts/AllocationStaking.sol",
								"contracts/interfaces/ISalesFactory.sol",
								"contracts/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122001c189066b019b4852ae5e149388012f4eac65513d55ad40698d5f22c7f1a1e964736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122001c189066b019b4852ae5e149388012f4eac65513d55ad40698d5f22c7f1a1e964736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xC1 DUP10 MOD PUSH12 0x19B4852AE5E149388012F4E 0xAC PUSH6 0x513D55AD4069 DUP14 PUSH0 0x22 0xC7 CALL LOG1 0xE9 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "195:6066:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122001c189066b019b4852ae5e149388012f4eac65513d55ad40698d5f22c7f1a1e964736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xC1 DUP10 MOD PUSH12 0x19B4852AE5E149388012F4E 0xAC PUSH6 0x513D55AD4069 DUP14 PUSH0 0x22 0xC7 CALL LOG1 0xE9 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "195:6066:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122001c189066b019b4852ae5e149388012f4eac65513d55ad40698d5f22c7f1a1e964736f6c63430008180033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"contracts/AllocationStaking.sol",
								"contracts/interfaces/ISalesFactory.sol",
								"contracts/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/AllocationStaking.sol": {
				"AllocationStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountAdded",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDeposited",
									"type": "uint256"
								}
							],
							"name": "CompoundedEarnings",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "_lpToken",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "add",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "compound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "deposited",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "erc20",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "fund",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "users",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								}
							],
							"name": "getPendingAndDepositedForUsers",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_ownable",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_erc20",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardPerSecond",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_startTimestamp",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_salesFactory",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "massUpdatePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paidOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pending",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardTimestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accERC20PerShare",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalDeposits",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerSecond",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "salesFactory",
							"outputs": [
								{
									"internalType": "contract ISalesFactory",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_salesFactory",
									"type": "address"
								}
							],
							"name": "setSalesFactory",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokensUnlockTime",
									"type": "uint256"
								}
							],
							"name": "setTokensUnlockTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalPending",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokensUnlockTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/AllocationStaking.sol\":336:16372  contract AllocationStaking is OwnableUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/AllocationStaking.sol\":336:16372  contract AllocationStaking is OwnableUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x785e9e86\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xca1d209d\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xe6fd48bc\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xe6fd48bc\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xed95f07f\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xfcfc1b14\n      eq\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0xca1d209d\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xe4c75c27\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xe6f04acc\n      eq\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x93f1a40b\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x93f1a40b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa2383106\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa85adeab\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xaa5f7e26\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x785e9e86\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8f10369a\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x441a3e70\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x5c76ca2d\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x5c76ca2d\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x630b5ba1\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x64482f79\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x441a3e70\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x51eb05a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5312ea8e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x57fb25cc\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x17caf6f1\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x17caf6f1\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1eaaa045\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3dfcb861\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3f90916a\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x081e3eda\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0e15561a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1526fe27\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/AllocationStaking.sol\":5527:5620  function poolLength() external view returns (uint256) {... */\n    tag_3:\n        /* \"contracts/AllocationStaking.sol\":5598:5606  poolInfo */\n      0x05\n        /* \"contracts/AllocationStaking.sol\":5598:5613  poolInfo.length */\n      sload\n        /* \"contracts/AllocationStaking.sol\":5527:5620  function poolLength() external view returns (uint256) {... */\n    tag_40:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/AllocationStaking.sol\":5527:5620  function poolLength() external view returns (uint256) {... */\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AllocationStaking.sol\":3200:3227  uint256 public totalRewards */\n    tag_4:\n      tag_40\n      sload(0x03)\n      dup2\n      jump\n        /* \"contracts/AllocationStaking.sol\":3390:3416  PoolInfo[] public poolInfo */\n    tag_5:\n      tag_47\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":672:704   */\n      swap1\n      swap7\n      and\n        /* \"#utility.yul\":654:705   */\n      dup7\n      mstore\n        /* \"#utility.yul\":736:738   */\n      0x20\n        /* \"#utility.yul\":721:739   */\n      dup7\n      add\n        /* \"#utility.yul\":714:748   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":764:782   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":757:791   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":822:824   */\n      0x60\n        /* \"#utility.yul\":807:825   */\n      dup4\n      add\n        /* \"#utility.yul\":800:834   */\n      mstore\n        /* \"#utility.yul\":865:868   */\n      0x80\n        /* \"#utility.yul\":850:869   */\n      dup3\n      add\n        /* \"#utility.yul\":843:878   */\n      mstore\n        /* \"#utility.yul\":641:644   */\n      0xa0\n        /* \"#utility.yul\":626:645   */\n      add\n        /* \"contracts/AllocationStaking.sol\":3390:3416  PoolInfo[] public poolInfo */\n      tag_42\n        /* \"#utility.yul\":381:884   */\n      jump\n        /* \"contracts/AllocationStaking.sol\":3733:3763  uint256 public totalAllocPoint */\n    tag_6:\n      tag_40\n      sload(0x07)\n      dup2\n      jump\n        /* \"contracts/AllocationStaking.sol\":6325:6919  function add(uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate) public onlyOwner {... */\n    tag_7:\n      tag_56\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/AllocationStaking.sol\":5322:5495  function setSalesFactory(address _salesFactory) external onlyOwner {... */\n    tag_8:\n      tag_56\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"contracts/AllocationStaking.sol\":9102:9425  function totalPending() external view returns (uint256) {... */\n    tag_9:\n      tag_40\n      tag_65\n      jump\t// in\n        /* \"contracts/AllocationStaking.sol\":12610:13823  function withdraw(uint256 _pid, uint256 _amount) public {... */\n    tag_10:\n      tag_56\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n        /* \"contracts/AllocationStaking.sol\":10425:11316  function updatePool(uint256 _pid) public {... */\n    tag_11:\n      tag_56\n      tag_72\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"contracts/AllocationStaking.sol\":14779:15482  function emergencyWithdraw(uint256 _pid) public {... */\n    tag_12:\n      tag_56\n      tag_75\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n        /* \"contracts/AllocationStaking.sol\":4652:5142  function initialize(... */\n    tag_13:\n      tag_56\n      tag_78\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n        /* \"contracts/AllocationStaking.sol\":2999:3021  uint256 public paidOut */\n    tag_14:\n      tag_40\n      sload(0x01)\n      dup2\n      jump\n        /* \"contracts/AllocationStaking.sol\":9565:9740  function massUpdatePools() public {... */\n    tag_15:\n      tag_56\n      tag_85\n      jump\t// in\n        /* \"contracts/AllocationStaking.sol\":7084:7382  function set(uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {... */\n    tag_16:\n      tag_56\n      tag_87\n      calldatasize\n      0x04\n      tag_88\n      jump\t// in\n    tag_87:\n      tag_89\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n      tag_56\n      tag_91\n      jump\t// in\n        /* \"contracts/AllocationStaking.sol\":2877:2896  IERC20 public erc20 */\n    tag_18:\n      sload(0x00)\n      tag_92\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_92:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3563:3595   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3545:3596   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3533:3535   */\n      0x20\n        /* \"#utility.yul\":3518:3536   */\n      add\n        /* \"contracts/AllocationStaking.sol\":2877:2896  IERC20 public erc20 */\n      tag_42\n        /* \"#utility.yul\":3385:3602   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_19:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      jump(tag_92)\n        /* \"contracts/AllocationStaking.sol\":3099:3129  uint256 public rewardPerSecond */\n    tag_20:\n      tag_40\n      sload(0x02)\n      dup2\n      jump\n        /* \"contracts/AllocationStaking.sol\":3513:3577  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_21:\n      tag_103\n      tag_104\n      calldatasize\n      0x04\n      tag_105\n      jump\t// in\n    tag_104:\n      0x06\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap2\n      swap1\n      dup4\n      jump\n    tag_103:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4345:4370   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":4401:4403   */\n      0x20\n        /* \"#utility.yul\":4386:4404   */\n      dup5\n      add\n        /* \"#utility.yul\":4379:4413   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":4429:4447   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4422:4456   */\n      mstore\n        /* \"#utility.yul\":4333:4335   */\n      0x60\n        /* \"#utility.yul\":4318:4336   */\n      add\n        /* \"contracts/AllocationStaking.sol\":3513:3577  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n      tag_42\n        /* \"#utility.yul\":4143:4462   */\n      jump\n        /* \"contracts/AllocationStaking.sol\":7441:7609  function deposited(uint256 _pid, address _user) public view returns (uint256) {... */\n    tag_22:\n      tag_40\n      tag_110\n      calldatasize\n      0x04\n      tag_105\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n        /* \"contracts/AllocationStaking.sol\":3941:3968  uint256 public endTimestamp */\n    tag_23:\n      tag_40\n      sload(0x09)\n      dup2\n      jump\n        /* \"contracts/AllocationStaking.sol\":13907:14654  function compound(uint256 _pid) public {... */\n    tag_24:\n      tag_56\n      tag_117\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_117:\n      tag_118\n      jump\t// in\n        /* \"contracts/AllocationStaking.sol\":5706:6019  function fund(uint256 _amount) public {... */\n    tag_25:\n      tag_56\n      tag_120\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_120:\n      tag_121\n      jump\t// in\n        /* \"contracts/AllocationStaking.sol\":11427:12567  function deposit(uint256 _pid, uint256 _amount) public {... */\n    tag_26:\n      tag_56\n      tag_123\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_123:\n      tag_124\n      jump\t// in\n        /* \"contracts/AllocationStaking.sol\":7701:8574  function pending(uint256 _pid, address _user) public view returns (uint256) {... */\n    tag_27:\n      tag_40\n      tag_126\n      calldatasize\n      0x04\n      tag_105\n      jump\t// in\n    tag_126:\n      tag_127\n      jump\t// in\n        /* \"contracts/AllocationStaking.sol\":9746:10282  function setTokensUnlockTime(uint256 _pid, address _user, uint256 _tokensUnlockTime) external onlyVerifiedSales {... */\n    tag_28:\n      tag_56\n      tag_130\n      calldatasize\n      0x04\n      tag_131\n      jump\t// in\n    tag_130:\n      tag_132\n      jump\t// in\n        /* \"contracts/AllocationStaking.sol\":3839:3868  uint256 public startTimestamp */\n    tag_29:\n      tag_40\n      sload(0x08)\n      dup2\n      jump\n        /* \"contracts/AllocationStaking.sol\":3304:3337  ISalesFactory public salesFactory */\n    tag_30:\n      sload(0x04)\n      tag_92\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_31:\n      tag_56\n      tag_141\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_141:\n      tag_142\n      jump\t// in\n        /* \"contracts/AllocationStaking.sol\":15820:16368  function getPendingAndDepositedForUsers(address [] memory users, uint pid)... */\n    tag_32:\n      tag_143\n      tag_144\n      calldatasize\n      0x04\n      tag_145\n      jump\t// in\n    tag_144:\n      tag_146\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      tag_42\n      swap3\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n        /* \"contracts/AllocationStaking.sol\":3390:3416  PoolInfo[] public poolInfo */\n    tag_50:\n      0x05\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_150\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_150:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x05\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      swap1\n      swap5\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap4\n      and\n      swap5\n      pop\n      swap1\n      swap3\n      swap1\n      swap2\n      dup6\n      jump\t// out\n        /* \"contracts/AllocationStaking.sol\":6325:6919  function add(uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate) public onlyOwner {... */\n    tag_59:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_153\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_154\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_153:\n        /* \"contracts/AllocationStaking.sol\":6425:6436  _withUpdate */\n      dup1\n        /* \"contracts/AllocationStaking.sol\":6421:6480  if (_withUpdate) {... */\n      iszero\n      tag_157\n      jumpi\n        /* \"contracts/AllocationStaking.sol\":6452:6469  massUpdatePools() */\n      tag_157\n        /* \"contracts/AllocationStaking.sol\":6452:6467  massUpdatePools */\n      tag_85\n        /* \"contracts/AllocationStaking.sol\":6452:6469  massUpdatePools() */\n      jump\t// in\n    tag_157:\n        /* \"contracts/AllocationStaking.sol\":6489:6516  uint256 lastRewardTimestamp */\n      0x00\n        /* \"contracts/AllocationStaking.sol\":6537:6551  startTimestamp */\n      sload(0x08)\n        /* \"contracts/AllocationStaking.sol\":6519:6534  block.timestamp */\n      timestamp\n        /* \"contracts/AllocationStaking.sol\":6519:6551  block.timestamp > startTimestamp */\n      gt\n        /* \"contracts/AllocationStaking.sol\":6519:6586  block.timestamp > startTimestamp ? block.timestamp : startTimestamp */\n      tag_158\n      jumpi\n        /* \"contracts/AllocationStaking.sol\":6572:6586  startTimestamp */\n      sload(0x08)\n        /* \"contracts/AllocationStaking.sol\":6519:6586  block.timestamp > startTimestamp ? block.timestamp : startTimestamp */\n      jump(tag_159)\n    tag_158:\n        /* \"contracts/AllocationStaking.sol\":6554:6569  block.timestamp */\n      timestamp\n        /* \"contracts/AllocationStaking.sol\":6519:6586  block.timestamp > startTimestamp ? block.timestamp : startTimestamp */\n    tag_159:\n        /* \"contracts/AllocationStaking.sol\":6614:6629  totalAllocPoint */\n      sload(0x07)\n        /* \"contracts/AllocationStaking.sol\":6489:6586  uint256 lastRewardTimestamp = block.timestamp > startTimestamp ? block.timestamp : startTimestamp */\n      swap1\n      swap2\n      pop\n        /* \"contracts/AllocationStaking.sol\":6614:6646  totalAllocPoint.add(_allocPoint) */\n      tag_160\n      swap1\n        /* \"contracts/AllocationStaking.sol\":6634:6645  _allocPoint */\n      dup6\n        /* \"contracts/AllocationStaking.sol\":6614:6633  totalAllocPoint.add */\n      tag_161\n        /* \"contracts/AllocationStaking.sol\":6614:6646  totalAllocPoint.add(_allocPoint) */\n      jump\t// in\n    tag_160:\n        /* \"contracts/AllocationStaking.sol\":6596:6611  totalAllocPoint */\n      0x07\n        /* \"contracts/AllocationStaking.sol\":6596:6646  totalAllocPoint = totalAllocPoint.add(_allocPoint) */\n      sstore\n        /* \"contracts/AllocationStaking.sol\":6712:6902  PoolInfo({... */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap6\n      dup7\n      mstore\n      swap1\n      dup2\n      add\n      swap2\n      dup3\n      mstore\n      0x00\n      0x60\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      0x80\n      dup4\n      add\n      dup3\n      dup2\n      mstore\n        /* \"contracts/AllocationStaking.sol\":6685:6693  poolInfo */\n      0x05\n        /* \"contracts/AllocationStaking.sol\":6685:6912  poolInfo.push(... */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      swap4\n      dup2\n      swap1\n      mstore\n      swap4\n      mload\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0\n      swap4\n      swap1\n      swap5\n      mul\n      swap3\n      dup4\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap5\n      swap1\n      swap8\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap6\n      sstore\n      swap5\n      mload\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db1\n      dup7\n      add\n      sstore\n      swap1\n      mload\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db2\n      dup6\n      add\n      sstore\n      swap2\n      mload\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db3\n      dup5\n      add\n      sstore\n      pop\n      mload\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db4\n      swap1\n      swap2\n      add\n      sstore\n        /* \"contracts/AllocationStaking.sol\":6325:6919  function add(uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/AllocationStaking.sol\":5322:5495  function setSalesFactory(address _salesFactory) external onlyOwner {... */\n    tag_63:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_154\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_164:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AllocationStaking.sol\":5407:5434  _salesFactory != address(0) */\n      dup2\n      and\n        /* \"contracts/AllocationStaking.sol\":5399:5435  require(_salesFactory != address(0)) */\n      tag_166\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_166:\n        /* \"contracts/AllocationStaking.sol\":5445:5457  salesFactory */\n      0x04\n        /* \"contracts/AllocationStaking.sol\":5445:5488  salesFactory = ISalesFactory(_salesFactory) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/AllocationStaking.sol\":5322:5495  function setSalesFactory(address _salesFactory) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/AllocationStaking.sol\":9102:9425  function totalPending() external view returns (uint256) {... */\n    tag_65:\n        /* \"contracts/AllocationStaking.sol\":9149:9156  uint256 */\n      0x00\n        /* \"contracts/AllocationStaking.sol\":9191:9205  startTimestamp */\n      sload(0x08)\n        /* \"contracts/AllocationStaking.sol\":9172:9187  block.timestamp */\n      timestamp\n        /* \"contracts/AllocationStaking.sol\":9172:9205  block.timestamp <= startTimestamp */\n      gt\n        /* \"contracts/AllocationStaking.sol\":9168:9240  if (block.timestamp <= startTimestamp) {... */\n      tag_168\n      jumpi\n      pop\n        /* \"contracts/AllocationStaking.sol\":9228:9229  0 */\n      0x00\n      swap1\n        /* \"contracts/AllocationStaking.sol\":9102:9425  function totalPending() external view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/AllocationStaking.sol\":9168:9240  if (block.timestamp <= startTimestamp) {... */\n    tag_168:\n        /* \"contracts/AllocationStaking.sol\":9250:9271  uint256 lastTimestamp */\n      0x00\n        /* \"contracts/AllocationStaking.sol\":9292:9304  endTimestamp */\n      sload(0x09)\n        /* \"contracts/AllocationStaking.sol\":9274:9289  block.timestamp */\n      timestamp\n        /* \"contracts/AllocationStaking.sol\":9274:9304  block.timestamp < endTimestamp */\n      lt\n        /* \"contracts/AllocationStaking.sol\":9274:9337  block.timestamp < endTimestamp ? block.timestamp : endTimestamp */\n      tag_169\n      jumpi\n        /* \"contracts/AllocationStaking.sol\":9325:9337  endTimestamp */\n      sload(0x09)\n        /* \"contracts/AllocationStaking.sol\":9274:9337  block.timestamp < endTimestamp ? block.timestamp : endTimestamp */\n      jump(tag_170)\n    tag_169:\n        /* \"contracts/AllocationStaking.sol\":9307:9322  block.timestamp */\n      timestamp\n        /* \"contracts/AllocationStaking.sol\":9274:9337  block.timestamp < endTimestamp ? block.timestamp : endTimestamp */\n    tag_170:\n        /* \"contracts/AllocationStaking.sol\":9250:9337  uint256 lastTimestamp = block.timestamp < endTimestamp ? block.timestamp : endTimestamp */\n      swap1\n      pop\n        /* \"contracts/AllocationStaking.sol\":9354:9418  rewardPerSecond.mul(lastTimestamp - startTimestamp).sub(paidOut) */\n      tag_171\n        /* \"contracts/AllocationStaking.sol\":9410:9417  paidOut */\n      sload(0x01)\n        /* \"contracts/AllocationStaking.sol\":9354:9405  rewardPerSecond.mul(lastTimestamp - startTimestamp) */\n      tag_172\n        /* \"contracts/AllocationStaking.sol\":9390:9404  startTimestamp */\n      sload(0x08)\n        /* \"contracts/AllocationStaking.sol\":9374:9387  lastTimestamp */\n      dup5\n        /* \"contracts/AllocationStaking.sol\":9374:9404  lastTimestamp - startTimestamp */\n      tag_173\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"contracts/AllocationStaking.sol\":9354:9369  rewardPerSecond */\n      sload(0x02)\n      swap1\n        /* \"contracts/AllocationStaking.sol\":9354:9373  rewardPerSecond.mul */\n      tag_175\n        /* \"contracts/AllocationStaking.sol\":9354:9405  rewardPerSecond.mul(lastTimestamp - startTimestamp) */\n      jump\t// in\n    tag_172:\n        /* \"contracts/AllocationStaking.sol\":9354:9409  rewardPerSecond.mul(lastTimestamp - startTimestamp).sub */\n      swap1\n      tag_176\n        /* \"contracts/AllocationStaking.sol\":9354:9418  rewardPerSecond.mul(lastTimestamp - startTimestamp).sub(paidOut) */\n      jump\t// in\n    tag_171:\n        /* \"contracts/AllocationStaking.sol\":9347:9418  return rewardPerSecond.mul(lastTimestamp - startTimestamp).sub(paidOut) */\n      swap2\n      pop\n      pop\n        /* \"contracts/AllocationStaking.sol\":9102:9425  function totalPending() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/AllocationStaking.sol\":12610:13823  function withdraw(uint256 _pid, uint256 _amount) public {... */\n    tag_70:\n        /* \"contracts/AllocationStaking.sol\":12676:12697  PoolInfo storage pool */\n      0x00\n        /* \"contracts/AllocationStaking.sol\":12700:12708  poolInfo */\n      0x05\n        /* \"contracts/AllocationStaking.sol\":12709:12713  _pid */\n      dup4\n        /* \"contracts/AllocationStaking.sol\":12700:12714  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_179\n      jumpi\n      tag_179\n      tag_180\n      jump\t// in\n    tag_179:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/AllocationStaking.sol\":12748:12762  userInfo[_pid] */\n      dup7\n      dup5\n      mstore\n        /* \"contracts/AllocationStaking.sol\":12748:12756  userInfo */\n      0x06\n        /* \"contracts/AllocationStaking.sol\":12748:12762  userInfo[_pid] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n        /* \"contracts/AllocationStaking.sol\":12763:12773  msg.sender */\n      caller\n        /* \"contracts/AllocationStaking.sol\":12748:12774  userInfo[_pid][msg.sender] */\n      dup7\n      mstore\n      swap1\n      swap3\n      mstore\n      swap3\n      keccak256\n        /* \"contracts/AllocationStaking.sol\":12845:12866  user.tokensUnlockTime */\n      0x02\n      dup2\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":12700:12714  poolInfo[_pid] */\n      0x05\n      swap1\n      swap3\n      mul\n      swap1\n      swap3\n      add\n      swap3\n      pop\n        /* \"contracts/AllocationStaking.sol\":12870:12885  block.timestamp */\n      timestamp\n      lt\n        /* \"contracts/AllocationStaking.sol\":12845:12885  user.tokensUnlockTime <= block.timestamp */\n      iszero\n        /* \"contracts/AllocationStaking.sol\":12837:12939  require(user.tokensUnlockTime <= block.timestamp, \"Last sale you registered for is not finished yet.\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7934:7936   */\n      0x20\n        /* \"contracts/AllocationStaking.sol\":12837:12939  require(user.tokensUnlockTime <= block.timestamp, \"Last sale you registered for is not finished yet.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7916:7937   */\n      mstore\n        /* \"#utility.yul\":7973:7975   */\n      0x31\n        /* \"#utility.yul\":7953:7971   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7946:7976   */\n      mstore\n        /* \"#utility.yul\":8012:8046   */\n      0x4c6173742073616c6520796f75207265676973746572656420666f7220697320\n        /* \"#utility.yul\":7992:8010   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7985:8047   */\n      mstore\n      shl(0x79, 0x3737ba103334b734b9b432b2103cb2ba17)\n        /* \"#utility.yul\":8063:8081   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8056:8103   */\n      mstore\n        /* \"#utility.yul\":8120:8139   */\n      0x84\n      add\n        /* \"contracts/AllocationStaking.sol\":12837:12939  require(user.tokensUnlockTime <= block.timestamp, \"Last sale you registered for is not finished yet.\") */\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"contracts/AllocationStaking.sol\":12957:12968  user.amount */\n      dup1\n      sload\n        /* \"contracts/AllocationStaking.sol\":12957:12979  user.amount >= _amount */\n      dup4\n      gt\n      iszero\n        /* \"contracts/AllocationStaking.sol\":12949:13026  require(user.amount >= _amount, \"withdraw: can't withdraw more than deposit\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8352:8354   */\n      0x20\n        /* \"contracts/AllocationStaking.sol\":12949:13026  require(user.amount >= _amount, \"withdraw: can't withdraw more than deposit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8334:8355   */\n      mstore\n        /* \"#utility.yul\":8391:8393   */\n      0x2a\n        /* \"#utility.yul\":8371:8389   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8364:8394   */\n      mstore\n        /* \"#utility.yul\":8430:8464   */\n      0x77697468647261773a2063616e2774207769746864726177206d6f7265207468\n        /* \"#utility.yul\":8410:8428   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8403:8465   */\n      mstore\n      shl(0xb2, 0x185b8819195c1bdcda5d)\n        /* \"#utility.yul\":8481:8499   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8474:8514   */\n      mstore\n        /* \"#utility.yul\":8531:8550   */\n      0x84\n      add\n        /* \"contracts/AllocationStaking.sol\":12949:13026  require(user.amount >= _amount, \"withdraw: can't withdraw more than deposit\") */\n      tag_183\n        /* \"#utility.yul\":8150:8556   */\n      jump\n        /* \"contracts/AllocationStaking.sol\":12949:13026  require(user.amount >= _amount, \"withdraw: can't withdraw more than deposit\") */\n    tag_185:\n        /* \"contracts/AllocationStaking.sol\":13060:13076  updatePool(_pid) */\n      tag_188\n        /* \"contracts/AllocationStaking.sol\":13071:13075  _pid */\n      dup5\n        /* \"contracts/AllocationStaking.sol\":13060:13070  updatePool */\n      tag_73\n        /* \"contracts/AllocationStaking.sol\":13060:13076  updatePool(_pid) */\n      jump\t// in\n    tag_188:\n        /* \"contracts/AllocationStaking.sol\":13128:13149  uint256 pendingAmount */\n      0x00\n        /* \"contracts/AllocationStaking.sol\":13152:13221  user.amount.mul(pool.accERC20PerShare).div(1e36).sub(user.rewardDebt) */\n      tag_189\n        /* \"contracts/AllocationStaking.sol\":13205:13209  user */\n      dup3\n        /* \"contracts/AllocationStaking.sol\":13205:13220  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":13152:13200  user.amount.mul(pool.accERC20PerShare).div(1e36) */\n      tag_172\n      shl(0x24, 0x0c097ce7bc90715b34b9f1)\n        /* \"contracts/AllocationStaking.sol\":13152:13190  user.amount.mul(pool.accERC20PerShare) */\n      tag_191\n        /* \"contracts/AllocationStaking.sol\":13168:13172  pool */\n      dup8\n        /* \"contracts/AllocationStaking.sol\":13168:13189  pool.accERC20PerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":13152:13156  user */\n      dup8\n        /* \"contracts/AllocationStaking.sol\":13152:13163  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":13152:13167  user.amount.mul */\n      tag_175\n      swap1\n        /* \"contracts/AllocationStaking.sol\":13152:13190  user.amount.mul(pool.accERC20PerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_191:\n        /* \"contracts/AllocationStaking.sol\":13152:13194  user.amount.mul(pool.accERC20PerShare).div */\n      swap1\n      tag_192\n        /* \"contracts/AllocationStaking.sol\":13152:13200  user.amount.mul(pool.accERC20PerShare).div(1e36) */\n      jump\t// in\n        /* \"contracts/AllocationStaking.sol\":13152:13221  user.amount.mul(pool.accERC20PerShare).div(1e36).sub(user.rewardDebt) */\n    tag_189:\n        /* \"contracts/AllocationStaking.sol\":13128:13221  uint256 pendingAmount = user.amount.mul(pool.accERC20PerShare).div(1e36).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/AllocationStaking.sol\":13275:13315  erc20Transfer(msg.sender, pendingAmount) */\n      tag_193\n        /* \"contracts/AllocationStaking.sol\":13289:13299  msg.sender */\n      caller\n        /* \"contracts/AllocationStaking.sol\":13301:13314  pendingAmount */\n      dup3\n        /* \"contracts/AllocationStaking.sol\":13275:13288  erc20Transfer */\n      tag_194\n        /* \"contracts/AllocationStaking.sol\":13275:13315  erc20Transfer(msg.sender, pendingAmount) */\n      jump\t// in\n    tag_193:\n        /* \"contracts/AllocationStaking.sol\":13339:13350  user.amount */\n      dup2\n      sload\n        /* \"contracts/AllocationStaking.sol\":13339:13363  user.amount.sub(_amount) */\n      tag_195\n      swap1\n        /* \"contracts/AllocationStaking.sol\":13355:13362  _amount */\n      dup6\n        /* \"contracts/AllocationStaking.sol\":13339:13354  user.amount.sub */\n      tag_176\n        /* \"contracts/AllocationStaking.sol\":13339:13363  user.amount.sub(_amount) */\n      jump\t// in\n    tag_195:\n        /* \"contracts/AllocationStaking.sol\":13325:13363  user.amount = user.amount.sub(_amount) */\n      dup1\n      dup4\n      sstore\n        /* \"contracts/AllocationStaking.sol\":13407:13428  pool.accERC20PerShare */\n      0x03\n      dup5\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":13391:13439  user.amount.mul(pool.accERC20PerShare).div(1e36) */\n      tag_196\n      swap2\n      shl(0x24, 0x0c097ce7bc90715b34b9f1)\n        /* \"contracts/AllocationStaking.sol\":13434:13438  1e36 */\n      swap2\n        /* \"contracts/AllocationStaking.sol\":13391:13429  user.amount.mul(pool.accERC20PerShare) */\n      tag_191\n      swap2\n        /* \"contracts/AllocationStaking.sol\":13325:13363  user.amount = user.amount.sub(_amount) */\n      swap1\n        /* \"contracts/AllocationStaking.sol\":13391:13406  user.amount.mul */\n      tag_175\n        /* \"contracts/AllocationStaking.sol\":13391:13429  user.amount.mul(pool.accERC20PerShare) */\n      jump\t// in\n        /* \"contracts/AllocationStaking.sol\":13391:13439  user.amount.mul(pool.accERC20PerShare).div(1e36) */\n    tag_196:\n        /* \"contracts/AllocationStaking.sol\":13373:13388  user.rewardDebt */\n      0x01\n      dup4\n      add\n        /* \"contracts/AllocationStaking.sol\":13373:13439  user.rewardDebt = user.amount.mul(pool.accERC20PerShare).div(1e36) */\n      sstore\n        /* \"contracts/AllocationStaking.sol\":13496:13508  pool.lpToken */\n      dup3\n      sload\n        /* \"contracts/AllocationStaking.sol\":13496:13551  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      tag_198\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AllocationStaking.sol\":13496:13508  pool.lpToken */\n      and\n        /* \"contracts/AllocationStaking.sol\":13530:13540  msg.sender */\n      caller\n        /* \"contracts/AllocationStaking.sol\":13543:13550  _amount */\n      dup7\n        /* \"contracts/AllocationStaking.sol\":13496:13521  pool.lpToken.safeTransfer */\n      tag_199\n        /* \"contracts/AllocationStaking.sol\":13496:13551  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      jump\t// in\n    tag_198:\n        /* \"contracts/AllocationStaking.sol\":13582:13600  pool.totalDeposits */\n      0x04\n      dup4\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":13582:13613  pool.totalDeposits.sub(_amount) */\n      tag_200\n      swap1\n        /* \"contracts/AllocationStaking.sol\":13605:13612  _amount */\n      dup6\n        /* \"contracts/AllocationStaking.sol\":13582:13604  pool.totalDeposits.sub */\n      tag_176\n        /* \"contracts/AllocationStaking.sol\":13582:13613  pool.totalDeposits.sub(_amount) */\n      jump\t// in\n    tag_200:\n        /* \"contracts/AllocationStaking.sol\":13561:13579  pool.totalDeposits */\n      0x04\n      dup5\n      add\n        /* \"contracts/AllocationStaking.sol\":13561:13613  pool.totalDeposits = pool.totalDeposits.sub(_amount) */\n      sstore\n        /* \"contracts/AllocationStaking.sol\":13628:13639  _amount > 0 */\n      dup4\n      iszero\n        /* \"contracts/AllocationStaking.sol\":13624:13735  if (_amount > 0) {... */\n      tag_201\n      jumpi\n        /* \"contracts/AllocationStaking.sol\":13723:13724  0 */\n      0x00\n        /* \"contracts/AllocationStaking.sol\":13699:13720  user.tokensUnlockTime */\n      0x02\n      dup4\n      add\n        /* \"contracts/AllocationStaking.sol\":13699:13724  user.tokensUnlockTime = 0 */\n      sstore\n        /* \"contracts/AllocationStaking.sol\":13624:13735  if (_amount > 0) {... */\n    tag_201:\n        /* \"contracts/AllocationStaking.sol\":13781:13816  Withdraw(msg.sender, _pid, _amount) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/AllocationStaking.sol\":13802:13806  _pid */\n      dup6\n      swap1\n        /* \"contracts/AllocationStaking.sol\":13790:13800  msg.sender */\n      caller\n      swap1\n        /* \"contracts/AllocationStaking.sol\":13781:13816  Withdraw(msg.sender, _pid, _amount) */\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/AllocationStaking.sol\":13781:13816  Withdraw(msg.sender, _pid, _amount) */\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/AllocationStaking.sol\":12666:13823  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/AllocationStaking.sol\":12610:13823  function withdraw(uint256 _pid, uint256 _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/AllocationStaking.sol\":10425:11316  function updatePool(uint256 _pid) public {... */\n    tag_73:\n        /* \"contracts/AllocationStaking.sol\":10476:10497  PoolInfo storage pool */\n      0x00\n        /* \"contracts/AllocationStaking.sol\":10500:10508  poolInfo */\n      0x05\n        /* \"contracts/AllocationStaking.sol\":10509:10513  _pid */\n      dup3\n        /* \"contracts/AllocationStaking.sol\":10500:10514  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_205\n      jumpi\n      tag_205\n      tag_180\n      jump\t// in\n    tag_205:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/AllocationStaking.sol\":10476:10514  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/AllocationStaking.sol\":10525:10546  uint256 lastTimestamp */\n      0x00\n        /* \"contracts/AllocationStaking.sol\":10567:10579  endTimestamp */\n      sload(0x09)\n        /* \"contracts/AllocationStaking.sol\":10549:10564  block.timestamp */\n      timestamp\n        /* \"contracts/AllocationStaking.sol\":10549:10579  block.timestamp < endTimestamp */\n      lt\n        /* \"contracts/AllocationStaking.sol\":10549:10612  block.timestamp < endTimestamp ? block.timestamp : endTimestamp */\n      tag_207\n      jumpi\n        /* \"contracts/AllocationStaking.sol\":10600:10612  endTimestamp */\n      sload(0x09)\n        /* \"contracts/AllocationStaking.sol\":10549:10612  block.timestamp < endTimestamp ? block.timestamp : endTimestamp */\n      jump(tag_208)\n    tag_207:\n        /* \"contracts/AllocationStaking.sol\":10582:10597  block.timestamp */\n      timestamp\n        /* \"contracts/AllocationStaking.sol\":10549:10612  block.timestamp < endTimestamp ? block.timestamp : endTimestamp */\n    tag_208:\n        /* \"contracts/AllocationStaking.sol\":10525:10612  uint256 lastTimestamp = block.timestamp < endTimestamp ? block.timestamp : endTimestamp */\n      swap1\n      pop\n        /* \"contracts/AllocationStaking.sol\":10644:10648  pool */\n      dup2\n        /* \"contracts/AllocationStaking.sol\":10644:10668  pool.lastRewardTimestamp */\n      0x02\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":10627:10640  lastTimestamp */\n      dup2\n        /* \"contracts/AllocationStaking.sol\":10627:10668  lastTimestamp <= pool.lastRewardTimestamp */\n      gt\n        /* \"contracts/AllocationStaking.sol\":10623:10735  if (lastTimestamp <= pool.lastRewardTimestamp) {... */\n      tag_209\n      jumpi\n      pop\n        /* \"contracts/AllocationStaking.sol\":10700:10724  pool.lastRewardTimestamp */\n      0x02\n      dup2\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":10623:10735  if (lastTimestamp <= pool.lastRewardTimestamp) {... */\n    tag_209:\n        /* \"contracts/AllocationStaking.sol\":10764:10782  pool.totalDeposits */\n      0x04\n      dup3\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":10745:10761  uint256 lpSupply */\n      0x00\n        /* \"contracts/AllocationStaking.sol\":10797:10810  lpSupply == 0 */\n      dup2\n      swap1\n      sub\n        /* \"contracts/AllocationStaking.sol\":10793:10897  if (lpSupply == 0) {... */\n      tag_210\n      jumpi\n      pop\n        /* \"contracts/AllocationStaking.sol\":10826:10850  pool.lastRewardTimestamp */\n      0x02\n      swap1\n      swap2\n      add\n        /* \"contracts/AllocationStaking.sol\":10826:10866  pool.lastRewardTimestamp = lastTimestamp */\n      sstore\n      pop\n        /* \"contracts/AllocationStaking.sol\":10425:11316  function updatePool(uint256 _pid) public {... */\n      jump\t// out\n        /* \"contracts/AllocationStaking.sol\":10793:10897  if (lpSupply == 0) {... */\n    tag_210:\n        /* \"contracts/AllocationStaking.sol\":10907:10926  uint256 nrOfSeconds */\n      0x00\n        /* \"contracts/AllocationStaking.sol\":10929:10972  lastTimestamp.sub(pool.lastRewardTimestamp) */\n      tag_211\n        /* \"contracts/AllocationStaking.sol\":10947:10951  pool */\n      dup5\n        /* \"contracts/AllocationStaking.sol\":10947:10971  pool.lastRewardTimestamp */\n      0x02\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":10929:10942  lastTimestamp */\n      dup5\n        /* \"contracts/AllocationStaking.sol\":10929:10946  lastTimestamp.sub */\n      tag_176\n      swap1\n        /* \"contracts/AllocationStaking.sol\":10929:10972  lastTimestamp.sub(pool.lastRewardTimestamp) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_211:\n        /* \"contracts/AllocationStaking.sol\":10907:10972  uint256 nrOfSeconds = lastTimestamp.sub(pool.lastRewardTimestamp) */\n      swap1\n      pop\n        /* \"contracts/AllocationStaking.sol\":10982:11001  uint256 erc20Reward */\n      0x00\n        /* \"contracts/AllocationStaking.sol\":11004:11078  nrOfSeconds.mul(rewardPerSecond).mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_212\n        /* \"contracts/AllocationStaking.sol\":11062:11077  totalAllocPoint */\n      sload(0x07)\n        /* \"contracts/AllocationStaking.sol\":11004:11057  nrOfSeconds.mul(rewardPerSecond).mul(pool.allocPoint) */\n      tag_191\n        /* \"contracts/AllocationStaking.sol\":11041:11045  pool */\n      dup8\n        /* \"contracts/AllocationStaking.sol\":11041:11056  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":11004:11036  nrOfSeconds.mul(rewardPerSecond) */\n      tag_214\n        /* \"contracts/AllocationStaking.sol\":11020:11035  rewardPerSecond */\n      sload(0x02)\n        /* \"contracts/AllocationStaking.sol\":11004:11015  nrOfSeconds */\n      dup8\n        /* \"contracts/AllocationStaking.sol\":11004:11019  nrOfSeconds.mul */\n      tag_175\n      swap1\n        /* \"contracts/AllocationStaking.sol\":11004:11036  nrOfSeconds.mul(rewardPerSecond) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_214:\n        /* \"contracts/AllocationStaking.sol\":11004:11040  nrOfSeconds.mul(rewardPerSecond).mul */\n      swap1\n      tag_175\n        /* \"contracts/AllocationStaking.sol\":11004:11057  nrOfSeconds.mul(rewardPerSecond).mul(pool.allocPoint) */\n      jump\t// in\n        /* \"contracts/AllocationStaking.sol\":11004:11078  nrOfSeconds.mul(rewardPerSecond).mul(pool.allocPoint).div(totalAllocPoint) */\n    tag_212:\n        /* \"contracts/AllocationStaking.sol\":10982:11078  uint256 erc20Reward = nrOfSeconds.mul(rewardPerSecond).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/AllocationStaking.sol\":11153:11215  pool.accERC20PerShare.add(erc20Reward.mul(1e36).div(lpSupply)) */\n      tag_215\n        /* \"contracts/AllocationStaking.sol\":11179:11214  erc20Reward.mul(1e36).div(lpSupply) */\n      tag_216\n        /* \"contracts/AllocationStaking.sol\":11205:11213  lpSupply */\n      dup5\n        /* \"contracts/AllocationStaking.sol\":11179:11200  erc20Reward.mul(1e36) */\n      tag_191\n        /* \"contracts/AllocationStaking.sol\":10982:11078  uint256 erc20Reward = nrOfSeconds.mul(rewardPerSecond).mul(pool.allocPoint).div(totalAllocPoint) */\n      dup5\n      shl(0x24, 0x0c097ce7bc90715b34b9f1)\n        /* \"contracts/AllocationStaking.sol\":11179:11194  erc20Reward.mul */\n      tag_175\n        /* \"contracts/AllocationStaking.sol\":11179:11200  erc20Reward.mul(1e36) */\n      jump\t// in\n        /* \"contracts/AllocationStaking.sol\":11179:11214  erc20Reward.mul(1e36).div(lpSupply) */\n    tag_216:\n        /* \"contracts/AllocationStaking.sol\":11153:11174  pool.accERC20PerShare */\n      0x03\n      dup8\n      add\n      sload\n      swap1\n        /* \"contracts/AllocationStaking.sol\":11153:11178  pool.accERC20PerShare.add */\n      tag_161\n        /* \"contracts/AllocationStaking.sol\":11153:11215  pool.accERC20PerShare.add(erc20Reward.mul(1e36).div(lpSupply)) */\n      jump\t// in\n    tag_215:\n        /* \"contracts/AllocationStaking.sol\":11129:11150  pool.accERC20PerShare */\n      0x03\n      dup7\n      add\n        /* \"contracts/AllocationStaking.sol\":11129:11215  pool.accERC20PerShare = pool.accERC20PerShare.add(erc20Reward.mul(1e36).div(lpSupply)) */\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/AllocationStaking.sol\":11269:11293  pool.lastRewardTimestamp */\n      0x02\n      swap1\n      swap2\n      add\n        /* \"contracts/AllocationStaking.sol\":11269:11309  pool.lastRewardTimestamp = lastTimestamp */\n      sstore\n      pop\n        /* \"contracts/AllocationStaking.sol\":10425:11316  function updatePool(uint256 _pid) public {... */\n      jump\t// out\n        /* \"contracts/AllocationStaking.sol\":14779:15482  function emergencyWithdraw(uint256 _pid) public {... */\n    tag_76:\n        /* \"contracts/AllocationStaking.sol\":14837:14858  PoolInfo storage pool */\n      0x00\n        /* \"contracts/AllocationStaking.sol\":14861:14869  poolInfo */\n      0x05\n        /* \"contracts/AllocationStaking.sol\":14870:14874  _pid */\n      dup3\n        /* \"contracts/AllocationStaking.sol\":14861:14875  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_220\n      jumpi\n      tag_220\n      tag_180\n      jump\t// in\n    tag_220:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/AllocationStaking.sol\":14909:14923  userInfo[_pid] */\n      dup6\n      dup5\n      mstore\n        /* \"contracts/AllocationStaking.sol\":14909:14917  userInfo */\n      0x06\n        /* \"contracts/AllocationStaking.sol\":14909:14923  userInfo[_pid] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n        /* \"contracts/AllocationStaking.sol\":14924:14934  msg.sender */\n      caller\n        /* \"contracts/AllocationStaking.sol\":14909:14935  userInfo[_pid][msg.sender] */\n      dup7\n      mstore\n      swap1\n      swap3\n      mstore\n      swap3\n      keccak256\n        /* \"contracts/AllocationStaking.sol\":15006:15027  user.tokensUnlockTime */\n      0x02\n      dup2\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":14861:14875  poolInfo[_pid] */\n      0x05\n      swap1\n      swap3\n      mul\n      swap1\n      swap3\n      add\n      swap3\n      pop\n        /* \"contracts/AllocationStaking.sol\":15031:15046  block.timestamp */\n      timestamp\n      lt\n        /* \"contracts/AllocationStaking.sol\":15006:15046  user.tokensUnlockTime <= block.timestamp */\n      iszero\n        /* \"contracts/AllocationStaking.sol\":14998:15122  require(user.tokensUnlockTime <= block.timestamp,... */\n      tag_222\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8763:8765   */\n      0x20\n        /* \"contracts/AllocationStaking.sol\":14998:15122  require(user.tokensUnlockTime <= block.timestamp,... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8745:8766   */\n      mstore\n        /* \"#utility.yul\":8802:8804   */\n      0x3b\n        /* \"#utility.yul\":8782:8800   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8775:8805   */\n      mstore\n        /* \"#utility.yul\":8841:8875   */\n      0x456d657267656e637920776974686472617720626c6f636b656420647572696e\n        /* \"#utility.yul\":8821:8839   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8814:8876   */\n      mstore\n        /* \"#utility.yul\":8912:8941   */\n      0x672073616c6520616e6420636f6f6c646f776e20706572696f642e0000000000\n        /* \"#utility.yul\":8892:8910   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8885:8942   */\n      mstore\n        /* \"#utility.yul\":8959:8978   */\n      0x84\n      add\n        /* \"contracts/AllocationStaking.sol\":14998:15122  require(user.tokensUnlockTime <= block.timestamp,... */\n      tag_183\n        /* \"#utility.yul\":8561:8984   */\n      jump\n        /* \"contracts/AllocationStaking.sol\":14998:15122  require(user.tokensUnlockTime <= block.timestamp,... */\n    tag_222:\n        /* \"contracts/AllocationStaking.sol\":15212:15223  user.amount */\n      dup1\n      sload\n        /* \"contracts/AllocationStaking.sol\":15165:15177  pool.lpToken */\n      dup3\n      sload\n        /* \"contracts/AllocationStaking.sol\":15165:15224  pool.lpToken.safeTransfer(address(msg.sender), user.amount) */\n      tag_225\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AllocationStaking.sol\":15165:15177  pool.lpToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/AllocationStaking.sol\":15199:15209  msg.sender */\n      caller\n      swap1\n        /* \"contracts/AllocationStaking.sol\":15165:15190  pool.lpToken.safeTransfer */\n      tag_199\n        /* \"contracts/AllocationStaking.sol\":15165:15224  pool.lpToken.safeTransfer(address(msg.sender), user.amount) */\n      jump\t// in\n    tag_225:\n        /* \"contracts/AllocationStaking.sol\":15275:15286  user.amount */\n      dup1\n      sload\n        /* \"contracts/AllocationStaking.sol\":15239:15287  EmergencyWithdraw(msg.sender, _pid, user.amount) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/AllocationStaking.sol\":15269:15273  _pid */\n      dup4\n      swap1\n        /* \"contracts/AllocationStaking.sol\":15257:15267  msg.sender */\n      caller\n      swap1\n        /* \"contracts/AllocationStaking.sol\":15239:15287  EmergencyWithdraw(msg.sender, _pid, user.amount) */\n      0xbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/AllocationStaking.sol\":15239:15287  EmergencyWithdraw(msg.sender, _pid, user.amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/AllocationStaking.sol\":15374:15385  user.amount */\n      dup1\n      sload\n        /* \"contracts/AllocationStaking.sol\":15351:15369  pool.totalDeposits */\n      0x04\n      dup4\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":15351:15386  pool.totalDeposits.sub(user.amount) */\n      tag_227\n      swap2\n        /* \"contracts/AllocationStaking.sol\":15351:15373  pool.totalDeposits.sub */\n      tag_176\n        /* \"contracts/AllocationStaking.sol\":15351:15386  pool.totalDeposits.sub(user.amount) */\n      jump\t// in\n    tag_227:\n        /* \"contracts/AllocationStaking.sol\":15330:15348  pool.totalDeposits */\n      0x04\n      swap1\n      swap3\n      add\n        /* \"contracts/AllocationStaking.sol\":15330:15386  pool.totalDeposits = pool.totalDeposits.sub(user.amount) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/AllocationStaking.sol\":15410:15411  0 */\n      0x00\n        /* \"contracts/AllocationStaking.sol\":15396:15411  user.amount = 0 */\n      dup1\n      dup3\n      sstore\n        /* \"contracts/AllocationStaking.sol\":15421:15436  user.rewardDebt */\n      0x01\n      dup3\n      add\n        /* \"contracts/AllocationStaking.sol\":15421:15440  user.rewardDebt = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/AllocationStaking.sol\":15450:15471  user.tokensUnlockTime */\n      0x02\n      swap1\n      swap2\n      add\n        /* \"contracts/AllocationStaking.sol\":15450:15475  user.tokensUnlockTime = 0 */\n      sstore\n      pop\n        /* \"contracts/AllocationStaking.sol\":14779:15482  function emergencyWithdraw(uint256 _pid) public {... */\n      jump\t// out\n        /* \"contracts/AllocationStaking.sol\":4652:5142  function initialize(... */\n    tag_80:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      dup1\n      sload\n      shl(0x40, 0x01)\n      dup2\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_231\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_231:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_232\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_232:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_233\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_233:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      dup5\n      sload\n      not(0xffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_235\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      shl(0x40, 0x01)\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_235:\n        /* \"contracts/AllocationStaking.sol\":4866:4890  __Ownable_init(_ownable) */\n      tag_237\n        /* \"contracts/AllocationStaking.sol\":4881:4889  _ownable */\n      dup11\n        /* \"contracts/AllocationStaking.sol\":4866:4880  __Ownable_init */\n      tag_238\n        /* \"contracts/AllocationStaking.sol\":4866:4890  __Ownable_init(_ownable) */\n      jump\t// in\n    tag_237:\n        /* \"contracts/AllocationStaking.sol\":4901:4906  erc20 */\n      0x00\n        /* \"contracts/AllocationStaking.sol\":4901:4915  erc20 = _erc20 */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup13\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/AllocationStaking.sol\":4925:4940  rewardPerSecond */\n      0x02\n        /* \"contracts/AllocationStaking.sol\":4925:4959  rewardPerSecond = _rewardPerSecond */\n      dup11\n      swap1\n      sstore\n        /* \"contracts/AllocationStaking.sol\":4969:4983  startTimestamp */\n      0x08\n        /* \"contracts/AllocationStaking.sol\":4969:5001  startTimestamp = _startTimestamp */\n      dup10\n      swap1\n      sstore\n        /* \"contracts/AllocationStaking.sol\":5011:5023  endTimestamp */\n      0x09\n        /* \"contracts/AllocationStaking.sol\":5011:5041  endTimestamp = _startTimestamp */\n      dup10\n      swap1\n      sstore\n        /* \"contracts/AllocationStaking.sol\":5092:5104  salesFactory */\n      0x04\n        /* \"contracts/AllocationStaking.sol\":5092:5135  salesFactory = ISalesFactory(_salesFactory) */\n      dup1\n      sload\n      swap3\n      dup10\n      and\n      swap3\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_239\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":9142:9192   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"#utility.yul\":9130:9132   */\n      0x20\n        /* \"#utility.yul\":9115:9133   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/AllocationStaking.sol\":4652:5142  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/AllocationStaking.sol\":9565:9740  function massUpdatePools() public {... */\n    tag_85:\n        /* \"contracts/AllocationStaking.sol\":9626:9634  poolInfo */\n      0x05\n        /* \"contracts/AllocationStaking.sol\":9626:9641  poolInfo.length */\n      sload\n        /* \"contracts/AllocationStaking.sol\":9609:9623  uint256 length */\n      0x00\n        /* \"contracts/AllocationStaking.sol\":9651:9734  for (uint256 pid = 0; pid < length; ++pid) {... */\n    tag_243:\n        /* \"contracts/AllocationStaking.sol\":9679:9685  length */\n      dup2\n        /* \"contracts/AllocationStaking.sol\":9673:9676  pid */\n      dup2\n        /* \"contracts/AllocationStaking.sol\":9673:9685  pid < length */\n      lt\n        /* \"contracts/AllocationStaking.sol\":9651:9734  for (uint256 pid = 0; pid < length; ++pid) {... */\n      iszero\n      tag_244\n      jumpi\n        /* \"contracts/AllocationStaking.sol\":9708:9723  updatePool(pid) */\n      tag_246\n        /* \"contracts/AllocationStaking.sol\":9719:9722  pid */\n      dup2\n        /* \"contracts/AllocationStaking.sol\":9708:9718  updatePool */\n      tag_73\n        /* \"contracts/AllocationStaking.sol\":9708:9723  updatePool(pid) */\n      jump\t// in\n    tag_246:\n        /* \"contracts/AllocationStaking.sol\":9687:9692  ++pid */\n      0x01\n      add\n        /* \"contracts/AllocationStaking.sol\":9651:9734  for (uint256 pid = 0; pid < length; ++pid) {... */\n      jump(tag_243)\n    tag_244:\n      pop\n        /* \"contracts/AllocationStaking.sol\":9599:9740  {... */\n      pop\n        /* \"contracts/AllocationStaking.sol\":9565:9740  function massUpdatePools() public {... */\n      jump\t// out\n        /* \"contracts/AllocationStaking.sol\":7084:7382  function set(uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {... */\n    tag_89:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_248\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_154\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_248:\n        /* \"contracts/AllocationStaking.sol\":7181:7192  _withUpdate */\n      dup1\n        /* \"contracts/AllocationStaking.sol\":7177:7236  if (_withUpdate) {... */\n      iszero\n      tag_251\n      jumpi\n        /* \"contracts/AllocationStaking.sol\":7208:7225  massUpdatePools() */\n      tag_251\n        /* \"contracts/AllocationStaking.sol\":7208:7223  massUpdatePools */\n      tag_85\n        /* \"contracts/AllocationStaking.sol\":7208:7225  massUpdatePools() */\n      jump\t// in\n    tag_251:\n        /* \"contracts/AllocationStaking.sol\":7263:7326  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      tag_252\n        /* \"contracts/AllocationStaking.sol\":7314:7325  _allocPoint */\n      dup3\n        /* \"contracts/AllocationStaking.sol\":7263:7309  totalAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      tag_253\n        /* \"contracts/AllocationStaking.sol\":7283:7291  poolInfo */\n      0x05\n        /* \"contracts/AllocationStaking.sol\":7292:7296  _pid */\n      dup7\n        /* \"contracts/AllocationStaking.sol\":7283:7297  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_255\n      jumpi\n      tag_255\n      tag_180\n      jump\t// in\n    tag_255:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/AllocationStaking.sol\":7283:7308  poolInfo[_pid].allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":7263:7278  totalAllocPoint */\n      sload(0x07)\n        /* \"contracts/AllocationStaking.sol\":7263:7282  totalAllocPoint.sub */\n      tag_176\n      swap1\n        /* \"contracts/AllocationStaking.sol\":7263:7309  totalAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_253:\n        /* \"contracts/AllocationStaking.sol\":7263:7313  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add */\n      swap1\n      tag_161\n        /* \"contracts/AllocationStaking.sol\":7263:7326  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      jump\t// in\n    tag_252:\n        /* \"contracts/AllocationStaking.sol\":7245:7260  totalAllocPoint */\n      0x07\n        /* \"contracts/AllocationStaking.sol\":7245:7326  totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AllocationStaking.sol\":7364:7375  _allocPoint */\n      dup2\n        /* \"contracts/AllocationStaking.sol\":7336:7344  poolInfo */\n      0x05\n        /* \"contracts/AllocationStaking.sol\":7345:7349  _pid */\n      dup5\n        /* \"contracts/AllocationStaking.sol\":7336:7350  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_258\n      jumpi\n      tag_258\n      tag_180\n      jump\t// in\n    tag_258:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/AllocationStaking.sol\":7336:7361  poolInfo[_pid].allocPoint */\n      0x01\n      add\n        /* \"contracts/AllocationStaking.sol\":7336:7375  poolInfo[_pid].allocPoint = _allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AllocationStaking.sol\":7084:7382  function set(uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_91:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_261\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_154\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_263\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_264\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/AllocationStaking.sol\":7441:7609  function deposited(uint256 _pid, address _user) public view returns (uint256) {... */\n    tag_111:\n        /* \"contracts/AllocationStaking.sol\":7510:7517  uint256 */\n      0x00\n        /* \"contracts/AllocationStaking.sol\":7553:7567  userInfo[_pid] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/AllocationStaking.sol\":7553:7561  userInfo */\n      0x06\n        /* \"contracts/AllocationStaking.sol\":7553:7567  userInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AllocationStaking.sol\":7553:7574  userInfo[_pid][_user] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/AllocationStaking.sol\":7591:7602  user.amount */\n      sload\n        /* \"contracts/AllocationStaking.sol\":7441:7609  function deposited(uint256 _pid, address _user) public view returns (uint256) {... */\n    tag_268:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/AllocationStaking.sol\":13907:14654  function compound(uint256 _pid) public {... */\n    tag_118:\n        /* \"contracts/AllocationStaking.sol\":13956:13977  PoolInfo storage pool */\n      0x00\n        /* \"contracts/AllocationStaking.sol\":13980:13988  poolInfo */\n      0x05\n        /* \"contracts/AllocationStaking.sol\":13989:13993  _pid */\n      dup3\n        /* \"contracts/AllocationStaking.sol\":13980:13994  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_271\n      jumpi\n      tag_271\n      tag_180\n      jump\t// in\n    tag_271:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/AllocationStaking.sol\":14028:14042  userInfo[_pid] */\n      dup6\n      dup5\n      mstore\n        /* \"contracts/AllocationStaking.sol\":14028:14036  userInfo */\n      0x06\n        /* \"contracts/AllocationStaking.sol\":14028:14042  userInfo[_pid] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n        /* \"contracts/AllocationStaking.sol\":14043:14053  msg.sender */\n      caller\n        /* \"contracts/AllocationStaking.sol\":14028:14054  userInfo[_pid][msg.sender] */\n      dup7\n      mstore\n      swap1\n      swap3\n      mstore\n      swap3\n      keccak256\n        /* \"contracts/AllocationStaking.sol\":13980:13994  poolInfo[_pid] */\n      0x05\n      swap1\n      swap2\n      mul\n      swap1\n      swap2\n      add\n      swap2\n      pop\n        /* \"contracts/AllocationStaking.sol\":14163:14179  updatePool(_pid) */\n      tag_276\n        /* \"contracts/AllocationStaking.sol\":14174:14178  _pid */\n      dup4\n        /* \"contracts/AllocationStaking.sol\":14163:14173  updatePool */\n      tag_73\n        /* \"contracts/AllocationStaking.sol\":14163:14179  updatePool(_pid) */\n      jump\t// in\n    tag_276:\n        /* \"contracts/AllocationStaking.sol\":14190:14211  uint256 pendingAmount */\n      0x00\n        /* \"contracts/AllocationStaking.sol\":14214:14283  user.amount.mul(pool.accERC20PerShare).div(1e36).sub(user.rewardDebt) */\n      tag_277\n        /* \"contracts/AllocationStaking.sol\":14267:14271  user */\n      dup3\n        /* \"contracts/AllocationStaking.sol\":14267:14282  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":14214:14262  user.amount.mul(pool.accERC20PerShare).div(1e36) */\n      tag_172\n      shl(0x24, 0x0c097ce7bc90715b34b9f1)\n        /* \"contracts/AllocationStaking.sol\":14214:14252  user.amount.mul(pool.accERC20PerShare) */\n      tag_191\n        /* \"contracts/AllocationStaking.sol\":14230:14234  pool */\n      dup8\n        /* \"contracts/AllocationStaking.sol\":14230:14251  pool.accERC20PerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":14214:14218  user */\n      dup8\n        /* \"contracts/AllocationStaking.sol\":14214:14225  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":14214:14229  user.amount.mul */\n      tag_175\n      swap1\n        /* \"contracts/AllocationStaking.sol\":14214:14252  user.amount.mul(pool.accERC20PerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/AllocationStaking.sol\":14214:14283  user.amount.mul(pool.accERC20PerShare).div(1e36).sub(user.rewardDebt) */\n    tag_277:\n        /* \"contracts/AllocationStaking.sol\":14351:14362  user.amount */\n      dup3\n      sload\n        /* \"contracts/AllocationStaking.sol\":14190:14283  uint256 pendingAmount = user.amount.mul(pool.accERC20PerShare).div(1e36).sub(user.rewardDebt) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/AllocationStaking.sol\":14351:14381  user.amount.add(pendingAmount) */\n      tag_280\n      swap1\n        /* \"contracts/AllocationStaking.sol\":14190:14283  uint256 pendingAmount = user.amount.mul(pool.accERC20PerShare).div(1e36).sub(user.rewardDebt) */\n      dup3\n        /* \"contracts/AllocationStaking.sol\":14351:14366  user.amount.add */\n      tag_161\n        /* \"contracts/AllocationStaking.sol\":14351:14381  user.amount.add(pendingAmount) */\n      jump\t// in\n    tag_280:\n        /* \"contracts/AllocationStaking.sol\":14337:14381  user.amount = user.amount.add(pendingAmount) */\n      dup1\n      dup4\n      sstore\n        /* \"contracts/AllocationStaking.sol\":14425:14446  pool.accERC20PerShare */\n      0x03\n      dup5\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":14409:14457  user.amount.mul(pool.accERC20PerShare).div(1e36) */\n      tag_281\n      swap2\n      shl(0x24, 0x0c097ce7bc90715b34b9f1)\n        /* \"contracts/AllocationStaking.sol\":14452:14456  1e36 */\n      swap2\n        /* \"contracts/AllocationStaking.sol\":14409:14447  user.amount.mul(pool.accERC20PerShare) */\n      tag_191\n      swap2\n        /* \"contracts/AllocationStaking.sol\":14337:14381  user.amount = user.amount.add(pendingAmount) */\n      swap1\n        /* \"contracts/AllocationStaking.sol\":14409:14424  user.amount.mul */\n      tag_175\n        /* \"contracts/AllocationStaking.sol\":14409:14447  user.amount.mul(pool.accERC20PerShare) */\n      jump\t// in\n        /* \"contracts/AllocationStaking.sol\":14409:14457  user.amount.mul(pool.accERC20PerShare).div(1e36) */\n    tag_281:\n        /* \"contracts/AllocationStaking.sol\":14391:14406  user.rewardDebt */\n      0x01\n      dup4\n      add\n        /* \"contracts/AllocationStaking.sol\":14391:14457  user.rewardDebt = user.amount.mul(pool.accERC20PerShare).div(1e36) */\n      sstore\n        /* \"contracts/AllocationStaking.sol\":14531:14549  pool.totalDeposits */\n      0x04\n      dup4\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":14531:14568  pool.totalDeposits.add(pendingAmount) */\n      tag_283\n      swap1\n        /* \"contracts/AllocationStaking.sol\":14554:14567  pendingAmount */\n      dup3\n        /* \"contracts/AllocationStaking.sol\":14531:14553  pool.totalDeposits.add */\n      tag_161\n        /* \"contracts/AllocationStaking.sol\":14531:14568  pool.totalDeposits.add(pendingAmount) */\n      jump\t// in\n    tag_283:\n        /* \"contracts/AllocationStaking.sol\":14510:14528  pool.totalDeposits */\n      0x04\n      dup5\n      add\n        /* \"contracts/AllocationStaking.sol\":14510:14568  pool.totalDeposits = pool.totalDeposits.add(pendingAmount) */\n      sstore\n        /* \"contracts/AllocationStaking.sol\":14635:14646  user.amount */\n      dup2\n      sload\n        /* \"contracts/AllocationStaking.sol\":14583:14647  CompoundedEarnings(msg.sender, _pid, pendingAmount, user.amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":9781:9806   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":9837:9839   */\n      0x20\n        /* \"#utility.yul\":9822:9840   */\n      dup2\n      add\n        /* \"#utility.yul\":9815:9849   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/AllocationStaking.sol\":14614:14618  _pid */\n      dup6\n      swap2\n        /* \"contracts/AllocationStaking.sol\":14602:14612  msg.sender */\n      caller\n      swap2\n        /* \"contracts/AllocationStaking.sol\":14583:14647  CompoundedEarnings(msg.sender, _pid, pendingAmount, user.amount) */\n      0x92f0bdf80f3916a4279540865e94ef327cf48639092106cca4bddc9bb1de4a86\n      swap2\n        /* \"#utility.yul\":9754:9772   */\n      add\n        /* \"contracts/AllocationStaking.sol\":14583:14647  CompoundedEarnings(msg.sender, _pid, pendingAmount, user.amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/AllocationStaking.sol\":13946:14654  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/AllocationStaking.sol\":13907:14654  function compound(uint256 _pid) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/AllocationStaking.sol\":5706:6019  function fund(uint256 _amount) public {... */\n    tag_121:\n        /* \"contracts/AllocationStaking.sol\":5780:5792  endTimestamp */\n      sload(0x09)\n        /* \"contracts/AllocationStaking.sol\":5762:5777  block.timestamp */\n      timestamp\n        /* \"contracts/AllocationStaking.sol\":5762:5792  block.timestamp < endTimestamp */\n      lt\n        /* \"contracts/AllocationStaking.sol\":5754:5831  require(block.timestamp < endTimestamp, \"fund: too late, the farm is closed\") */\n      tag_287\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10062:10064   */\n      0x20\n        /* \"contracts/AllocationStaking.sol\":5754:5831  require(block.timestamp < endTimestamp, \"fund: too late, the farm is closed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10044:10065   */\n      mstore\n        /* \"#utility.yul\":10101:10103   */\n      0x22\n        /* \"#utility.yul\":10081:10099   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10074:10104   */\n      mstore\n        /* \"#utility.yul\":10140:10174   */\n      0x66756e643a20746f6f206c6174652c20746865206661726d20697320636c6f73\n        /* \"#utility.yul\":10120:10138   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10113:10175   */\n      mstore\n      shl(0xf2, 0x1959)\n        /* \"#utility.yul\":10191:10209   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10184:10216   */\n      mstore\n        /* \"#utility.yul\":10233:10252   */\n      0x84\n      add\n        /* \"contracts/AllocationStaking.sol\":5754:5831  require(block.timestamp < endTimestamp, \"fund: too late, the farm is closed\") */\n      tag_183\n        /* \"#utility.yul\":9860:10258   */\n      jump\n        /* \"contracts/AllocationStaking.sol\":5754:5831  require(block.timestamp < endTimestamp, \"fund: too late, the farm is closed\") */\n    tag_287:\n        /* \"contracts/AllocationStaking.sol\":5841:5846  erc20 */\n      sload(0x00)\n        /* \"contracts/AllocationStaking.sol\":5841:5908  erc20.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      tag_290\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AllocationStaking.sol\":5841:5846  erc20 */\n      and\n        /* \"contracts/AllocationStaking.sol\":5872:5882  msg.sender */\n      caller\n        /* \"contracts/AllocationStaking.sol\":5893:5897  this */\n      address\n        /* \"contracts/AllocationStaking.sol\":5900:5907  _amount */\n      dup5\n        /* \"contracts/AllocationStaking.sol\":5841:5863  erc20.safeTransferFrom */\n      tag_291\n        /* \"contracts/AllocationStaking.sol\":5841:5908  erc20.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      jump\t// in\n    tag_290:\n        /* \"contracts/AllocationStaking.sol\":5946:5961  rewardPerSecond */\n      sload(0x02)\n        /* \"contracts/AllocationStaking.sol\":5934:5962  _amount.div(rewardPerSecond) */\n      tag_292\n      swap1\n        /* \"contracts/AllocationStaking.sol\":5934:5941  _amount */\n      dup3\n      swap1\n        /* \"contracts/AllocationStaking.sol\":5934:5945  _amount.div */\n      tag_192\n        /* \"contracts/AllocationStaking.sol\":5934:5962  _amount.div(rewardPerSecond) */\n      jump\t// in\n    tag_292:\n        /* \"contracts/AllocationStaking.sol\":5918:5930  endTimestamp */\n      0x09\n      0x00\n        /* \"contracts/AllocationStaking.sol\":5918:5962  endTimestamp += _amount.div(rewardPerSecond) */\n      dup3\n      dup3\n      sload\n      tag_293\n      swap2\n      swap1\n      tag_294\n      jump\t// in\n    tag_293:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/AllocationStaking.sol\":5987:5999  totalRewards */\n      sload(0x03)\n        /* \"contracts/AllocationStaking.sol\":5987:6012  totalRewards.add(_amount) */\n      tag_295\n      swap1\n        /* \"contracts/AllocationStaking.sol\":6004:6011  _amount */\n      dup3\n        /* \"contracts/AllocationStaking.sol\":5987:6003  totalRewards.add */\n      tag_161\n        /* \"contracts/AllocationStaking.sol\":5987:6012  totalRewards.add(_amount) */\n      jump\t// in\n    tag_295:\n        /* \"contracts/AllocationStaking.sol\":5972:5984  totalRewards */\n      0x03\n        /* \"contracts/AllocationStaking.sol\":5972:6012  totalRewards = totalRewards.add(_amount) */\n      sstore\n      pop\n        /* \"contracts/AllocationStaking.sol\":5706:6019  function fund(uint256 _amount) public {... */\n      jump\t// out\n        /* \"contracts/AllocationStaking.sol\":11427:12567  function deposit(uint256 _pid, uint256 _amount) public {... */\n    tag_124:\n        /* \"contracts/AllocationStaking.sol\":11492:11513  PoolInfo storage pool */\n      0x00\n        /* \"contracts/AllocationStaking.sol\":11516:11524  poolInfo */\n      0x05\n        /* \"contracts/AllocationStaking.sol\":11525:11529  _pid */\n      dup4\n        /* \"contracts/AllocationStaking.sol\":11516:11530  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_298\n      jumpi\n      tag_298\n      tag_180\n      jump\t// in\n    tag_298:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/AllocationStaking.sol\":11564:11578  userInfo[_pid] */\n      dup7\n      dup5\n      mstore\n        /* \"contracts/AllocationStaking.sol\":11564:11572  userInfo */\n      0x06\n        /* \"contracts/AllocationStaking.sol\":11564:11578  userInfo[_pid] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n        /* \"contracts/AllocationStaking.sol\":11579:11589  msg.sender */\n      caller\n        /* \"contracts/AllocationStaking.sol\":11564:11590  userInfo[_pid][msg.sender] */\n      dup7\n      mstore\n      swap1\n      swap3\n      mstore\n      swap3\n      keccak256\n        /* \"contracts/AllocationStaking.sol\":11516:11530  poolInfo[_pid] */\n      0x05\n      swap1\n      swap2\n      mul\n      swap1\n      swap2\n      add\n      swap2\n      pop\n        /* \"contracts/AllocationStaking.sol\":11625:11632  _amount */\n      dup3\n        /* \"contracts/AllocationStaking.sol\":11666:11682  updatePool(_pid) */\n      tag_300\n        /* \"contracts/AllocationStaking.sol\":11573:11577  _pid */\n      dup6\n        /* \"contracts/AllocationStaking.sol\":11666:11676  updatePool */\n      tag_73\n        /* \"contracts/AllocationStaking.sol\":11666:11682  updatePool(_pid) */\n      jump\t// in\n    tag_300:\n        /* \"contracts/AllocationStaking.sol\":11816:11827  user.amount */\n      dup2\n      sload\n        /* \"contracts/AllocationStaking.sol\":11816:11831  user.amount > 0 */\n      iszero\n        /* \"contracts/AllocationStaking.sol\":11812:12005  if (user.amount > 0) {... */\n      tag_301\n      jumpi\n        /* \"contracts/AllocationStaking.sol\":11847:11868  uint256 pendingAmount */\n      0x00\n        /* \"contracts/AllocationStaking.sol\":11871:11940  user.amount.mul(pool.accERC20PerShare).div(1e36).sub(user.rewardDebt) */\n      tag_302\n        /* \"contracts/AllocationStaking.sol\":11924:11928  user */\n      dup4\n        /* \"contracts/AllocationStaking.sol\":11924:11939  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":11871:11919  user.amount.mul(pool.accERC20PerShare).div(1e36) */\n      tag_172\n      shl(0x24, 0x0c097ce7bc90715b34b9f1)\n        /* \"contracts/AllocationStaking.sol\":11871:11909  user.amount.mul(pool.accERC20PerShare) */\n      tag_191\n        /* \"contracts/AllocationStaking.sol\":11887:11891  pool */\n      dup9\n        /* \"contracts/AllocationStaking.sol\":11887:11908  pool.accERC20PerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":11871:11875  user */\n      dup9\n        /* \"contracts/AllocationStaking.sol\":11871:11882  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":11871:11886  user.amount.mul */\n      tag_175\n      swap1\n        /* \"contracts/AllocationStaking.sol\":11871:11909  user.amount.mul(pool.accERC20PerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/AllocationStaking.sol\":11871:11940  user.amount.mul(pool.accERC20PerShare).div(1e36).sub(user.rewardDebt) */\n    tag_302:\n        /* \"contracts/AllocationStaking.sol\":11847:11940  uint256 pendingAmount = user.amount.mul(pool.accERC20PerShare).div(1e36).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/AllocationStaking.sol\":11954:11994  erc20Transfer(msg.sender, pendingAmount) */\n      tag_305\n        /* \"contracts/AllocationStaking.sol\":11968:11978  msg.sender */\n      caller\n        /* \"contracts/AllocationStaking.sol\":11980:11993  pendingAmount */\n      dup3\n        /* \"contracts/AllocationStaking.sol\":11954:11967  erc20Transfer */\n      tag_194\n        /* \"contracts/AllocationStaking.sol\":11954:11994  erc20Transfer(msg.sender, pendingAmount) */\n      jump\t// in\n    tag_305:\n        /* \"contracts/AllocationStaking.sol\":11833:12005  {... */\n      pop\n        /* \"contracts/AllocationStaking.sol\":11812:12005  if (user.amount > 0) {... */\n    tag_301:\n        /* \"contracts/AllocationStaking.sol\":12090:12102  pool.lpToken */\n      dup3\n      sload\n        /* \"contracts/AllocationStaking.sol\":12090:12164  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      tag_306\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AllocationStaking.sol\":12090:12102  pool.lpToken */\n      and\n        /* \"contracts/AllocationStaking.sol\":12128:12138  msg.sender */\n      caller\n        /* \"contracts/AllocationStaking.sol\":12149:12153  this */\n      address\n        /* \"contracts/AllocationStaking.sol\":12156:12163  _amount */\n      dup8\n        /* \"contracts/AllocationStaking.sol\":12090:12119  pool.lpToken.safeTransferFrom */\n      tag_291\n        /* \"contracts/AllocationStaking.sol\":12090:12164  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      jump\t// in\n    tag_306:\n        /* \"contracts/AllocationStaking.sol\":12236:12254  pool.totalDeposits */\n      0x04\n      dup4\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":12236:12273  pool.totalDeposits.add(depositAmount) */\n      tag_307\n      swap1\n        /* \"contracts/AllocationStaking.sol\":12259:12272  depositAmount */\n      dup3\n        /* \"contracts/AllocationStaking.sol\":12236:12258  pool.totalDeposits.add */\n      tag_161\n        /* \"contracts/AllocationStaking.sol\":12236:12273  pool.totalDeposits.add(depositAmount) */\n      jump\t// in\n    tag_307:\n        /* \"contracts/AllocationStaking.sol\":12215:12233  pool.totalDeposits */\n      0x04\n      dup5\n      add\n        /* \"contracts/AllocationStaking.sol\":12215:12273  pool.totalDeposits = pool.totalDeposits.add(depositAmount) */\n      sstore\n        /* \"contracts/AllocationStaking.sol\":12337:12348  user.amount */\n      dup2\n      sload\n        /* \"contracts/AllocationStaking.sol\":12337:12367  user.amount.add(depositAmount) */\n      tag_308\n      swap1\n        /* \"contracts/AllocationStaking.sol\":12353:12366  depositAmount */\n      dup3\n        /* \"contracts/AllocationStaking.sol\":12337:12352  user.amount.add */\n      tag_161\n        /* \"contracts/AllocationStaking.sol\":12337:12367  user.amount.add(depositAmount) */\n      jump\t// in\n    tag_308:\n        /* \"contracts/AllocationStaking.sol\":12323:12367  user.amount = user.amount.add(depositAmount) */\n      dup1\n      dup4\n      sstore\n        /* \"contracts/AllocationStaking.sol\":12442:12463  pool.accERC20PerShare */\n      0x03\n      dup5\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":12426:12474  user.amount.mul(pool.accERC20PerShare).div(1e36) */\n      tag_309\n      swap2\n      shl(0x24, 0x0c097ce7bc90715b34b9f1)\n        /* \"contracts/AllocationStaking.sol\":12469:12473  1e36 */\n      swap2\n        /* \"contracts/AllocationStaking.sol\":12426:12464  user.amount.mul(pool.accERC20PerShare) */\n      tag_191\n      swap2\n        /* \"contracts/AllocationStaking.sol\":12323:12367  user.amount = user.amount.add(depositAmount) */\n      swap1\n        /* \"contracts/AllocationStaking.sol\":12426:12441  user.amount.mul */\n      tag_175\n        /* \"contracts/AllocationStaking.sol\":12426:12464  user.amount.mul(pool.accERC20PerShare) */\n      jump\t// in\n        /* \"contracts/AllocationStaking.sol\":12426:12474  user.amount.mul(pool.accERC20PerShare).div(1e36) */\n    tag_309:\n        /* \"contracts/AllocationStaking.sol\":12408:12423  user.rewardDebt */\n      0x01\n      dup4\n      add\n        /* \"contracts/AllocationStaking.sol\":12408:12474  user.rewardDebt = user.amount.mul(pool.accERC20PerShare).div(1e36) */\n      sstore\n        /* \"contracts/AllocationStaking.sol\":12520:12560  Deposit(msg.sender, _pid, depositAmount) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/AllocationStaking.sol\":12540:12544  _pid */\n      dup6\n      swap1\n        /* \"contracts/AllocationStaking.sol\":12528:12538  msg.sender */\n      caller\n      swap1\n        /* \"contracts/AllocationStaking.sol\":12520:12560  Deposit(msg.sender, _pid, depositAmount) */\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/AllocationStaking.sol\":12520:12560  Deposit(msg.sender, _pid, depositAmount) */\n      tag_202\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"contracts/AllocationStaking.sol\":7701:8574  function pending(uint256 _pid, address _user) public view returns (uint256) {... */\n    tag_127:\n        /* \"contracts/AllocationStaking.sol\":7768:7775  uint256 */\n      0x00\n        /* \"contracts/AllocationStaking.sol\":7787:7808  PoolInfo storage pool */\n      dup1\n        /* \"contracts/AllocationStaking.sol\":7811:7819  poolInfo */\n      0x05\n        /* \"contracts/AllocationStaking.sol\":7820:7824  _pid */\n      dup5\n        /* \"contracts/AllocationStaking.sol\":7811:7825  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_314\n      jumpi\n      tag_314\n      tag_180\n      jump\t// in\n    tag_314:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/AllocationStaking.sol\":7859:7873  userInfo[_pid] */\n      dup8\n      dup5\n      mstore\n        /* \"contracts/AllocationStaking.sol\":7859:7867  userInfo */\n      0x06\n        /* \"contracts/AllocationStaking.sol\":7859:7873  userInfo[_pid] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AllocationStaking.sol\":7859:7880  userInfo[_pid][_user] */\n      dup10\n      and\n      dup7\n      mstore\n      swap1\n      swap3\n      mstore\n      swap3\n      keccak256\n        /* \"contracts/AllocationStaking.sol\":7917:7938  pool.accERC20PerShare */\n      0x03\n        /* \"contracts/AllocationStaking.sol\":7811:7825  poolInfo[_pid] */\n      0x05\n      swap1\n      swap3\n      mul\n      swap1\n      swap3\n      add\n        /* \"contracts/AllocationStaking.sol\":7917:7938  pool.accERC20PerShare */\n      swap1\n      dup2\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":7968:7986  pool.totalDeposits */\n      0x04\n      dup3\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":8053:8077  pool.lastRewardTimestamp */\n      0x02\n      dup4\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":7811:7825  poolInfo[_pid] */\n      swap3\n      swap5\n      pop\n        /* \"contracts/AllocationStaking.sol\":7917:7938  pool.accERC20PerShare */\n      swap1\n      swap2\n        /* \"contracts/AllocationStaking.sol\":8035:8050  block.timestamp */\n      timestamp\n        /* \"contracts/AllocationStaking.sol\":8035:8077  block.timestamp > pool.lastRewardTimestamp */\n      gt\n        /* \"contracts/AllocationStaking.sol\":8035:8094  block.timestamp > pool.lastRewardTimestamp && lpSupply != 0 */\n      dup1\n      iszero\n      tag_316\n      jumpi\n      pop\n        /* \"contracts/AllocationStaking.sol\":8081:8094  lpSupply != 0 */\n      dup1\n      iszero\n      iszero\n        /* \"contracts/AllocationStaking.sol\":8035:8094  block.timestamp > pool.lastRewardTimestamp && lpSupply != 0 */\n    tag_316:\n        /* \"contracts/AllocationStaking.sol\":8031:8487  if (block.timestamp > pool.lastRewardTimestamp && lpSupply != 0) {... */\n      iszero\n      tag_317\n      jumpi\n        /* \"contracts/AllocationStaking.sol\":8110:8131  uint256 lastTimestamp */\n      0x00\n        /* \"contracts/AllocationStaking.sol\":8152:8164  endTimestamp */\n      sload(0x09)\n        /* \"contracts/AllocationStaking.sol\":8134:8149  block.timestamp */\n      timestamp\n        /* \"contracts/AllocationStaking.sol\":8134:8164  block.timestamp < endTimestamp */\n      lt\n        /* \"contracts/AllocationStaking.sol\":8134:8197  block.timestamp < endTimestamp ? block.timestamp : endTimestamp */\n      tag_318\n      jumpi\n        /* \"contracts/AllocationStaking.sol\":8185:8197  endTimestamp */\n      sload(0x09)\n        /* \"contracts/AllocationStaking.sol\":8134:8197  block.timestamp < endTimestamp ? block.timestamp : endTimestamp */\n      jump(tag_319)\n    tag_318:\n        /* \"contracts/AllocationStaking.sol\":8167:8182  block.timestamp */\n      timestamp\n        /* \"contracts/AllocationStaking.sol\":8134:8197  block.timestamp < endTimestamp ? block.timestamp : endTimestamp */\n    tag_319:\n        /* \"contracts/AllocationStaking.sol\":8110:8197  uint256 lastTimestamp = block.timestamp < endTimestamp ? block.timestamp : endTimestamp */\n      swap1\n      pop\n        /* \"contracts/AllocationStaking.sol\":8211:8230  uint256 nrOfSeconds */\n      0x00\n        /* \"contracts/AllocationStaking.sol\":8233:8276  lastTimestamp.sub(pool.lastRewardTimestamp) */\n      tag_320\n        /* \"contracts/AllocationStaking.sol\":8251:8255  pool */\n      dup7\n        /* \"contracts/AllocationStaking.sol\":8251:8275  pool.lastRewardTimestamp */\n      0x02\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":8233:8246  lastTimestamp */\n      dup4\n        /* \"contracts/AllocationStaking.sol\":8233:8250  lastTimestamp.sub */\n      tag_176\n      swap1\n        /* \"contracts/AllocationStaking.sol\":8233:8276  lastTimestamp.sub(pool.lastRewardTimestamp) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_320:\n        /* \"contracts/AllocationStaking.sol\":8211:8276  uint256 nrOfSeconds = lastTimestamp.sub(pool.lastRewardTimestamp) */\n      swap1\n      pop\n        /* \"contracts/AllocationStaking.sol\":8290:8309  uint256 erc20Reward */\n      0x00\n        /* \"contracts/AllocationStaking.sol\":8312:8386  nrOfSeconds.mul(rewardPerSecond).mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_321\n        /* \"contracts/AllocationStaking.sol\":8370:8385  totalAllocPoint */\n      sload(0x07)\n        /* \"contracts/AllocationStaking.sol\":8312:8365  nrOfSeconds.mul(rewardPerSecond).mul(pool.allocPoint) */\n      tag_191\n        /* \"contracts/AllocationStaking.sol\":8349:8353  pool */\n      dup10\n        /* \"contracts/AllocationStaking.sol\":8349:8364  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":8312:8344  nrOfSeconds.mul(rewardPerSecond) */\n      tag_214\n        /* \"contracts/AllocationStaking.sol\":8328:8343  rewardPerSecond */\n      sload(0x02)\n        /* \"contracts/AllocationStaking.sol\":8312:8323  nrOfSeconds */\n      dup8\n        /* \"contracts/AllocationStaking.sol\":8312:8327  nrOfSeconds.mul */\n      tag_175\n      swap1\n        /* \"contracts/AllocationStaking.sol\":8312:8344  nrOfSeconds.mul(rewardPerSecond) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/AllocationStaking.sol\":8312:8386  nrOfSeconds.mul(rewardPerSecond).mul(pool.allocPoint).div(totalAllocPoint) */\n    tag_321:\n        /* \"contracts/AllocationStaking.sol\":8290:8386  uint256 erc20Reward = nrOfSeconds.mul(rewardPerSecond).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/AllocationStaking.sol\":8419:8476  accERC20PerShare.add(erc20Reward.mul(1e36).div(lpSupply)) */\n      tag_324\n        /* \"contracts/AllocationStaking.sol\":8440:8475  erc20Reward.mul(1e36).div(lpSupply) */\n      tag_325\n        /* \"contracts/AllocationStaking.sol\":8466:8474  lpSupply */\n      dup6\n        /* \"contracts/AllocationStaking.sol\":8440:8461  erc20Reward.mul(1e36) */\n      tag_191\n        /* \"contracts/AllocationStaking.sol\":8290:8386  uint256 erc20Reward = nrOfSeconds.mul(rewardPerSecond).mul(pool.allocPoint).div(totalAllocPoint) */\n      dup5\n      shl(0x24, 0x0c097ce7bc90715b34b9f1)\n        /* \"contracts/AllocationStaking.sol\":8440:8455  erc20Reward.mul */\n      tag_175\n        /* \"contracts/AllocationStaking.sol\":8440:8461  erc20Reward.mul(1e36) */\n      jump\t// in\n        /* \"contracts/AllocationStaking.sol\":8440:8475  erc20Reward.mul(1e36).div(lpSupply) */\n    tag_325:\n        /* \"contracts/AllocationStaking.sol\":8419:8435  accERC20PerShare */\n      dup7\n      swap1\n        /* \"contracts/AllocationStaking.sol\":8419:8439  accERC20PerShare.add */\n      tag_161\n        /* \"contracts/AllocationStaking.sol\":8419:8476  accERC20PerShare.add(erc20Reward.mul(1e36).div(lpSupply)) */\n      jump\t// in\n    tag_324:\n        /* \"contracts/AllocationStaking.sol\":8400:8476  accERC20PerShare = accERC20PerShare.add(erc20Reward.mul(1e36).div(lpSupply)) */\n      swap5\n      pop\n        /* \"contracts/AllocationStaking.sol\":8096:8487  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/AllocationStaking.sol\":8031:8487  if (block.timestamp > pool.lastRewardTimestamp && lpSupply != 0) {... */\n    tag_317:\n        /* \"contracts/AllocationStaking.sol\":8503:8567  user.amount.mul(accERC20PerShare).div(1e36).sub(user.rewardDebt) */\n      tag_327\n        /* \"contracts/AllocationStaking.sol\":8551:8555  user */\n      dup4\n        /* \"contracts/AllocationStaking.sol\":8551:8566  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":8503:8546  user.amount.mul(accERC20PerShare).div(1e36) */\n      tag_172\n      shl(0x24, 0x0c097ce7bc90715b34b9f1)\n        /* \"contracts/AllocationStaking.sol\":8503:8536  user.amount.mul(accERC20PerShare) */\n      tag_191\n        /* \"contracts/AllocationStaking.sol\":8519:8535  accERC20PerShare */\n      dup7\n        /* \"contracts/AllocationStaking.sol\":8503:8507  user */\n      dup9\n        /* \"contracts/AllocationStaking.sol\":8503:8514  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":8503:8518  user.amount.mul */\n      tag_175\n      swap1\n        /* \"contracts/AllocationStaking.sol\":8503:8536  user.amount.mul(accERC20PerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/AllocationStaking.sol\":8503:8567  user.amount.mul(accERC20PerShare).div(1e36).sub(user.rewardDebt) */\n    tag_327:\n        /* \"contracts/AllocationStaking.sol\":8496:8567  return user.amount.mul(accERC20PerShare).div(1e36).sub(user.rewardDebt) */\n      swap8\n        /* \"contracts/AllocationStaking.sol\":7701:8574  function pending(uint256 _pid, address _user) public view returns (uint256) {... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/AllocationStaking.sol\":9746:10282  function setTokensUnlockTime(uint256 _pid, address _user, uint256 _tokensUnlockTime) external onlyVerifiedSales {... */\n    tag_132:\n        /* \"contracts/AllocationStaking.sol\":4538:4550  salesFactory */\n      0x04\n      dup1\n      sload\n        /* \"contracts/AllocationStaking.sol\":4538:4590  salesFactory.isSaleCreatedThroughFactory(msg.sender) */\n      mload(0x40)\n      shl(0xe3, 0x1400493d)\n      dup2\n      mstore\n        /* \"contracts/AllocationStaking.sol\":4579:4589  msg.sender */\n      caller\n        /* \"contracts/AllocationStaking.sol\":4538:4590  salesFactory.isSaleCreatedThroughFactory(msg.sender) */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":3545:3596   */\n      swap3\n      swap1\n      swap3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AllocationStaking.sol\":4538:4550  salesFactory */\n      and\n      swap1\n        /* \"contracts/AllocationStaking.sol\":4538:4578  salesFactory.isSaleCreatedThroughFactory */\n      0xa00249e8\n      swap1\n        /* \"#utility.yul\":3518:3536   */\n      0x24\n      add\n        /* \"contracts/AllocationStaking.sol\":4538:4590  salesFactory.isSaleCreatedThroughFactory(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_333\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_333:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_334\n      swap2\n      swap1\n      tag_335\n      jump\t// in\n    tag_334:\n        /* \"contracts/AllocationStaking.sol\":4530:4628  require(salesFactory.isSaleCreatedThroughFactory(msg.sender), \"Sale not created through factory.\") */\n      tag_336\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10845:10847   */\n      0x20\n        /* \"contracts/AllocationStaking.sol\":4530:4628  require(salesFactory.isSaleCreatedThroughFactory(msg.sender), \"Sale not created through factory.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10827:10848   */\n      mstore\n        /* \"#utility.yul\":10884:10886   */\n      0x21\n        /* \"#utility.yul\":10864:10882   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10857:10887   */\n      mstore\n        /* \"#utility.yul\":10923:10957   */\n      0x53616c65206e6f742063726561746564207468726f75676820666163746f7279\n        /* \"#utility.yul\":10903:10921   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10896:10958   */\n      mstore\n      shl(0xf9, 0x17)\n        /* \"#utility.yul\":10974:10992   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10967:10998   */\n      mstore\n        /* \"#utility.yul\":11015:11034   */\n      0x84\n      add\n        /* \"contracts/AllocationStaking.sol\":4530:4628  require(salesFactory.isSaleCreatedThroughFactory(msg.sender), \"Sale not created through factory.\") */\n      tag_183\n        /* \"#utility.yul\":10643:11040   */\n      jump\n        /* \"contracts/AllocationStaking.sol\":4530:4628  require(salesFactory.isSaleCreatedThroughFactory(msg.sender), \"Sale not created through factory.\") */\n    tag_336:\n        /* \"contracts/AllocationStaking.sol\":9868:9889  UserInfo storage user */\n      0x00\n        /* \"contracts/AllocationStaking.sol\":9892:9906  userInfo[_pid] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/AllocationStaking.sol\":9892:9900  userInfo */\n      0x06\n        /* \"contracts/AllocationStaking.sol\":9892:9906  userInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AllocationStaking.sol\":9892:9913  userInfo[_pid][_user] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/AllocationStaking.sol\":10022:10043  user.tokensUnlockTime */\n      0x02\n      dup2\n      add\n      sload\n        /* \"contracts/AllocationStaking.sol\":10047:10062  block.timestamp */\n      timestamp\n      lt\n        /* \"contracts/AllocationStaking.sol\":10022:10062  user.tokensUnlockTime <= block.timestamp */\n      iszero\n        /* \"contracts/AllocationStaking.sol\":10014:10063  require(user.tokensUnlockTime <= block.timestamp) */\n      tag_340\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_340:\n        /* \"contracts/AllocationStaking.sol\":10073:10094  user.tokensUnlockTime */\n      0x02\n      dup2\n      add\n        /* \"contracts/AllocationStaking.sol\":10073:10114  user.tokensUnlockTime = _tokensUnlockTime */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/AllocationStaking.sol\":10238:10258  user.salesRegistered */\n      0x03\n      add\n        /* \"contracts/AllocationStaking.sol\":10238:10275  user.salesRegistered.push(msg.sender) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"contracts/AllocationStaking.sol\":10264:10274  msg.sender */\n      caller\n        /* \"contracts/AllocationStaking.sol\":10238:10275  user.salesRegistered.push(msg.sender) */\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/AllocationStaking.sol\":9746:10282  function setTokensUnlockTime(uint256 _pid, address _user, uint256 _tokensUnlockTime) external onlyVerifiedSales {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_142:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_343\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_154\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_343:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_345\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3545:3596   */\n      mstore\n        /* \"#utility.yul\":3518:3536   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      tag_183\n        /* \"#utility.yul\":3385:3602   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_345:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_347\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_264\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_347:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/AllocationStaking.sol\":15820:16368  function getPendingAndDepositedForUsers(address [] memory users, uint pid)... */\n    tag_146:\n        /* \"contracts/AllocationStaking.sol\":15930:15947  uint256 [] memory */\n      0x60\n        /* \"contracts/AllocationStaking.sol\":15949:15966  uint256 [] memory */\n      dup1\n        /* \"contracts/AllocationStaking.sol\":15982:16008  uint256 [] memory deposits */\n      0x00\n        /* \"contracts/AllocationStaking.sol\":16025:16030  users */\n      dup5\n        /* \"contracts/AllocationStaking.sol\":16025:16037  users.length */\n      mload\n        /* \"contracts/AllocationStaking.sol\":16011:16038  new uint256[](users.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_350\n      jumpi\n      tag_350\n      tag_351\n      jump\t// in\n    tag_350:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_352\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_352:\n      pop\n        /* \"contracts/AllocationStaking.sol\":15982:16038  uint256 [] memory deposits = new uint256[](users.length) */\n      swap1\n      pop\n        /* \"contracts/AllocationStaking.sol\":16048:16074  uint256 [] memory earnings */\n      0x00\n        /* \"contracts/AllocationStaking.sol\":16091:16096  users */\n      dup6\n        /* \"contracts/AllocationStaking.sol\":16091:16103  users.length */\n      mload\n        /* \"contracts/AllocationStaking.sol\":16077:16104  new uint256[](users.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_354\n      jumpi\n      tag_354\n      tag_351\n      jump\t// in\n    tag_354:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_355\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_355:\n      pop\n        /* \"contracts/AllocationStaking.sol\":16048:16104  uint256 [] memory earnings = new uint256[](users.length) */\n      swap1\n      pop\n        /* \"contracts/AllocationStaking.sol\":16176:16182  uint i */\n      0x00\n        /* \"contracts/AllocationStaking.sol\":16171:16324  for (uint i = 0; i < users.length; i++) {... */\n    tag_356:\n        /* \"contracts/AllocationStaking.sol\":16192:16197  users */\n      dup7\n        /* \"contracts/AllocationStaking.sol\":16192:16204  users.length */\n      mload\n        /* \"contracts/AllocationStaking.sol\":16188:16189  i */\n      dup2\n        /* \"contracts/AllocationStaking.sol\":16188:16204  i < users.length */\n      lt\n        /* \"contracts/AllocationStaking.sol\":16171:16324  for (uint i = 0; i < users.length; i++) {... */\n      iszero\n      tag_357\n      jumpi\n        /* \"contracts/AllocationStaking.sol\":16239:16263  deposited(pid, users[i]) */\n      tag_359\n        /* \"contracts/AllocationStaking.sol\":16249:16252  pid */\n      dup7\n        /* \"contracts/AllocationStaking.sol\":16254:16259  users */\n      dup9\n        /* \"contracts/AllocationStaking.sol\":16260:16261  i */\n      dup4\n        /* \"contracts/AllocationStaking.sol\":16254:16262  users[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_361\n      jumpi\n      tag_361\n      tag_180\n      jump\t// in\n    tag_361:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/AllocationStaking.sol\":16239:16248  deposited */\n      tag_111\n        /* \"contracts/AllocationStaking.sol\":16239:16263  deposited(pid, users[i]) */\n      jump\t// in\n    tag_359:\n        /* \"contracts/AllocationStaking.sol\":16225:16233  deposits */\n      dup4\n        /* \"contracts/AllocationStaking.sol\":16234:16235  i */\n      dup3\n        /* \"contracts/AllocationStaking.sol\":16225:16236  deposits[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_363\n      jumpi\n      tag_363\n      tag_180\n      jump\t// in\n    tag_363:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/AllocationStaking.sol\":16225:16263  deposits[i] = deposited(pid, users[i]) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/AllocationStaking.sol\":16291:16313  pending(pid, users[i]) */\n      tag_364\n        /* \"contracts/AllocationStaking.sol\":16299:16302  pid */\n      dup7\n        /* \"contracts/AllocationStaking.sol\":16304:16309  users */\n      dup9\n        /* \"contracts/AllocationStaking.sol\":16310:16311  i */\n      dup4\n        /* \"contracts/AllocationStaking.sol\":16304:16312  users[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_366\n      jumpi\n      tag_366\n      tag_180\n      jump\t// in\n    tag_366:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/AllocationStaking.sol\":16291:16298  pending */\n      tag_127\n        /* \"contracts/AllocationStaking.sol\":16291:16313  pending(pid, users[i]) */\n      jump\t// in\n    tag_364:\n        /* \"contracts/AllocationStaking.sol\":16277:16285  earnings */\n      dup3\n        /* \"contracts/AllocationStaking.sol\":16286:16287  i */\n      dup3\n        /* \"contracts/AllocationStaking.sol\":16277:16288  earnings[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_368\n      jumpi\n      tag_368\n      tag_180\n      jump\t// in\n    tag_368:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/AllocationStaking.sol\":16277:16313  earnings[i] = pending(pid, users[i]) */\n      mstore\n        /* \"contracts/AllocationStaking.sol\":16206:16209  i++ */\n      0x01\n      add\n        /* \"contracts/AllocationStaking.sol\":16171:16324  for (uint i = 0; i < users.length; i++) {... */\n      jump(tag_356)\n    tag_357:\n      pop\n        /* \"contracts/AllocationStaking.sol\":16342:16350  deposits */\n      swap1\n      swap6\n      swap1\n      swap5\n      pop\n        /* \"contracts/AllocationStaking.sol\":15820:16368  function getPendingAndDepositedForUsers(address [] memory users, uint pid)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_154:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_372\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n    tag_372:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_263\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3545:3596   */\n      mstore\n        /* \"#utility.yul\":3518:3536   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_183\n        /* \"#utility.yul\":3385:3602   */\n      jump\n        /* \"contracts/math/SafeMath.sol\":2689:2864  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_161:\n        /* \"contracts/math/SafeMath.sol\":2747:2754  uint256 */\n      0x00\n      dup1\n        /* \"contracts/math/SafeMath.sol\":2778:2783  a + b */\n      tag_377\n        /* \"contracts/math/SafeMath.sol\":2782:2783  b */\n      dup4\n        /* \"contracts/math/SafeMath.sol\":2778:2779  a */\n      dup6\n        /* \"contracts/math/SafeMath.sol\":2778:2783  a + b */\n      tag_294\n      jump\t// in\n    tag_377:\n        /* \"contracts/math/SafeMath.sol\":2766:2783  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/math/SafeMath.sol\":2806:2807  a */\n      dup4\n        /* \"contracts/math/SafeMath.sol\":2801:2802  c */\n      dup2\n        /* \"contracts/math/SafeMath.sol\":2801:2807  c >= a */\n      lt\n      iszero\n        /* \"contracts/math/SafeMath.sol\":2793:2839  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_378\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11247:11249   */\n      0x20\n        /* \"contracts/math/SafeMath.sol\":2793:2839  require(c >= a, \"SafeMath: addition overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11229:11250   */\n      mstore\n        /* \"#utility.yul\":11286:11288   */\n      0x1b\n        /* \"#utility.yul\":11266:11284   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11259:11289   */\n      mstore\n        /* \"#utility.yul\":11325:11354   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":11305:11323   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11298:11355   */\n      mstore\n        /* \"#utility.yul\":11372:11390   */\n      0x64\n      add\n        /* \"contracts/math/SafeMath.sol\":2793:2839  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_183\n        /* \"#utility.yul\":11045:11396   */\n      jump\n        /* \"contracts/math/SafeMath.sol\":2793:2839  require(c >= a, \"SafeMath: addition overflow\") */\n    tag_378:\n        /* \"contracts/math/SafeMath.sol\":2856:2857  c */\n      swap4\n        /* \"contracts/math/SafeMath.sol\":2689:2864  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/math/SafeMath.sol\":3537:3752  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_175:\n        /* \"contracts/math/SafeMath.sol\":3595:3602  uint256 */\n      0x00\n        /* \"contracts/math/SafeMath.sol\":3618:3619  a */\n      dup3\n        /* \"contracts/math/SafeMath.sol\":3623:3624  0 */\n      0x00\n        /* \"contracts/math/SafeMath.sol\":3618:3624  a == 0 */\n      sub\n        /* \"contracts/math/SafeMath.sol\":3614:3634  if (a == 0) return 0 */\n      tag_382\n      jumpi\n      pop\n        /* \"contracts/math/SafeMath.sol\":3633:3634  0 */\n      0x00\n        /* \"contracts/math/SafeMath.sol\":3626:3634  return 0 */\n      jump(tag_268)\n        /* \"contracts/math/SafeMath.sol\":3614:3634  if (a == 0) return 0 */\n    tag_382:\n        /* \"contracts/math/SafeMath.sol\":3644:3653  uint256 c */\n      0x00\n        /* \"contracts/math/SafeMath.sol\":3656:3661  a * b */\n      tag_383\n        /* \"contracts/math/SafeMath.sol\":3660:3661  b */\n      dup4\n        /* \"contracts/math/SafeMath.sol\":3656:3657  a */\n      dup6\n        /* \"contracts/math/SafeMath.sol\":3656:3661  a * b */\n      tag_384\n      jump\t// in\n    tag_383:\n        /* \"contracts/math/SafeMath.sol\":3644:3661  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/math/SafeMath.sol\":3688:3689  b */\n      dup3\n        /* \"contracts/math/SafeMath.sol\":3679:3684  c / a */\n      tag_385\n        /* \"contracts/math/SafeMath.sol\":3683:3684  a */\n      dup6\n        /* \"contracts/math/SafeMath.sol\":3644:3661  uint256 c = a * b */\n      dup4\n        /* \"contracts/math/SafeMath.sol\":3679:3684  c / a */\n      tag_386\n      jump\t// in\n    tag_385:\n        /* \"contracts/math/SafeMath.sol\":3679:3689  c / a == b */\n      eq\n        /* \"contracts/math/SafeMath.sol\":3671:3727  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_378\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11998:12000   */\n      0x20\n        /* \"contracts/math/SafeMath.sol\":3671:3727  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11980:12001   */\n      mstore\n        /* \"#utility.yul\":12037:12039   */\n      0x21\n        /* \"#utility.yul\":12017:12035   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12010:12040   */\n      mstore\n        /* \"#utility.yul\":12076:12110   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"#utility.yul\":12056:12074   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12049:12111   */\n      mstore\n      shl(0xf8, 0x77)\n        /* \"#utility.yul\":12127:12145   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12120:12151   */\n      mstore\n        /* \"#utility.yul\":12168:12187   */\n      0x84\n      add\n        /* \"contracts/math/SafeMath.sol\":3671:3727  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_183\n        /* \"#utility.yul\":11796:12193   */\n      jump\n        /* \"contracts/math/SafeMath.sol\":3135:3290  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_176:\n        /* \"contracts/math/SafeMath.sol\":3193:3200  uint256 */\n      0x00\n        /* \"contracts/math/SafeMath.sol\":3225:3226  a */\n      dup3\n        /* \"contracts/math/SafeMath.sol\":3220:3221  b */\n      dup3\n        /* \"contracts/math/SafeMath.sol\":3220:3226  b <= a */\n      gt\n      iszero\n        /* \"contracts/math/SafeMath.sol\":3212:3261  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_391\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12400:12402   */\n      0x20\n        /* \"contracts/math/SafeMath.sol\":3212:3261  require(b <= a, \"SafeMath: subtraction overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12382:12403   */\n      mstore\n        /* \"#utility.yul\":12439:12441   */\n      0x1e\n        /* \"#utility.yul\":12419:12437   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12412:12442   */\n      mstore\n        /* \"#utility.yul\":12478:12510   */\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n        /* \"#utility.yul\":12458:12476   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12451:12511   */\n      mstore\n        /* \"#utility.yul\":12528:12546   */\n      0x64\n      add\n        /* \"contracts/math/SafeMath.sol\":3212:3261  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_183\n        /* \"#utility.yul\":12198:12552   */\n      jump\n        /* \"contracts/math/SafeMath.sol\":3212:3261  require(b <= a, \"SafeMath: subtraction overflow\") */\n    tag_391:\n        /* \"contracts/math/SafeMath.sol\":3278:3283  a - b */\n      tag_378\n        /* \"contracts/math/SafeMath.sol\":3282:3283  b */\n      dup3\n        /* \"contracts/math/SafeMath.sol\":3278:3279  a */\n      dup5\n        /* \"contracts/math/SafeMath.sol\":3278:3283  a - b */\n      tag_174\n      jump\t// in\n        /* \"contracts/math/SafeMath.sol\":4216:4366  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_192:\n        /* \"contracts/math/SafeMath.sol\":4274:4281  uint256 */\n      0x00\n        /* \"contracts/math/SafeMath.sol\":4305:4306  0 */\n      dup1\n        /* \"contracts/math/SafeMath.sol\":4301:4302  b */\n      dup3\n        /* \"contracts/math/SafeMath.sol\":4301:4306  b > 0 */\n      gt\n        /* \"contracts/math/SafeMath.sol\":4293:4337  require(b > 0, \"SafeMath: division by zero\") */\n      tag_396\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12759:12761   */\n      0x20\n        /* \"contracts/math/SafeMath.sol\":4293:4337  require(b > 0, \"SafeMath: division by zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12741:12762   */\n      mstore\n        /* \"#utility.yul\":12798:12800   */\n      0x1a\n        /* \"#utility.yul\":12778:12796   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12771:12801   */\n      mstore\n        /* \"#utility.yul\":12837:12865   */\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n        /* \"#utility.yul\":12817:12835   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12810:12866   */\n      mstore\n        /* \"#utility.yul\":12883:12901   */\n      0x64\n      add\n        /* \"contracts/math/SafeMath.sol\":4293:4337  require(b > 0, \"SafeMath: division by zero\") */\n      tag_183\n        /* \"#utility.yul\":12557:12907   */\n      jump\n        /* \"contracts/math/SafeMath.sol\":4293:4337  require(b > 0, \"SafeMath: division by zero\") */\n    tag_396:\n        /* \"contracts/math/SafeMath.sol\":4354:4359  a / b */\n      tag_378\n        /* \"contracts/math/SafeMath.sol\":4358:4359  b */\n      dup3\n        /* \"contracts/math/SafeMath.sol\":4354:4355  a */\n      dup5\n        /* \"contracts/math/SafeMath.sol\":4354:4359  a / b */\n      tag_386\n      jump\t// in\n        /* \"contracts/AllocationStaking.sol\":15581:15716  function erc20Transfer(address _to, uint256 _amount) internal {... */\n    tag_194:\n        /* \"contracts/AllocationStaking.sol\":15653:15658  erc20 */\n      sload(0x00)\n        /* \"contracts/AllocationStaking.sol\":15653:15681  erc20.transfer(_to, _amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13104:13136   */\n      dup5\n      dup2\n      and\n        /* \"contracts/AllocationStaking.sol\":15653:15681  erc20.transfer(_to, _amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":13086:13137   */\n      mstore\n        /* \"#utility.yul\":13153:13171   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13146:13180   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/AllocationStaking.sol\":15653:15658  erc20 */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/AllocationStaking.sol\":15653:15667  erc20.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":13059:13077   */\n      0x44\n      add\n        /* \"contracts/AllocationStaking.sol\":15653:15681  erc20.transfer(_to, _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_404\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_404:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_405\n      swap2\n      swap1\n      tag_335\n      jump\t// in\n    tag_405:\n      pop\n        /* \"contracts/AllocationStaking.sol\":15702:15709  _amount */\n      dup1\n        /* \"contracts/AllocationStaking.sol\":15691:15698  paidOut */\n      0x01\n      0x00\n        /* \"contracts/AllocationStaking.sol\":15691:15709  paidOut += _amount */\n      dup3\n      dup3\n      sload\n      tag_406\n      swap2\n      swap1\n      tag_294\n      jump\t// in\n    tag_406:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/AllocationStaking.sol\":15581:15716  function erc20Transfer(address _to, uint256 _amount) internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13104:13136   */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":13086:13137   */\n      mstore\n        /* \"#utility.yul\":13153:13171   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13146:13180   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_408\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup6\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      dup3\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":13059:13077   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n    tag_409:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_410\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_408:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_238:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_413\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_414\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_413:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_347\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_417\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_264:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      swap2\n      dup3\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      swap3\n      and\n      swap2\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13449:13464   */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":13431:13465   */\n      mstore\n        /* \"#utility.yul\":13501:13516   */\n      dup4\n      dup2\n      and\n        /* \"#utility.yul\":13481:13499   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":13474:13517   */\n      mstore\n        /* \"#utility.yul\":13533:13551   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13526:13560   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_422\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup7\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      dup3\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":13366:13384   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      tag_409\n        /* \"#utility.yul\":13191:13566   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n    tag_422:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_410:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_427\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      tag_428\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      jump\t// in\n    tag_427:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_429\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_430\n      swap2\n      swap1\n      tag_335\n      jump\t// in\n    tag_430:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_429:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_408\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      shl(0xe0, 0x5274afe7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3563:3595   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3545:3596   */\n      mstore\n        /* \"#utility.yul\":3518:3536   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      tag_183\n        /* \"#utility.yul\":3385:3602   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_414:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      sload\n      shl(0x40, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_263\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      shl(0xe3, 0x1afcd79f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_417:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_343\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_414\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_428:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_378\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_451\n      swap2\n      swap1\n      tag_452\n      jump\t// in\n    tag_451:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_455\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_454)\n    tag_455:\n      0x60\n      swap2\n      pop\n    tag_454:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_456\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_457\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_456:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_457:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_459\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_460\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_461\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_460:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_378)\n    tag_459:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_463\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_463:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_464\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3563:3595   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3545:3596   */\n      mstore\n        /* \"#utility.yul\":3518:3536   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      tag_183\n        /* \"#utility.yul\":3385:3602   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_464:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      jump(tag_378)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_461:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      tag_467\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_467:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      shl(0xe1, 0x0a12f521)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":196:376   */\n    tag_49:\n        /* \"#utility.yul\":255:261   */\n      0x00\n        /* \"#utility.yul\":308:310   */\n      0x20\n        /* \"#utility.yul\":296:305   */\n      dup3\n        /* \"#utility.yul\":287:294   */\n      dup5\n        /* \"#utility.yul\":283:306   */\n      sub\n        /* \"#utility.yul\":279:311   */\n      slt\n        /* \"#utility.yul\":276:328   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":324:325   */\n      0x00\n        /* \"#utility.yul\":321:322   */\n      dup1\n        /* \"#utility.yul\":314:326   */\n      revert\n        /* \"#utility.yul\":276:328   */\n    tag_477:\n      pop\n        /* \"#utility.yul\":347:370   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":196:376   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":889:1028   */\n    tag_469:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":972:1003   */\n      dup2\n      and\n        /* \"#utility.yul\":962:1004   */\n      dup2\n      eq\n        /* \"#utility.yul\":952:1022   */\n      tag_347\n      jumpi\n        /* \"#utility.yul\":1018:1019   */\n      0x00\n        /* \"#utility.yul\":1015:1016   */\n      dup1\n        /* \"#utility.yul\":1008:1020   */\n      revert\n        /* \"#utility.yul\":1033:1151   */\n    tag_470:\n        /* \"#utility.yul\":1119:1124   */\n      dup1\n        /* \"#utility.yul\":1112:1125   */\n      iszero\n        /* \"#utility.yul\":1105:1126   */\n      iszero\n        /* \"#utility.yul\":1098:1103   */\n      dup2\n        /* \"#utility.yul\":1095:1127   */\n      eq\n        /* \"#utility.yul\":1085:1145   */\n      tag_347\n      jumpi\n        /* \"#utility.yul\":1141:1142   */\n      0x00\n        /* \"#utility.yul\":1138:1139   */\n      dup1\n        /* \"#utility.yul\":1131:1143   */\n      revert\n        /* \"#utility.yul\":1156:1628   */\n    tag_58:\n        /* \"#utility.yul\":1244:1250   */\n      0x00\n        /* \"#utility.yul\":1252:1258   */\n      dup1\n        /* \"#utility.yul\":1260:1266   */\n      0x00\n        /* \"#utility.yul\":1313:1315   */\n      0x60\n        /* \"#utility.yul\":1301:1310   */\n      dup5\n        /* \"#utility.yul\":1292:1299   */\n      dup7\n        /* \"#utility.yul\":1288:1311   */\n      sub\n        /* \"#utility.yul\":1284:1316   */\n      slt\n        /* \"#utility.yul\":1281:1333   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":1329:1330   */\n      0x00\n        /* \"#utility.yul\":1326:1327   */\n      dup1\n        /* \"#utility.yul\":1319:1331   */\n      revert\n        /* \"#utility.yul\":1281:1333   */\n    tag_484:\n        /* \"#utility.yul\":1365:1374   */\n      dup4\n        /* \"#utility.yul\":1352:1375   */\n      calldataload\n        /* \"#utility.yul\":1342:1375   */\n      swap3\n      pop\n        /* \"#utility.yul\":1425:1427   */\n      0x20\n        /* \"#utility.yul\":1414:1423   */\n      dup5\n        /* \"#utility.yul\":1410:1428   */\n      add\n        /* \"#utility.yul\":1397:1429   */\n      calldataload\n        /* \"#utility.yul\":1438:1477   */\n      tag_485\n        /* \"#utility.yul\":1471:1476   */\n      dup2\n        /* \"#utility.yul\":1438:1477   */\n      tag_469\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":1496:1501   */\n      swap2\n      pop\n        /* \"#utility.yul\":1553:1555   */\n      0x40\n        /* \"#utility.yul\":1538:1556   */\n      dup5\n      add\n        /* \"#utility.yul\":1525:1557   */\n      calldataload\n        /* \"#utility.yul\":1566:1596   */\n      tag_486\n        /* \"#utility.yul\":1525:1557   */\n      dup2\n        /* \"#utility.yul\":1566:1596   */\n      tag_470\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":1615:1622   */\n      dup1\n        /* \"#utility.yul\":1605:1622   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1156:1628   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1633:1775   */\n    tag_471:\n        /* \"#utility.yul\":1701:1721   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":1730:1769   */\n      tag_488\n        /* \"#utility.yul\":1701:1721   */\n      dup2\n        /* \"#utility.yul\":1730:1769   */\n      tag_469\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":1633:1775   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1780:2035   */\n    tag_62:\n        /* \"#utility.yul\":1839:1845   */\n      0x00\n        /* \"#utility.yul\":1892:1894   */\n      0x20\n        /* \"#utility.yul\":1880:1889   */\n      dup3\n        /* \"#utility.yul\":1871:1878   */\n      dup5\n        /* \"#utility.yul\":1867:1890   */\n      sub\n        /* \"#utility.yul\":1863:1895   */\n      slt\n        /* \"#utility.yul\":1860:1912   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":1908:1909   */\n      0x00\n        /* \"#utility.yul\":1905:1906   */\n      dup1\n        /* \"#utility.yul\":1898:1910   */\n      revert\n        /* \"#utility.yul\":1860:1912   */\n    tag_490:\n        /* \"#utility.yul\":1947:1956   */\n      dup2\n        /* \"#utility.yul\":1934:1957   */\n      calldataload\n        /* \"#utility.yul\":1966:2005   */\n      tag_378\n        /* \"#utility.yul\":1999:2004   */\n      dup2\n        /* \"#utility.yul\":1966:2005   */\n      tag_469\n      jump\t// in\n        /* \"#utility.yul\":2040:2288   */\n    tag_69:\n        /* \"#utility.yul\":2108:2114   */\n      0x00\n        /* \"#utility.yul\":2116:2122   */\n      dup1\n        /* \"#utility.yul\":2169:2171   */\n      0x40\n        /* \"#utility.yul\":2157:2166   */\n      dup4\n        /* \"#utility.yul\":2148:2155   */\n      dup6\n        /* \"#utility.yul\":2144:2167   */\n      sub\n        /* \"#utility.yul\":2140:2172   */\n      slt\n        /* \"#utility.yul\":2137:2189   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":2185:2186   */\n      0x00\n        /* \"#utility.yul\":2182:2183   */\n      dup1\n        /* \"#utility.yul\":2175:2187   */\n      revert\n        /* \"#utility.yul\":2137:2189   */\n    tag_493:\n      pop\n      pop\n        /* \"#utility.yul\":2208:2231   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":2278:2280   */\n      0x20\n        /* \"#utility.yul\":2263:2281   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2250:2282   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2040:2288   */\n      jump\t// out\n        /* \"#utility.yul\":2293:2998   */\n    tag_79:\n        /* \"#utility.yul\":2402:2408   */\n      0x00\n        /* \"#utility.yul\":2410:2416   */\n      dup1\n        /* \"#utility.yul\":2418:2424   */\n      0x00\n        /* \"#utility.yul\":2426:2432   */\n      dup1\n        /* \"#utility.yul\":2434:2440   */\n      0x00\n        /* \"#utility.yul\":2487:2490   */\n      0xa0\n        /* \"#utility.yul\":2475:2484   */\n      dup7\n        /* \"#utility.yul\":2466:2473   */\n      dup9\n        /* \"#utility.yul\":2462:2485   */\n      sub\n        /* \"#utility.yul\":2458:2491   */\n      slt\n        /* \"#utility.yul\":2455:2508   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":2504:2505   */\n      0x00\n        /* \"#utility.yul\":2501:2502   */\n      dup1\n        /* \"#utility.yul\":2494:2506   */\n      revert\n        /* \"#utility.yul\":2455:2508   */\n    tag_495:\n        /* \"#utility.yul\":2543:2552   */\n      dup6\n        /* \"#utility.yul\":2530:2553   */\n      calldataload\n        /* \"#utility.yul\":2562:2601   */\n      tag_496\n        /* \"#utility.yul\":2595:2600   */\n      dup2\n        /* \"#utility.yul\":2562:2601   */\n      tag_469\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":2620:2625   */\n      swap5\n      pop\n        /* \"#utility.yul\":2677:2679   */\n      0x20\n        /* \"#utility.yul\":2662:2680   */\n      dup7\n      add\n        /* \"#utility.yul\":2649:2681   */\n      calldataload\n        /* \"#utility.yul\":2690:2731   */\n      tag_497\n        /* \"#utility.yul\":2649:2681   */\n      dup2\n        /* \"#utility.yul\":2690:2731   */\n      tag_469\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":2750:2757   */\n      swap4\n      pop\n        /* \"#utility.yul\":2804:2806   */\n      0x40\n        /* \"#utility.yul\":2789:2807   */\n      dup7\n      add\n        /* \"#utility.yul\":2776:2808   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":2855:2857   */\n      0x60\n        /* \"#utility.yul\":2840:2858   */\n      dup7\n      add\n        /* \"#utility.yul\":2827:2859   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2911:2914   */\n      0x80\n        /* \"#utility.yul\":2896:2915   */\n      dup7\n      add\n        /* \"#utility.yul\":2883:2916   */\n      calldataload\n        /* \"#utility.yul\":2925:2966   */\n      tag_498\n        /* \"#utility.yul\":2883:2916   */\n      dup2\n        /* \"#utility.yul\":2925:2966   */\n      tag_469\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":2985:2992   */\n      dup1\n        /* \"#utility.yul\":2975:2992   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2293:2998   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3003:3380   */\n    tag_88:\n        /* \"#utility.yul\":3077:3083   */\n      0x00\n        /* \"#utility.yul\":3085:3091   */\n      dup1\n        /* \"#utility.yul\":3093:3099   */\n      0x00\n        /* \"#utility.yul\":3146:3148   */\n      0x60\n        /* \"#utility.yul\":3134:3143   */\n      dup5\n        /* \"#utility.yul\":3125:3132   */\n      dup7\n        /* \"#utility.yul\":3121:3144   */\n      sub\n        /* \"#utility.yul\":3117:3149   */\n      slt\n        /* \"#utility.yul\":3114:3166   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":3162:3163   */\n      0x00\n        /* \"#utility.yul\":3159:3160   */\n      dup1\n        /* \"#utility.yul\":3152:3164   */\n      revert\n        /* \"#utility.yul\":3114:3166   */\n    tag_500:\n        /* \"#utility.yul\":3198:3207   */\n      dup4\n        /* \"#utility.yul\":3185:3208   */\n      calldataload\n        /* \"#utility.yul\":3175:3208   */\n      swap3\n      pop\n        /* \"#utility.yul\":3255:3257   */\n      0x20\n        /* \"#utility.yul\":3244:3253   */\n      dup5\n        /* \"#utility.yul\":3240:3258   */\n      add\n        /* \"#utility.yul\":3227:3259   */\n      calldataload\n        /* \"#utility.yul\":3217:3259   */\n      swap2\n      pop\n        /* \"#utility.yul\":3309:3311   */\n      0x40\n        /* \"#utility.yul\":3298:3307   */\n      dup5\n        /* \"#utility.yul\":3294:3312   */\n      add\n        /* \"#utility.yul\":3281:3313   */\n      calldataload\n        /* \"#utility.yul\":3322:3350   */\n      tag_486\n        /* \"#utility.yul\":3344:3349   */\n      dup2\n        /* \"#utility.yul\":3322:3350   */\n      tag_470\n      jump\t// in\n        /* \"#utility.yul\":3815:4138   */\n    tag_105:\n        /* \"#utility.yul\":3883:3889   */\n      0x00\n        /* \"#utility.yul\":3891:3897   */\n      dup1\n        /* \"#utility.yul\":3944:3946   */\n      0x40\n        /* \"#utility.yul\":3932:3941   */\n      dup4\n        /* \"#utility.yul\":3923:3930   */\n      dup6\n        /* \"#utility.yul\":3919:3942   */\n      sub\n        /* \"#utility.yul\":3915:3947   */\n      slt\n        /* \"#utility.yul\":3912:3964   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":3960:3961   */\n      0x00\n        /* \"#utility.yul\":3957:3958   */\n      dup1\n        /* \"#utility.yul\":3950:3962   */\n      revert\n        /* \"#utility.yul\":3912:3964   */\n    tag_505:\n        /* \"#utility.yul\":3996:4005   */\n      dup3\n        /* \"#utility.yul\":3983:4006   */\n      calldataload\n        /* \"#utility.yul\":3973:4006   */\n      swap2\n      pop\n        /* \"#utility.yul\":4056:4058   */\n      0x20\n        /* \"#utility.yul\":4045:4054   */\n      dup4\n        /* \"#utility.yul\":4041:4059   */\n      add\n        /* \"#utility.yul\":4028:4060   */\n      calldataload\n        /* \"#utility.yul\":4069:4108   */\n      tag_506\n        /* \"#utility.yul\":4102:4107   */\n      dup2\n        /* \"#utility.yul\":4069:4108   */\n      tag_469\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":4127:4132   */\n      dup1\n        /* \"#utility.yul\":4117:4132   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3815:4138   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4467:4858   */\n    tag_131:\n        /* \"#utility.yul\":4544:4550   */\n      0x00\n        /* \"#utility.yul\":4552:4558   */\n      dup1\n        /* \"#utility.yul\":4560:4566   */\n      0x00\n        /* \"#utility.yul\":4613:4615   */\n      0x60\n        /* \"#utility.yul\":4601:4610   */\n      dup5\n        /* \"#utility.yul\":4592:4599   */\n      dup7\n        /* \"#utility.yul\":4588:4611   */\n      sub\n        /* \"#utility.yul\":4584:4616   */\n      slt\n        /* \"#utility.yul\":4581:4633   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":4629:4630   */\n      0x00\n        /* \"#utility.yul\":4626:4627   */\n      dup1\n        /* \"#utility.yul\":4619:4631   */\n      revert\n        /* \"#utility.yul\":4581:4633   */\n    tag_509:\n        /* \"#utility.yul\":4665:4674   */\n      dup4\n        /* \"#utility.yul\":4652:4675   */\n      calldataload\n        /* \"#utility.yul\":4642:4675   */\n      swap3\n      pop\n        /* \"#utility.yul\":4725:4727   */\n      0x20\n        /* \"#utility.yul\":4714:4723   */\n      dup5\n        /* \"#utility.yul\":4710:4728   */\n      add\n        /* \"#utility.yul\":4697:4729   */\n      calldataload\n        /* \"#utility.yul\":4738:4777   */\n      tag_510\n        /* \"#utility.yul\":4771:4776   */\n      dup2\n        /* \"#utility.yul\":4738:4777   */\n      tag_469\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":4467:4858   */\n      swap3\n      swap6\n        /* \"#utility.yul\":4796:4801   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4848:4850   */\n      0x40\n        /* \"#utility.yul\":4833:4851   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":4820:4852   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":4467:4858   */\n      jump\t// out\n        /* \"#utility.yul\":5093:5220   */\n    tag_351:\n        /* \"#utility.yul\":5154:5164   */\n      0x4e487b71\n        /* \"#utility.yul\":5149:5152   */\n      0xe0\n        /* \"#utility.yul\":5145:5165   */\n      shl\n        /* \"#utility.yul\":5142:5143   */\n      0x00\n        /* \"#utility.yul\":5135:5166   */\n      mstore\n        /* \"#utility.yul\":5185:5189   */\n      0x41\n        /* \"#utility.yul\":5182:5183   */\n      0x04\n        /* \"#utility.yul\":5175:5190   */\n      mstore\n        /* \"#utility.yul\":5209:5213   */\n      0x24\n        /* \"#utility.yul\":5206:5207   */\n      0x00\n        /* \"#utility.yul\":5199:5214   */\n      revert\n        /* \"#utility.yul\":5225:6416   */\n    tag_145:\n        /* \"#utility.yul\":5318:5324   */\n      0x00\n        /* \"#utility.yul\":5326:5332   */\n      dup1\n        /* \"#utility.yul\":5379:5381   */\n      0x40\n        /* \"#utility.yul\":5367:5376   */\n      dup4\n        /* \"#utility.yul\":5358:5365   */\n      dup6\n        /* \"#utility.yul\":5354:5377   */\n      sub\n        /* \"#utility.yul\":5350:5382   */\n      slt\n        /* \"#utility.yul\":5347:5399   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":5395:5396   */\n      0x00\n        /* \"#utility.yul\":5392:5393   */\n      dup1\n        /* \"#utility.yul\":5385:5397   */\n      revert\n        /* \"#utility.yul\":5347:5399   */\n    tag_514:\n        /* \"#utility.yul\":5435:5444   */\n      dup3\n        /* \"#utility.yul\":5422:5445   */\n      calldataload\n        /* \"#utility.yul\":5464:5482   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5505:5507   */\n      dup1\n        /* \"#utility.yul\":5497:5503   */\n      dup3\n        /* \"#utility.yul\":5494:5508   */\n      gt\n        /* \"#utility.yul\":5491:5525   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":5521:5522   */\n      0x00\n        /* \"#utility.yul\":5518:5519   */\n      dup1\n        /* \"#utility.yul\":5511:5523   */\n      revert\n        /* \"#utility.yul\":5491:5525   */\n    tag_515:\n        /* \"#utility.yul\":5559:5565   */\n      dup2\n        /* \"#utility.yul\":5548:5557   */\n      dup6\n        /* \"#utility.yul\":5544:5566   */\n      add\n        /* \"#utility.yul\":5534:5566   */\n      swap2\n      pop\n        /* \"#utility.yul\":5604:5611   */\n      dup6\n        /* \"#utility.yul\":5597:5601   */\n      0x1f\n        /* \"#utility.yul\":5593:5595   */\n      dup4\n        /* \"#utility.yul\":5589:5602   */\n      add\n        /* \"#utility.yul\":5585:5612   */\n      slt\n        /* \"#utility.yul\":5575:5630   */\n      tag_516\n      jumpi\n        /* \"#utility.yul\":5626:5627   */\n      0x00\n        /* \"#utility.yul\":5623:5624   */\n      dup1\n        /* \"#utility.yul\":5616:5628   */\n      revert\n        /* \"#utility.yul\":5575:5630   */\n    tag_516:\n        /* \"#utility.yul\":5662:5664   */\n      dup2\n        /* \"#utility.yul\":5649:5665   */\n      calldataload\n        /* \"#utility.yul\":5684:5688   */\n      0x20\n        /* \"#utility.yul\":5707:5709   */\n      dup3\n        /* \"#utility.yul\":5703:5705   */\n      dup3\n        /* \"#utility.yul\":5700:5710   */\n      gt\n        /* \"#utility.yul\":5697:5733   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":5713:5731   */\n      tag_518\n      tag_351\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":5759:5761   */\n      dup2\n        /* \"#utility.yul\":5756:5757   */\n      0x05\n        /* \"#utility.yul\":5752:5762   */\n      shl\n        /* \"#utility.yul\":5791:5793   */\n      0x40\n        /* \"#utility.yul\":5785:5794   */\n      mload\n        /* \"#utility.yul\":5854:5856   */\n      0x1f\n        /* \"#utility.yul\":5850:5857   */\n      not\n        /* \"#utility.yul\":5845:5847   */\n      0x3f\n        /* \"#utility.yul\":5841:5843   */\n      dup4\n        /* \"#utility.yul\":5837:5848   */\n      add\n        /* \"#utility.yul\":5833:5858   */\n      and\n        /* \"#utility.yul\":5825:5831   */\n      dup2\n        /* \"#utility.yul\":5821:5859   */\n      add\n        /* \"#utility.yul\":5909:5915   */\n      dup2\n        /* \"#utility.yul\":5897:5907   */\n      dup2\n        /* \"#utility.yul\":5894:5916   */\n      lt\n        /* \"#utility.yul\":5889:5891   */\n      dup7\n        /* \"#utility.yul\":5877:5887   */\n      dup3\n        /* \"#utility.yul\":5874:5892   */\n      gt\n        /* \"#utility.yul\":5871:5917   */\n      or\n        /* \"#utility.yul\":5868:5940   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":5920:5938   */\n      tag_520\n      tag_351\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":5956:5958   */\n      0x40\n        /* \"#utility.yul\":5949:5971   */\n      mstore\n        /* \"#utility.yul\":6006:6024   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":6040:6055   */\n      dup2\n      dup4\n      add\n      swap4\n      pop\n        /* \"#utility.yul\":6082:6093   */\n      dup5\n      dup2\n      add\n        /* \"#utility.yul\":6078:6098   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":6110:6129   */\n      dup10\n      dup5\n      gt\n        /* \"#utility.yul\":6107:6146   */\n      iszero\n      tag_521\n      jumpi\n        /* \"#utility.yul\":6142:6143   */\n      0x00\n        /* \"#utility.yul\":6139:6140   */\n      dup1\n        /* \"#utility.yul\":6132:6144   */\n      revert\n        /* \"#utility.yul\":6107:6146   */\n    tag_521:\n        /* \"#utility.yul\":6166:6177   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":6186:6334   */\n    tag_522:\n        /* \"#utility.yul\":6202:6208   */\n      dup4\n        /* \"#utility.yul\":6197:6200   */\n      dup7\n        /* \"#utility.yul\":6194:6209   */\n      lt\n        /* \"#utility.yul\":6186:6334   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":6268:6291   */\n      tag_525\n        /* \"#utility.yul\":6287:6290   */\n      dup7\n        /* \"#utility.yul\":6268:6291   */\n      tag_471\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":6256:6292   */\n      dup6\n      mstore\n        /* \"#utility.yul\":6219:6231   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":6312:6324   */\n      swap4\n      dup3\n      add\n      swap4\n        /* \"#utility.yul\":6186:6334   */\n      jump(tag_522)\n    tag_524:\n        /* \"#utility.yul\":6353:6359   */\n      swap10\n        /* \"#utility.yul\":6391:6409   */\n      swap8\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":6378:6410   */\n      calldataload\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5225:6416   */\n      jump\t// out\n        /* \"#utility.yul\":6421:6860   */\n    tag_472:\n        /* \"#utility.yul\":6474:6477   */\n      0x00\n        /* \"#utility.yul\":6512:6517   */\n      dup2\n        /* \"#utility.yul\":6506:6518   */\n      mload\n        /* \"#utility.yul\":6539:6545   */\n      dup1\n        /* \"#utility.yul\":6534:6537   */\n      dup5\n        /* \"#utility.yul\":6527:6546   */\n      mstore\n        /* \"#utility.yul\":6565:6569   */\n      0x20\n        /* \"#utility.yul\":6594:6598   */\n      dup1\n        /* \"#utility.yul\":6589:6592   */\n      dup6\n        /* \"#utility.yul\":6585:6599   */\n      add\n        /* \"#utility.yul\":6578:6599   */\n      swap5\n      pop\n        /* \"#utility.yul\":6633:6637   */\n      0x20\n        /* \"#utility.yul\":6626:6631   */\n      dup5\n        /* \"#utility.yul\":6622:6638   */\n      add\n        /* \"#utility.yul\":6656:6657   */\n      0x00\n        /* \"#utility.yul\":6666:6835   */\n    tag_527:\n        /* \"#utility.yul\":6680:6686   */\n      dup4\n        /* \"#utility.yul\":6677:6678   */\n      dup2\n        /* \"#utility.yul\":6674:6687   */\n      lt\n        /* \"#utility.yul\":6666:6835   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":6741:6754   */\n      dup2\n      mload\n        /* \"#utility.yul\":6729:6755   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6775:6787   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":6810:6825   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6702:6703   */\n      0x01\n        /* \"#utility.yul\":6695:6704   */\n      add\n        /* \"#utility.yul\":6666:6835   */\n      jump(tag_527)\n    tag_529:\n      pop\n        /* \"#utility.yul\":6851:6854   */\n      swap5\n      swap6\n        /* \"#utility.yul\":6421:6860   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6865:7330   */\n    tag_148:\n        /* \"#utility.yul\":7122:7124   */\n      0x40\n        /* \"#utility.yul\":7111:7120   */\n      dup2\n        /* \"#utility.yul\":7104:7125   */\n      mstore\n        /* \"#utility.yul\":7085:7089   */\n      0x00\n        /* \"#utility.yul\":7148:7204   */\n      tag_531\n        /* \"#utility.yul\":7200:7202   */\n      0x40\n        /* \"#utility.yul\":7189:7198   */\n      dup4\n        /* \"#utility.yul\":7185:7203   */\n      add\n        /* \"#utility.yul\":7177:7183   */\n      dup6\n        /* \"#utility.yul\":7148:7204   */\n      tag_472\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":7252:7261   */\n      dup3\n        /* \"#utility.yul\":7244:7250   */\n      dup2\n        /* \"#utility.yul\":7240:7262   */\n      sub\n        /* \"#utility.yul\":7235:7237   */\n      0x20\n        /* \"#utility.yul\":7224:7233   */\n      dup5\n        /* \"#utility.yul\":7220:7238   */\n      add\n        /* \"#utility.yul\":7213:7263   */\n      mstore\n        /* \"#utility.yul\":7280:7324   */\n      tag_532\n        /* \"#utility.yul\":7317:7323   */\n      dup2\n        /* \"#utility.yul\":7309:7315   */\n      dup6\n        /* \"#utility.yul\":7280:7324   */\n      tag_472\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":7272:7324   */\n      swap6\n        /* \"#utility.yul\":6865:7330   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7335:7462   */\n    tag_473:\n        /* \"#utility.yul\":7396:7406   */\n      0x4e487b71\n        /* \"#utility.yul\":7391:7394   */\n      0xe0\n        /* \"#utility.yul\":7387:7407   */\n      shl\n        /* \"#utility.yul\":7384:7385   */\n      0x00\n        /* \"#utility.yul\":7377:7408   */\n      mstore\n        /* \"#utility.yul\":7427:7431   */\n      0x11\n        /* \"#utility.yul\":7424:7425   */\n      0x04\n        /* \"#utility.yul\":7417:7432   */\n      mstore\n        /* \"#utility.yul\":7451:7455   */\n      0x24\n        /* \"#utility.yul\":7448:7449   */\n      0x00\n        /* \"#utility.yul\":7441:7456   */\n      revert\n        /* \"#utility.yul\":7467:7595   */\n    tag_174:\n        /* \"#utility.yul\":7534:7543   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":7555:7566   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":7552:7589   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":7569:7587   */\n      tag_268\n      tag_473\n      jump\t// in\n        /* \"#utility.yul\":7600:7727   */\n    tag_180:\n        /* \"#utility.yul\":7661:7671   */\n      0x4e487b71\n        /* \"#utility.yul\":7656:7659   */\n      0xe0\n        /* \"#utility.yul\":7652:7672   */\n      shl\n        /* \"#utility.yul\":7649:7650   */\n      0x00\n        /* \"#utility.yul\":7642:7673   */\n      mstore\n        /* \"#utility.yul\":7692:7696   */\n      0x32\n        /* \"#utility.yul\":7689:7690   */\n      0x04\n        /* \"#utility.yul\":7682:7697   */\n      mstore\n        /* \"#utility.yul\":7716:7720   */\n      0x24\n        /* \"#utility.yul\":7713:7714   */\n      0x00\n        /* \"#utility.yul\":7706:7721   */\n      revert\n        /* \"#utility.yul\":10263:10388   */\n    tag_294:\n        /* \"#utility.yul\":10328:10337   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":10349:10359   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":10346:10382   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":10362:10380   */\n      tag_268\n      tag_473\n      jump\t// in\n        /* \"#utility.yul\":10393:10638   */\n    tag_335:\n        /* \"#utility.yul\":10460:10466   */\n      0x00\n        /* \"#utility.yul\":10513:10515   */\n      0x20\n        /* \"#utility.yul\":10501:10510   */\n      dup3\n        /* \"#utility.yul\":10492:10499   */\n      dup5\n        /* \"#utility.yul\":10488:10511   */\n      sub\n        /* \"#utility.yul\":10484:10516   */\n      slt\n        /* \"#utility.yul\":10481:10533   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":10529:10530   */\n      0x00\n        /* \"#utility.yul\":10526:10527   */\n      dup1\n        /* \"#utility.yul\":10519:10531   */\n      revert\n        /* \"#utility.yul\":10481:10533   */\n    tag_549:\n        /* \"#utility.yul\":10561:10570   */\n      dup2\n        /* \"#utility.yul\":10555:10571   */\n      mload\n        /* \"#utility.yul\":10580:10608   */\n      tag_378\n        /* \"#utility.yul\":10602:10607   */\n      dup2\n        /* \"#utility.yul\":10580:10608   */\n      tag_470\n      jump\t// in\n        /* \"#utility.yul\":11401:11569   */\n    tag_384:\n        /* \"#utility.yul\":11474:11483   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":11505:11514   */\n      dup2\n      iszero\n        /* \"#utility.yul\":11522:11537   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":11516:11538   */\n      dup5\n      eq\n        /* \"#utility.yul\":11502:11539   */\n      or\n        /* \"#utility.yul\":11492:11563   */\n      tag_268\n      jumpi\n        /* \"#utility.yul\":11543:11561   */\n      tag_268\n      tag_473\n      jump\t// in\n        /* \"#utility.yul\":11574:11791   */\n    tag_386:\n        /* \"#utility.yul\":11614:11615   */\n      0x00\n        /* \"#utility.yul\":11640:11641   */\n      dup3\n        /* \"#utility.yul\":11630:11762   */\n      tag_557\n      jumpi\n        /* \"#utility.yul\":11684:11694   */\n      0x4e487b71\n        /* \"#utility.yul\":11679:11682   */\n      0xe0\n        /* \"#utility.yul\":11675:11695   */\n      shl\n        /* \"#utility.yul\":11672:11673   */\n      0x00\n        /* \"#utility.yul\":11665:11696   */\n      mstore\n        /* \"#utility.yul\":11719:11723   */\n      0x12\n        /* \"#utility.yul\":11716:11717   */\n      0x04\n        /* \"#utility.yul\":11709:11724   */\n      mstore\n        /* \"#utility.yul\":11747:11751   */\n      0x24\n        /* \"#utility.yul\":11744:11745   */\n      0x00\n        /* \"#utility.yul\":11737:11752   */\n      revert\n        /* \"#utility.yul\":11630:11762   */\n    tag_557:\n      pop\n        /* \"#utility.yul\":11776:11785   */\n      div\n      swap1\n        /* \"#utility.yul\":11574:11791   */\n      jump\t// out\n        /* \"#utility.yul\":13571:13983   */\n    tag_452:\n        /* \"#utility.yul\":13700:13703   */\n      0x00\n        /* \"#utility.yul\":13738:13744   */\n      dup3\n        /* \"#utility.yul\":13732:13745   */\n      mload\n        /* \"#utility.yul\":13763:13764   */\n      0x00\n        /* \"#utility.yul\":13773:13902   */\n    tag_564:\n        /* \"#utility.yul\":13787:13793   */\n      dup2\n        /* \"#utility.yul\":13784:13785   */\n      dup2\n        /* \"#utility.yul\":13781:13794   */\n      lt\n        /* \"#utility.yul\":13773:13902   */\n      iszero\n      tag_566\n      jumpi\n        /* \"#utility.yul\":13885:13889   */\n      0x20\n        /* \"#utility.yul\":13869:13883   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":13865:13890   */\n      dup2\n      add\n        /* \"#utility.yul\":13859:13891   */\n      mload\n        /* \"#utility.yul\":13846:13857   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":13839:13892   */\n      mstore\n        /* \"#utility.yul\":13802:13814   */\n      add\n        /* \"#utility.yul\":13773:13902   */\n      jump(tag_564)\n    tag_566:\n      pop\n        /* \"#utility.yul\":13957:13958   */\n      0x00\n        /* \"#utility.yul\":13921:13937   */\n      swap3\n      add\n        /* \"#utility.yul\":13946:13959   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":13921:13937   */\n      swap2\n        /* \"#utility.yul\":13571:13983   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203049d4d7f6ab6eeb7a3c8f4dcd6e72906c35301870d43fa6f875c73f174cbee064736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50611cd48061001d5f395ff3fe608060405234801561000f575f80fd5b50600436106101d1575f3560e01c8063785e9e86116100fe578063ca1d209d1161009e578063e6fd48bc1161006e578063e6fd48bc1461041d578063ed95f07f14610426578063f2fde38b14610439578063fcfc1b141461044c575f80fd5b8063ca1d209d146103d1578063e2bbb158146103e4578063e4c75c27146103f7578063e6f04acc1461040a575f80fd5b806393f1a40b116100d957806393f1a40b1461034e578063a2383106146103a2578063a85adeab146103b5578063aa5f7e26146103be575f80fd5b8063785e9e86146102eb5780638da5cb5b146103155780638f10369a14610345575f80fd5b8063441a3e70116101745780635c76ca2d116101445780635c76ca2d146102bf578063630b5ba1146102c857806364482f79146102d0578063715018a6146102e3575f80fd5b8063441a3e701461027357806351eb05a6146102865780635312ea8e1461029957806357fb25cc146102ac575f80fd5b806317caf6f1116101af57806317caf6f11461023a5780631eaaa045146102435780633dfcb861146102585780633f90916a1461026b575f80fd5b8063081e3eda146101d55780630e15561a146101ec5780631526fe27146101f5575b5f80fd5b6005545b6040519081526020015b60405180910390f35b6101d960035481565b6102086102033660046118e7565b61046d565b604080516001600160a01b0390961686526020860194909452928401919091526060830152608082015260a0016101e3565b6101d960075481565b61025661025136600461191f565b6104b6565b005b61025661026636600461196e565b610610565b6101d961064c565b610256610281366004611989565b61069d565b6102566102943660046118e7565b6108ac565b6102566102a73660046118e7565b61098e565b6102566102ba3660046119a9565b610ac4565b6101d960015481565b610256610c14565b6102566102de366004611a04565b610c36565b610256610cbf565b5f546102fd906001600160a01b031681565b6040516001600160a01b0390911681526020016101e3565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166102fd565b6101d960025481565b61038761035c366004611a2f565b600660209081525f928352604080842090915290825290208054600182015460029092015490919083565b604080519384526020840192909252908201526060016101e3565b6101d96103b0366004611a2f565b610cd2565b6101d960095481565b6102566103cc3660046118e7565b610cfb565b6102566103df3660046118e7565b610e08565b6102566103f2366004611989565b610eb1565b6101d9610405366004611a2f565b610fd6565b610256610418366004611a5d565b6110fd565b6101d960085481565b6004546102fd906001600160a01b031681565b61025661044736600461196e565b611220565b61045f61045a366004611aa6565b61125d565b6040516101e3929190611ba6565b6005818154811061047c575f80fd5b5f918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b0390931694509092909185565b6104be61138e565b80156104cc576104cc610c14565b5f60085442116104de576008546104e0565b425b6007549091506104f090856113e9565b6007556040805160a0810182526001600160a01b039485168152602081019586529081019182525f6060820181815260808301828152600580546001810182559381905293517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db09390940292830180546001600160a01b031916949097169390931790955594517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db186015590517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db285015591517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db384015550517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db490910155565b61061861138e565b6001600160a01b03811661062a575f80fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b5f600854421161065b57505f90565b5f600954421061066d5760095461066f565b425b9050610697600154610691600854846106889190611be7565b6002549061144e565b906114cc565b91505090565b5f600583815481106106b1576106b1611bfa565b5f9182526020808320868452600682526040808520338652909252922060028101546005909202909201925042101561074b5760405162461bcd60e51b815260206004820152603160248201527f4c6173742073616c6520796f75207265676973746572656420666f72206973206044820152703737ba103334b734b9b432b2103cb2ba1760791b60648201526084015b60405180910390fd5b80548311156107af5760405162461bcd60e51b815260206004820152602a60248201527f77697468647261773a2063616e2774207769746864726177206d6f7265207468604482015269185b8819195c1bdcda5d60b21b6064820152608401610742565b6107b8846108ac565b5f6107f382600101546106916a0c097ce7bc90715b34b9f160241b6107ed8760030154875f015461144e90919063ffffffff16565b90611527565b90506107ff3382611581565b815461080b90856114cc565b8083556003840154610831916a0c097ce7bc90715b34b9f160241b916107ed919061144e565b6001830155825461084c906001600160a01b0316338661160f565b600483015461085b90856114cc565b6004840155831561086d575f60028301555b604051848152859033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568906020015b60405180910390a35050505050565b5f600582815481106108c0576108c0611bfa565b905f5260205f20906005020190505f60095442106108e0576009546108e2565b425b9050816002015481116108f6575060028101545b60048201545f81900361090d575060029091015550565b5f6109258460020154846114cc90919063ffffffff16565b90505f6109516007546107ed876001015461094b6002548761144e90919063ffffffff16565b9061144e565b905061097d610972846107ed846a0c097ce7bc90715b34b9f160241b61144e565b6003870154906113e9565b600386015550505060029091015550565b5f600582815481106109a2576109a2611bfa565b5f91825260208083208584526006825260408085203386529092529220600281015460059092029092019250421015610a435760405162461bcd60e51b815260206004820152603b60248201527f456d657267656e637920776974686472617720626c6f636b656420647572696e60448201527f672073616c6520616e6420636f6f6c646f776e20706572696f642e00000000006064820152608401610742565b80548254610a5e916001600160a01b0390911690339061160f565b8054604051908152839033907fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959060200160405180910390a380546004830154610aa7916114cc565b6004909201919091555f8082556001820181905560029091015550565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f81158015610b095750825b90505f8267ffffffffffffffff166001148015610b255750303b155b905081158015610b33575080155b15610b515760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610b7b57845460ff60401b1916600160401b1785555b610b848a611673565b5f80546001600160a01b03808c166001600160a01b03199283161790925560028a90556008899055600989905560048054928916929091169190911790558315610c0857845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b6005545f5b81811015610c3257610c2a816108ac565b600101610c19565b5050565b610c3e61138e565b8015610c4c57610c4c610c14565b610c8d82610c8760058681548110610c6657610c66611bfa565b905f5260205f209060050201600101546007546114cc90919063ffffffff16565b906113e9565b6007819055508160058481548110610ca757610ca7611bfa565b905f5260205f20906005020160010181905550505050565b610cc761138e565b610cd05f611684565b565b5f8281526006602090815260408083206001600160a01b03851684529091529020545b92915050565b5f60058281548110610d0f57610d0f611bfa565b5f9182526020808320858452600682526040808520338652909252922060059091029091019150610d3f836108ac565b5f610d7482600101546106916a0c097ce7bc90715b34b9f160241b6107ed8760030154875f015461144e90919063ffffffff16565b8254909150610d8390826113e9565b8083556003840154610da9916a0c097ce7bc90715b34b9f160241b916107ed919061144e565b60018301556004830154610dbd90826113e9565b60048401558154604080518381526020810192909252859133917f92f0bdf80f3916a4279540865e94ef327cf48639092106cca4bddc9bb1de4a86910160405180910390a350505050565b6009544210610e645760405162461bcd60e51b815260206004820152602260248201527f66756e643a20746f6f206c6174652c20746865206661726d20697320636c6f73604482015261195960f21b6064820152608401610742565b5f54610e7b906001600160a01b03163330846116f4565b600254610e89908290611527565b60095f828254610e999190611c0e565b9091555050600354610eab90826113e9565b60035550565b5f60058381548110610ec557610ec5611bfa565b5f918252602080832086845260068252604080852033865290925292206005909102909101915082610ef6856108ac565b815415610f40575f610f3283600101546106916a0c097ce7bc90715b34b9f160241b6107ed8860030154885f015461144e90919063ffffffff16565b9050610f3e3382611581565b505b8254610f57906001600160a01b03163330876116f4565b6004830154610f6690826113e9565b60048401558154610f7790826113e9565b8083556003840154610f9d916a0c097ce7bc90715b34b9f160241b916107ed919061144e565b6001830155604051818152859033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159060200161089d565b5f8060058481548110610feb57610feb611bfa565b5f91825260208083208784526006825260408085206001600160a01b0389168652909252922060036005909202909201908101546004820154600283015492945090914211801561103b57508015155b156110c2575f600954421061105257600954611054565b425b90505f61106e8660020154836114cc90919063ffffffff16565b90505f6110946007546107ed896001015461094b6002548761144e90919063ffffffff16565b90506110bc6110b5856107ed846a0c097ce7bc90715b34b9f160241b61144e565b86906113e9565b94505050505b6110f283600101546106916a0c097ce7bc90715b34b9f160241b6107ed86885f015461144e90919063ffffffff16565b979650505050505050565b60048054604051631400493d60e31b815233928101929092526001600160a01b03169063a00249e890602401602060405180830381865afa158015611144573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111689190611c21565b6111be5760405162461bcd60e51b815260206004820152602160248201527f53616c65206e6f742063726561746564207468726f75676820666163746f72796044820152601760f91b6064820152608401610742565b5f8381526006602090815260408083206001600160a01b0386168452909152902060028101544210156111ef575f80fd5b600281019190915560030180546001810182555f91825260209091200180546001600160a01b031916331790555050565b61122861138e565b6001600160a01b03811661125157604051631e4fbdf760e01b81525f6004820152602401610742565b61125a81611684565b50565b6060805f845167ffffffffffffffff81111561127b5761127b611a92565b6040519080825280602002602001820160405280156112a4578160200160208202803683370190505b5090505f855167ffffffffffffffff8111156112c2576112c2611a92565b6040519080825280602002602001820160405280156112eb578160200160208202803683370190505b5090505f5b86518110156113825761131c8688838151811061130f5761130f611bfa565b6020026020010151610cd2565b83828151811061132e5761132e611bfa565b60200260200101818152505061135d8688838151811061135057611350611bfa565b6020026020010151610fd6565b82828151811061136f5761136f611bfa565b60209081029190910101526001016112f0565b50909590945092505050565b336113c07f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b031614610cd05760405163118cdaa760e01b8152336004820152602401610742565b5f806113f58385611c0e565b9050838110156114475760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610742565b9392505050565b5f825f0361145d57505f610cf5565b5f6114688385611c3c565b9050826114758583611c53565b146114475760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610742565b5f8282111561151d5760405162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006044820152606401610742565b6114478284611be7565b5f8082116115775760405162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f0000000000006044820152606401610742565b6114478284611c53565b5f5460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303815f875af11580156115d0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115f49190611c21565b508060015f8282546116069190611c0e565b90915550505050565b6040516001600160a01b0383811660248301526044820183905261166e91859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050611733565b505050565b61167b611794565b61125a816117dd565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b6040516001600160a01b03848116602483015283811660448301526064820183905261172d9186918216906323b872dd9060840161163c565b50505050565b5f6117476001600160a01b038416836117e5565b905080515f1415801561176b5750808060200190518101906117699190611c21565b155b1561166e57604051635274afe760e01b81526001600160a01b0384166004820152602401610742565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610cd057604051631afcd79f60e31b815260040160405180910390fd5b611228611794565b606061144783835f845f80856001600160a01b031684866040516118099190611c72565b5f6040518083038185875af1925050503d805f8114611843576040519150601f19603f3d011682016040523d82523d5f602084013e611848565b606091505b5091509150611858868383611862565b9695505050505050565b60608261187757611872826118be565b611447565b815115801561188e57506001600160a01b0384163b155b156118b757604051639996b31560e01b81526001600160a01b0385166004820152602401610742565b5080611447565b8051156118ce5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b5f602082840312156118f7575f80fd5b5035919050565b6001600160a01b038116811461125a575f80fd5b801515811461125a575f80fd5b5f805f60608486031215611931575f80fd5b833592506020840135611943816118fe565b9150604084013561195381611912565b809150509250925092565b8035611969816118fe565b919050565b5f6020828403121561197e575f80fd5b8135611447816118fe565b5f806040838503121561199a575f80fd5b50508035926020909101359150565b5f805f805f60a086880312156119bd575f80fd5b85356119c8816118fe565b945060208601356119d8816118fe565b9350604086013592506060860135915060808601356119f6816118fe565b809150509295509295909350565b5f805f60608486031215611a16575f80fd5b8335925060208401359150604084013561195381611912565b5f8060408385031215611a40575f80fd5b823591506020830135611a52816118fe565b809150509250929050565b5f805f60608486031215611a6f575f80fd5b833592506020840135611a81816118fe565b929592945050506040919091013590565b634e487b7160e01b5f52604160045260245ffd5b5f8060408385031215611ab7575f80fd5b823567ffffffffffffffff80821115611ace575f80fd5b818501915085601f830112611ae1575f80fd5b8135602082821115611af557611af5611a92565b8160051b604051601f19603f83011681018181108682111715611b1a57611b1a611a92565b604052928352818301935084810182019289841115611b37575f80fd5b948201945b83861015611b5c57611b4d8661195e565b85529482019493820193611b3c565b9997909101359750505050505050565b5f815180845260208085019450602084015f5b83811015611b9b57815187529582019590820190600101611b7f565b509495945050505050565b604081525f611bb86040830185611b6c565b8281036020840152611bca8185611b6c565b95945050505050565b634e487b7160e01b5f52601160045260245ffd5b81810381811115610cf557610cf5611bd3565b634e487b7160e01b5f52603260045260245ffd5b80820180821115610cf557610cf5611bd3565b5f60208284031215611c31575f80fd5b815161144781611912565b8082028115828204841417610cf557610cf5611bd3565b5f82611c6d57634e487b7160e01b5f52601260045260245ffd5b500490565b5f82515f5b81811015611c915760208186018101518583015201611c77565b505f92019182525091905056fea26469706673582212203049d4d7f6ab6eeb7a3c8f4dcd6e72906c35301870d43fa6f875c73f174cbee064736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CD4 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x785E9E86 GT PUSH2 0xFE JUMPI DUP1 PUSH4 0xCA1D209D GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xE6FD48BC GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xE6FD48BC EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0xED95F07F EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0xFCFC1B14 EQ PUSH2 0x44C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCA1D209D EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0xE4C75C27 EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xE6F04ACC EQ PUSH2 0x40A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x93F1A40B GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0xA2383106 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0xA85ADEAB EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xAA5F7E26 EQ PUSH2 0x3BE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x785E9E86 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x8F10369A EQ PUSH2 0x345 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x441A3E70 GT PUSH2 0x174 JUMPI DUP1 PUSH4 0x5C76CA2D GT PUSH2 0x144 JUMPI DUP1 PUSH4 0x5C76CA2D EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x57FB25CC EQ PUSH2 0x2AC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x17CAF6F1 GT PUSH2 0x1AF JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x1EAAA045 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x3DFCB861 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x3F90916A EQ PUSH2 0x26B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xE15561A EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x1F5 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0x46D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0x1D9 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x251 CALLDATASIZE PUSH1 0x4 PUSH2 0x191F JUMP JUMPDEST PUSH2 0x4B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x256 PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x196E JUMP JUMPDEST PUSH2 0x610 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x64C JUMP JUMPDEST PUSH2 0x256 PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x1989 JUMP JUMPDEST PUSH2 0x69D JUMP JUMPDEST PUSH2 0x256 PUSH2 0x294 CALLDATASIZE PUSH1 0x4 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0x8AC JUMP JUMPDEST PUSH2 0x256 PUSH2 0x2A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0x98E JUMP JUMPDEST PUSH2 0x256 PUSH2 0x2BA CALLDATASIZE PUSH1 0x4 PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0xAC4 JUMP JUMPDEST PUSH2 0x1D9 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x256 PUSH2 0xC14 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1A04 JUMP JUMPDEST PUSH2 0xC36 JUMP JUMPDEST PUSH2 0x256 PUSH2 0xCBF JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x2FD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2FD JUMP JUMPDEST PUSH2 0x1D9 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x387 PUSH2 0x35C CALLDATASIZE PUSH1 0x4 PUSH2 0x1A2F JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x3B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A2F JUMP JUMPDEST PUSH2 0xCD2 JUMP JUMPDEST PUSH2 0x1D9 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x3CC CALLDATASIZE PUSH1 0x4 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0xCFB JUMP JUMPDEST PUSH2 0x256 PUSH2 0x3DF CALLDATASIZE PUSH1 0x4 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0xE08 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x3F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1989 JUMP JUMPDEST PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x405 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A2F JUMP JUMPDEST PUSH2 0xFD6 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x418 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A5D JUMP JUMPDEST PUSH2 0x10FD JUMP JUMPDEST PUSH2 0x1D9 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x2FD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x447 CALLDATASIZE PUSH1 0x4 PUSH2 0x196E JUMP JUMPDEST PUSH2 0x1220 JUMP JUMPDEST PUSH2 0x45F PUSH2 0x45A CALLDATASIZE PUSH1 0x4 PUSH2 0x1AA6 JUMP JUMPDEST PUSH2 0x125D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E3 SWAP3 SWAP2 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x47C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP5 POP SWAP1 SWAP3 SWAP1 SWAP2 DUP6 JUMP JUMPDEST PUSH2 0x4BE PUSH2 0x138E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4CC JUMPI PUSH2 0x4CC PUSH2 0xC14 JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD TIMESTAMP GT PUSH2 0x4DE JUMPI PUSH1 0x8 SLOAD PUSH2 0x4E0 JUMP JUMPDEST TIMESTAMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 SWAP2 POP PUSH2 0x4F0 SWAP1 DUP6 PUSH2 0x13E9 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP6 DUP7 MSTORE SWAP1 DUP2 ADD SWAP2 DUP3 MSTORE PUSH0 PUSH1 0x60 DUP3 ADD DUP2 DUP2 MSTORE PUSH1 0x80 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP4 DUP2 SWAP1 MSTORE SWAP4 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP4 SWAP1 SWAP5 MUL SWAP3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 SWAP1 SWAP8 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP6 SSTORE SWAP5 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB1 DUP7 ADD SSTORE SWAP1 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB2 DUP6 ADD SSTORE SWAP2 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB3 DUP5 ADD SSTORE POP MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB4 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH2 0x618 PUSH2 0x138E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x62A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD TIMESTAMP GT PUSH2 0x65B JUMPI POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0x66D JUMPI PUSH1 0x9 SLOAD PUSH2 0x66F JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP PUSH2 0x697 PUSH1 0x1 SLOAD PUSH2 0x691 PUSH1 0x8 SLOAD DUP5 PUSH2 0x688 SWAP2 SWAP1 PUSH2 0x1BE7 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0x144E JUMP JUMPDEST SWAP1 PUSH2 0x14CC JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x6B1 JUMPI PUSH2 0x6B1 PUSH2 0x1BFA JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x5 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP3 POP TIMESTAMP LT ISZERO PUSH2 0x74B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6173742073616C6520796F75207265676973746572656420666F7220697320 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x3737BA103334B734B9B432B2103CB2BA17 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD DUP4 GT ISZERO PUSH2 0x7AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x77697468647261773A2063616E2774207769746864726177206D6F7265207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x185B8819195C1BDCDA5D PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x742 JUMP JUMPDEST PUSH2 0x7B8 DUP5 PUSH2 0x8AC JUMP JUMPDEST PUSH0 PUSH2 0x7F3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x691 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL PUSH2 0x7ED DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH0 ADD SLOAD PUSH2 0x144E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1527 JUMP JUMPDEST SWAP1 POP PUSH2 0x7FF CALLER DUP3 PUSH2 0x1581 JUMP JUMPDEST DUP2 SLOAD PUSH2 0x80B SWAP1 DUP6 PUSH2 0x14CC JUMP JUMPDEST DUP1 DUP4 SSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0x831 SWAP2 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL SWAP2 PUSH2 0x7ED SWAP2 SWAP1 PUSH2 0x144E JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE DUP3 SLOAD PUSH2 0x84C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP7 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x4 DUP4 ADD SLOAD PUSH2 0x85B SWAP1 DUP6 PUSH2 0x14CC JUMP JUMPDEST PUSH1 0x4 DUP5 ADD SSTORE DUP4 ISZERO PUSH2 0x86D JUMPI PUSH0 PUSH1 0x2 DUP4 ADD SSTORE JUMPDEST PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE DUP6 SWAP1 CALLER SWAP1 PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x8C0 JUMPI PUSH2 0x8C0 PUSH2 0x1BFA JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0x8E0 JUMPI PUSH1 0x9 SLOAD PUSH2 0x8E2 JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x2 ADD SLOAD DUP2 GT PUSH2 0x8F6 JUMPI POP PUSH1 0x2 DUP2 ADD SLOAD JUMPDEST PUSH1 0x4 DUP3 ADD SLOAD PUSH0 DUP2 SWAP1 SUB PUSH2 0x90D JUMPI POP PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x925 DUP5 PUSH1 0x2 ADD SLOAD DUP5 PUSH2 0x14CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x951 PUSH1 0x7 SLOAD PUSH2 0x7ED DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x94B PUSH1 0x2 SLOAD DUP8 PUSH2 0x144E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x144E JUMP JUMPDEST SWAP1 POP PUSH2 0x97D PUSH2 0x972 DUP5 PUSH2 0x7ED DUP5 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL PUSH2 0x144E JUMP JUMPDEST PUSH1 0x3 DUP8 ADD SLOAD SWAP1 PUSH2 0x13E9 JUMP JUMPDEST PUSH1 0x3 DUP7 ADD SSTORE POP POP POP PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9A2 JUMPI PUSH2 0x9A2 PUSH2 0x1BFA JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x5 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP3 POP TIMESTAMP LT ISZERO PUSH2 0xA43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456D657267656E637920776974686472617720626C6F636B656420647572696E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x672073616C6520616E6420636F6F6C646F776E20706572696F642E0000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x742 JUMP JUMPDEST DUP1 SLOAD DUP3 SLOAD PUSH2 0xA5E SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH2 0x160F JUMP JUMPDEST DUP1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE DUP4 SWAP1 CALLER SWAP1 PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH2 0xAA7 SWAP2 PUSH2 0x14CC JUMP JUMPDEST PUSH1 0x4 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH0 DUP1 DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xB09 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xB25 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xB33 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xB51 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xB7B JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0xB84 DUP11 PUSH2 0x1673 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x2 DUP11 SWAP1 SSTORE PUSH1 0x8 DUP10 SWAP1 SSTORE PUSH1 0x9 DUP10 SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP3 DUP10 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0xC08 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC32 JUMPI PUSH2 0xC2A DUP2 PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xC19 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC3E PUSH2 0x138E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC4C JUMPI PUSH2 0xC4C PUSH2 0xC14 JUMP JUMPDEST PUSH2 0xC8D DUP3 PUSH2 0xC87 PUSH1 0x5 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xC66 JUMPI PUSH2 0xC66 PUSH2 0x1BFA JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x7 SLOAD PUSH2 0x14CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x13E9 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xCA7 JUMPI PUSH2 0xCA7 PUSH2 0x1BFA JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0xCC7 PUSH2 0x138E JUMP JUMPDEST PUSH2 0xCD0 PUSH0 PUSH2 0x1684 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD0F JUMPI PUSH2 0xD0F PUSH2 0x1BFA JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0xD3F DUP4 PUSH2 0x8AC JUMP JUMPDEST PUSH0 PUSH2 0xD74 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x691 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL PUSH2 0x7ED DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH0 ADD SLOAD PUSH2 0x144E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 SLOAD SWAP1 SWAP2 POP PUSH2 0xD83 SWAP1 DUP3 PUSH2 0x13E9 JUMP JUMPDEST DUP1 DUP4 SSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0xDA9 SWAP2 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL SWAP2 PUSH2 0x7ED SWAP2 SWAP1 PUSH2 0x144E JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH2 0xDBD SWAP1 DUP3 PUSH2 0x13E9 JUMP JUMPDEST PUSH1 0x4 DUP5 ADD SSTORE DUP2 SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP6 SWAP2 CALLER SWAP2 PUSH32 0x92F0BDF80F3916A4279540865E94EF327CF48639092106CCA4BDDC9BB1DE4A86 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0xE64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x66756E643A20746F6F206C6174652C20746865206661726D20697320636C6F73 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x742 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0xE7B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP5 PUSH2 0x16F4 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xE89 SWAP1 DUP3 SWAP1 PUSH2 0x1527 JUMP JUMPDEST PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE99 SWAP2 SWAP1 PUSH2 0x1C0E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH2 0xEAB SWAP1 DUP3 PUSH2 0x13E9 JUMP JUMPDEST PUSH1 0x3 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xEC5 JUMPI PUSH2 0xEC5 PUSH2 0x1BFA JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD SWAP2 POP DUP3 PUSH2 0xEF6 DUP6 PUSH2 0x8AC JUMP JUMPDEST DUP2 SLOAD ISZERO PUSH2 0xF40 JUMPI PUSH0 PUSH2 0xF32 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x691 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL PUSH2 0x7ED DUP9 PUSH1 0x3 ADD SLOAD DUP9 PUSH0 ADD SLOAD PUSH2 0x144E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xF3E CALLER DUP3 PUSH2 0x1581 JUMP JUMPDEST POP JUMPDEST DUP3 SLOAD PUSH2 0xF57 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP8 PUSH2 0x16F4 JUMP JUMPDEST PUSH1 0x4 DUP4 ADD SLOAD PUSH2 0xF66 SWAP1 DUP3 PUSH2 0x13E9 JUMP JUMPDEST PUSH1 0x4 DUP5 ADD SSTORE DUP2 SLOAD PUSH2 0xF77 SWAP1 DUP3 PUSH2 0x13E9 JUMP JUMPDEST DUP1 DUP4 SSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0xF9D SWAP2 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL SWAP2 PUSH2 0x7ED SWAP2 SWAP1 PUSH2 0x144E JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE DUP6 SWAP1 CALLER SWAP1 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP1 PUSH1 0x20 ADD PUSH2 0x89D JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xFEB JUMPI PUSH2 0xFEB PUSH2 0x1BFA JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x3 PUSH1 0x5 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP1 DUP2 ADD SLOAD PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP3 SWAP5 POP SWAP1 SWAP2 TIMESTAMP GT DUP1 ISZERO PUSH2 0x103B JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x10C2 JUMPI PUSH0 PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0x1052 JUMPI PUSH1 0x9 SLOAD PUSH2 0x1054 JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x106E DUP7 PUSH1 0x2 ADD SLOAD DUP4 PUSH2 0x14CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1094 PUSH1 0x7 SLOAD PUSH2 0x7ED DUP10 PUSH1 0x1 ADD SLOAD PUSH2 0x94B PUSH1 0x2 SLOAD DUP8 PUSH2 0x144E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x10BC PUSH2 0x10B5 DUP6 PUSH2 0x7ED DUP5 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL PUSH2 0x144E JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x13E9 JUMP JUMPDEST SWAP5 POP POP POP POP JUMPDEST PUSH2 0x10F2 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x691 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL PUSH2 0x7ED DUP7 DUP9 PUSH0 ADD SLOAD PUSH2 0x144E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1400493D PUSH1 0xE3 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA00249E8 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1144 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1168 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH2 0x11BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616C65206E6F742063726561746564207468726F75676820666163746F7279 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x742 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x11EF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1228 PUSH2 0x138E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1251 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x742 JUMP JUMPDEST PUSH2 0x125A DUP2 PUSH2 0x1684 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 DUP5 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x127B JUMPI PUSH2 0x127B PUSH2 0x1A92 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12A4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP6 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12C2 JUMPI PUSH2 0x12C2 PUSH2 0x1A92 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12EB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x1382 JUMPI PUSH2 0x131C DUP7 DUP9 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x130F JUMPI PUSH2 0x130F PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xCD2 JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x132E JUMPI PUSH2 0x132E PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x135D DUP7 DUP9 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1350 JUMPI PUSH2 0x1350 PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xFD6 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x136F JUMPI PUSH2 0x136F PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x12F0 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH2 0x13C0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCD0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x742 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x13F5 DUP4 DUP6 PUSH2 0x1C0E JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1447 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x742 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 SUB PUSH2 0x145D JUMPI POP PUSH0 PUSH2 0xCF5 JUMP JUMPDEST PUSH0 PUSH2 0x1468 DUP4 DUP6 PUSH2 0x1C3C JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x1475 DUP6 DUP4 PUSH2 0x1C53 JUMP JUMPDEST EQ PUSH2 0x1447 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x742 JUMP JUMPDEST PUSH0 DUP3 DUP3 GT ISZERO PUSH2 0x151D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x742 JUMP JUMPDEST PUSH2 0x1447 DUP3 DUP5 PUSH2 0x1BE7 JUMP JUMPDEST PUSH0 DUP1 DUP3 GT PUSH2 0x1577 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x742 JUMP JUMPDEST PUSH2 0x1447 DUP3 DUP5 PUSH2 0x1C53 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15D0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15F4 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1606 SWAP2 SWAP1 PUSH2 0x1C0E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x166E SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1733 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x167B PUSH2 0x1794 JUMP JUMPDEST PUSH2 0x125A DUP2 PUSH2 0x17DD JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x172D SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0x163C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1747 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 PUSH2 0x17E5 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 EQ ISZERO DUP1 ISZERO PUSH2 0x176B JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1769 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x166E JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x742 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xCD0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1228 PUSH2 0x1794 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1447 DUP4 DUP4 PUSH0 DUP5 PUSH0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1809 SWAP2 SWAP1 PUSH2 0x1C72 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1843 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1848 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1858 DUP7 DUP4 DUP4 PUSH2 0x1862 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1877 JUMPI PUSH2 0x1872 DUP3 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0x1447 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x188E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x18B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x742 JUMP JUMPDEST POP DUP1 PUSH2 0x1447 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x18CE JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x125A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x125A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1931 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1943 DUP2 PUSH2 0x18FE JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1953 DUP2 PUSH2 0x1912 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1969 DUP2 PUSH2 0x18FE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x197E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1447 DUP2 PUSH2 0x18FE JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x199A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x19BD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x19C8 DUP2 PUSH2 0x18FE JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x19D8 DUP2 PUSH2 0x18FE JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH2 0x19F6 DUP2 PUSH2 0x18FE JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A16 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1953 DUP2 PUSH2 0x1912 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A40 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1A52 DUP2 PUSH2 0x18FE JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A6F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1A81 DUP2 PUSH2 0x18FE JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AB7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1ACE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AE1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 DUP3 DUP3 GT ISZERO PUSH2 0x1AF5 JUMPI PUSH2 0x1AF5 PUSH2 0x1A92 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP7 DUP3 GT OR ISZERO PUSH2 0x1B1A JUMPI PUSH2 0x1B1A PUSH2 0x1A92 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP3 DUP4 MSTORE DUP2 DUP4 ADD SWAP4 POP DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP10 DUP5 GT ISZERO PUSH2 0x1B37 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1B5C JUMPI PUSH2 0x1B4D DUP7 PUSH2 0x195E JUMP JUMPDEST DUP6 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP4 DUP3 ADD SWAP4 PUSH2 0x1B3C JUMP JUMPDEST SWAP10 SWAP8 SWAP1 SWAP2 ADD CALLDATALOAD SWAP8 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B9B JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1B7F JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x1BB8 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B6C JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1BCA DUP2 DUP6 PUSH2 0x1B6C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xCF5 JUMPI PUSH2 0xCF5 PUSH2 0x1BD3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xCF5 JUMPI PUSH2 0xCF5 PUSH2 0x1BD3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C31 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1447 DUP2 PUSH2 0x1912 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xCF5 JUMPI PUSH2 0xCF5 PUSH2 0x1BD3 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1C6D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C91 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x1C77 JUMP JUMPDEST POP PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS BLOBHASH 0xD4 0xD7 0xF6 0xAB PUSH15 0xEB7A3C8F4DCD6E72906C35301870D4 EXTCODEHASH 0xA6 0xF8 PUSH22 0xC73F174CBEE064736F6C634300081800330000000000 ",
							"sourceMap": "336:16036:7:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__Ownable_init_54": {
									"entryPoint": 5747,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 6109,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_callOptionalReturn_848": {
									"entryPoint": 5939,
									"id": 848,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 6036,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 5006,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_447": {
									"entryPoint": null,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": null,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": null,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_476": {
									"entryPoint": null,
									"id": 476,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1150": {
									"entryPoint": 6334,
									"id": 1150,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_193": {
									"entryPoint": 5764,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_1432": {
									"entryPoint": 1206,
									"id": 1432,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_2524": {
									"entryPoint": 5097,
									"id": 2524,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@compound_2144": {
									"entryPoint": 3323,
									"id": 2144,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@deposit_1917": {
									"entryPoint": 3761,
									"id": 1917,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@deposited_1492": {
									"entryPoint": 3282,
									"id": 1492,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_2602": {
									"entryPoint": 5415,
									"id": 2602,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@emergencyWithdraw_2227": {
									"entryPoint": 2446,
									"id": 2227,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@endTimestamp_1218": {
									"entryPoint": null,
									"id": 1218,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@erc20Transfer_2246": {
									"entryPoint": 5505,
									"id": 2246,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@erc20_1192": {
									"entryPoint": null,
									"id": 1192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_1018": {
									"entryPoint": null,
									"id": 1018,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_972": {
									"entryPoint": 6117,
									"id": 972,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@fund_1383": {
									"entryPoint": 3592,
									"id": 1383,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getPendingAndDepositedForUsers_2324": {
									"entryPoint": 4701,
									"id": 2324,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@initialize_1308": {
									"entryPoint": 2756,
									"id": 1308,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@massUpdatePools_1658": {
									"entryPoint": 3092,
									"id": 1658,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_2580": {
									"entryPoint": 5198,
									"id": 2580,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_105": {
									"entryPoint": null,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paidOut_1194": {
									"entryPoint": null,
									"id": 1194,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pending_1598": {
									"entryPoint": 4054,
									"id": 1598,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@poolInfo_1205": {
									"entryPoint": 1133,
									"id": 1205,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolLength_1340": {
									"entryPoint": null,
									"id": 1340,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 3263,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerSecond_1196": {
									"entryPoint": null,
									"id": 1196,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_685": {
									"entryPoint": 5876,
									"id": 685,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_658": {
									"entryPoint": 5647,
									"id": 658,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@salesFactory_1201": {
									"entryPoint": null,
									"id": 1201,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setSalesFactory_1331": {
									"entryPoint": 1552,
									"id": 1331,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTokensUnlockTime_1702": {
									"entryPoint": 4349,
									"id": 1702,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@set_1470": {
									"entryPoint": 3126,
									"id": 1470,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@startTimestamp_1216": {
									"entryPoint": null,
									"id": 1216,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_2546": {
									"entryPoint": 5324,
									"id": 2546,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalAllocPoint_1214": {
									"entryPoint": null,
									"id": 1214,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalPending_1633": {
									"entryPoint": 1612,
									"id": 1633,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalRewards_1198": {
									"entryPoint": null,
									"id": 1198,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_164": {
									"entryPoint": 4640,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updatePool_1798": {
									"entryPoint": 2220,
									"id": 1798,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userInfo_1212": {
									"entryPoint": null,
									"id": 1212,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1110": {
									"entryPoint": 6242,
									"id": 1110,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_2050": {
									"entryPoint": 1693,
									"id": 2050,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 6494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_contract$_IERC20_$572t_uint256t_uint256t_address": {
									"entryPoint": 6569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_uint256": {
									"entryPoint": 6822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 6703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_addresst_uint256": {
									"entryPoint": 6749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_contract$_IERC20_$572t_bool": {
									"entryPoint": 6431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_bool": {
									"entryPoint": 6660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 7020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7078,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$572__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$572_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ISalesFactory_$2342__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f13159535f66a78aff8e87048116728eebc9a6eadc436340bf8ddf945a670f5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_56b9ca3553e1051f7fcbcaba90d07b4176d745112fcce0c7cc3b593a9da191ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ea8c4190832cfece80b3f2404c6211d113e3c15b0e1b7b1fbf8c07c9c81bca0e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f95e2b94b64afe2d9116800b91afd89844f4c614e9be6f53796fc62d9ae9798e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7123,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7162,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6802,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 6418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_contract_IERC20": {
									"entryPoint": 6398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13985:10",
										"nodeType": "YulBlock",
										"src": "0:13985:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:10",
													"nodeType": "YulBlock",
													"src": "115:76:10",
													"statements": [
														{
															"nativeSrc": "125:26:10",
															"nodeType": "YulAssignment",
															"src": "125:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:10",
																		"nodeType": "YulLiteral",
																		"src": "148:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:10"
																},
																"nativeSrc": "133:18:10",
																"nodeType": "YulFunctionCall",
																"src": "133:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:10"
																},
																"nativeSrc": "160:25:10",
																"nodeType": "YulFunctionCall",
																"src": "160:25:10"
															},
															"nativeSrc": "160:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:10",
														"nodeType": "YulTypedName",
														"src": "84:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:10",
														"nodeType": "YulTypedName",
														"src": "95:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:10",
														"nodeType": "YulTypedName",
														"src": "106:4:10",
														"type": ""
													}
												],
												"src": "14:177:10"
											},
											{
												"body": {
													"nativeSrc": "266:110:10",
													"nodeType": "YulBlock",
													"src": "266:110:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "312:16:10",
																"nodeType": "YulBlock",
																"src": "312:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "321:1:10",
																					"nodeType": "YulLiteral",
																					"src": "321:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "324:1:10",
																					"nodeType": "YulLiteral",
																					"src": "324:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "314:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "314:6:10"
																			},
																			"nativeSrc": "314:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "314:12:10"
																		},
																		"nativeSrc": "314:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "314:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "287:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "287:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "296:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "296:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "283:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "283:3:10"
																		},
																		"nativeSrc": "283:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "283:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "308:2:10",
																		"nodeType": "YulLiteral",
																		"src": "308:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "279:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "279:3:10"
																},
																"nativeSrc": "279:32:10",
																"nodeType": "YulFunctionCall",
																"src": "279:32:10"
															},
															"nativeSrc": "276:52:10",
															"nodeType": "YulIf",
															"src": "276:52:10"
														},
														{
															"nativeSrc": "337:33:10",
															"nodeType": "YulAssignment",
															"src": "337:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "360:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "360:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "347:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "347:12:10"
																},
																"nativeSrc": "347:23:10",
																"nodeType": "YulFunctionCall",
																"src": "347:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "337:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "337:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "196:180:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "232:9:10",
														"nodeType": "YulTypedName",
														"src": "232:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "243:7:10",
														"nodeType": "YulTypedName",
														"src": "243:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "255:6:10",
														"nodeType": "YulTypedName",
														"src": "255:6:10",
														"type": ""
													}
												],
												"src": "196:180:10"
											},
											{
												"body": {
													"nativeSrc": "608:276:10",
													"nodeType": "YulBlock",
													"src": "608:276:10",
													"statements": [
														{
															"nativeSrc": "618:27:10",
															"nodeType": "YulAssignment",
															"src": "618:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "630:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "630:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:3:10",
																		"nodeType": "YulLiteral",
																		"src": "641:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "626:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "626:3:10"
																},
																"nativeSrc": "626:19:10",
																"nodeType": "YulFunctionCall",
																"src": "626:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "618:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "618:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "661:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "661:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "676:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "676:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "692:3:10",
																								"nodeType": "YulLiteral",
																								"src": "692:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "697:1:10",
																								"nodeType": "YulLiteral",
																								"src": "697:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "688:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "688:3:10"
																						},
																						"nativeSrc": "688:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "688:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "701:1:10",
																						"nodeType": "YulLiteral",
																						"src": "701:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "684:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:10"
																				},
																				"nativeSrc": "684:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "684:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "672:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:10"
																		},
																		"nativeSrc": "672:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "672:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "654:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "654:6:10"
																},
																"nativeSrc": "654:51:10",
																"nodeType": "YulFunctionCall",
																"src": "654:51:10"
															},
															"nativeSrc": "654:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "654:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "725:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "725:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "736:2:10",
																				"nodeType": "YulLiteral",
																				"src": "736:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "721:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "721:3:10"
																		},
																		"nativeSrc": "721:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "721:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "741:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "741:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "714:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "714:6:10"
																},
																"nativeSrc": "714:34:10",
																"nodeType": "YulFunctionCall",
																"src": "714:34:10"
															},
															"nativeSrc": "714:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "714:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "768:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "768:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "779:2:10",
																				"nodeType": "YulLiteral",
																				"src": "779:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "764:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "764:3:10"
																		},
																		"nativeSrc": "764:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "764:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "784:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "757:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "757:6:10"
																},
																"nativeSrc": "757:34:10",
																"nodeType": "YulFunctionCall",
																"src": "757:34:10"
															},
															"nativeSrc": "757:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "757:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "811:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "811:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "822:2:10",
																				"nodeType": "YulLiteral",
																				"src": "822:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "807:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "807:3:10"
																		},
																		"nativeSrc": "807:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "807:18:10"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "827:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "827:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "800:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "800:6:10"
																},
																"nativeSrc": "800:34:10",
																"nodeType": "YulFunctionCall",
																"src": "800:34:10"
															},
															"nativeSrc": "800:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "800:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "854:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "854:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "865:3:10",
																				"nodeType": "YulLiteral",
																				"src": "865:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "850:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "850:3:10"
																		},
																		"nativeSrc": "850:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "850:19:10"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "871:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "871:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "843:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "843:6:10"
																},
																"nativeSrc": "843:35:10",
																"nodeType": "YulFunctionCall",
																"src": "843:35:10"
															},
															"nativeSrc": "843:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "843:35:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$572_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "381:503:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "545:9:10",
														"nodeType": "YulTypedName",
														"src": "545:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "556:6:10",
														"nodeType": "YulTypedName",
														"src": "556:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "564:6:10",
														"nodeType": "YulTypedName",
														"src": "564:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "572:6:10",
														"nodeType": "YulTypedName",
														"src": "572:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "580:6:10",
														"nodeType": "YulTypedName",
														"src": "580:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "588:6:10",
														"nodeType": "YulTypedName",
														"src": "588:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "599:4:10",
														"nodeType": "YulTypedName",
														"src": "599:4:10",
														"type": ""
													}
												],
												"src": "381:503:10"
											},
											{
												"body": {
													"nativeSrc": "942:86:10",
													"nodeType": "YulBlock",
													"src": "942:86:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1006:16:10",
																"nodeType": "YulBlock",
																"src": "1006:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1015:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1015:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1018:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1018:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1008:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1008:6:10"
																			},
																			"nativeSrc": "1008:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1008:12:10"
																		},
																		"nativeSrc": "1008:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1008:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "965:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "965:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "976:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "976:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "991:3:10",
																										"nodeType": "YulLiteral",
																										"src": "991:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "996:1:10",
																										"nodeType": "YulLiteral",
																										"src": "996:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "987:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "987:3:10"
																								},
																								"nativeSrc": "987:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "987:11:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1000:1:10",
																								"nodeType": "YulLiteral",
																								"src": "1000:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "983:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "983:3:10"
																						},
																						"nativeSrc": "983:19:10",
																						"nodeType": "YulFunctionCall",
																						"src": "983:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "972:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "972:3:10"
																				},
																				"nativeSrc": "972:31:10",
																				"nodeType": "YulFunctionCall",
																				"src": "972:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "962:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "962:2:10"
																		},
																		"nativeSrc": "962:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "962:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "955:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "955:6:10"
																},
																"nativeSrc": "955:50:10",
																"nodeType": "YulFunctionCall",
																"src": "955:50:10"
															},
															"nativeSrc": "952:70:10",
															"nodeType": "YulIf",
															"src": "952:70:10"
														}
													]
												},
												"name": "validator_revert_contract_IERC20",
												"nativeSrc": "889:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "931:5:10",
														"nodeType": "YulTypedName",
														"src": "931:5:10",
														"type": ""
													}
												],
												"src": "889:139:10"
											},
											{
												"body": {
													"nativeSrc": "1075:76:10",
													"nodeType": "YulBlock",
													"src": "1075:76:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1129:16:10",
																"nodeType": "YulBlock",
																"src": "1129:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1138:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1138:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1141:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1141:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1131:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1131:6:10"
																			},
																			"nativeSrc": "1131:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1131:12:10"
																		},
																		"nativeSrc": "1131:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1131:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1098:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1098:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "1119:5:10",
																								"nodeType": "YulIdentifier",
																								"src": "1119:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "1112:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "1112:6:10"
																						},
																						"nativeSrc": "1112:13:10",
																						"nodeType": "YulFunctionCall",
																						"src": "1112:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1105:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "1105:6:10"
																				},
																				"nativeSrc": "1105:21:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1105:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1095:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1095:2:10"
																		},
																		"nativeSrc": "1095:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1095:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1088:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1088:6:10"
																},
																"nativeSrc": "1088:40:10",
																"nodeType": "YulFunctionCall",
																"src": "1088:40:10"
															},
															"nativeSrc": "1085:60:10",
															"nodeType": "YulIf",
															"src": "1085:60:10"
														}
													]
												},
												"name": "validator_revert_bool",
												"nativeSrc": "1033:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1064:5:10",
														"nodeType": "YulTypedName",
														"src": "1064:5:10",
														"type": ""
													}
												],
												"src": "1033:118:10"
											},
											{
												"body": {
													"nativeSrc": "1271:357:10",
													"nodeType": "YulBlock",
													"src": "1271:357:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1317:16:10",
																"nodeType": "YulBlock",
																"src": "1317:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1326:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1326:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1329:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1329:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1319:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1319:6:10"
																			},
																			"nativeSrc": "1319:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1319:12:10"
																		},
																		"nativeSrc": "1319:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1319:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1292:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1292:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1301:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1301:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1288:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1288:3:10"
																		},
																		"nativeSrc": "1288:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1288:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1313:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1313:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1284:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1284:3:10"
																},
																"nativeSrc": "1284:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1284:32:10"
															},
															"nativeSrc": "1281:52:10",
															"nodeType": "YulIf",
															"src": "1281:52:10"
														},
														{
															"nativeSrc": "1342:33:10",
															"nodeType": "YulAssignment",
															"src": "1342:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1365:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1365:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1352:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1352:12:10"
																},
																"nativeSrc": "1352:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1352:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1342:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:10"
																}
															]
														},
														{
															"nativeSrc": "1384:45:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1384:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1414:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1414:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1425:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1425:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1410:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1410:3:10"
																		},
																		"nativeSrc": "1410:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1410:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1397:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1397:12:10"
																},
																"nativeSrc": "1397:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1397:32:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1388:5:10",
																	"nodeType": "YulTypedName",
																	"src": "1388:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1471:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1471:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nativeSrc": "1438:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "1438:32:10"
																},
																"nativeSrc": "1438:39:10",
																"nodeType": "YulFunctionCall",
																"src": "1438:39:10"
															},
															"nativeSrc": "1438:39:10",
															"nodeType": "YulExpressionStatement",
															"src": "1438:39:10"
														},
														{
															"nativeSrc": "1486:15:10",
															"nodeType": "YulAssignment",
															"src": "1486:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "1496:5:10",
																"nodeType": "YulIdentifier",
																"src": "1496:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1486:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1486:6:10"
																}
															]
														},
														{
															"nativeSrc": "1510:47:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1510:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1542:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1542:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1553:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1553:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1538:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1538:3:10"
																		},
																		"nativeSrc": "1538:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1538:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1525:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1525:12:10"
																},
																"nativeSrc": "1525:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1525:32:10"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1514:7:10",
																	"nodeType": "YulTypedName",
																	"src": "1514:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "1588:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "1588:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "1566:21:10",
																	"nodeType": "YulIdentifier",
																	"src": "1566:21:10"
																},
																"nativeSrc": "1566:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1566:30:10"
															},
															"nativeSrc": "1566:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "1566:30:10"
														},
														{
															"nativeSrc": "1605:17:10",
															"nodeType": "YulAssignment",
															"src": "1605:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "1615:7:10",
																"nodeType": "YulIdentifier",
																"src": "1615:7:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1605:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1605:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_contract$_IERC20_$572t_bool",
												"nativeSrc": "1156:472:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1221:9:10",
														"nodeType": "YulTypedName",
														"src": "1221:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1232:7:10",
														"nodeType": "YulTypedName",
														"src": "1232:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1244:6:10",
														"nodeType": "YulTypedName",
														"src": "1244:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1252:6:10",
														"nodeType": "YulTypedName",
														"src": "1252:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1260:6:10",
														"nodeType": "YulTypedName",
														"src": "1260:6:10",
														"type": ""
													}
												],
												"src": "1156:472:10"
											},
											{
												"body": {
													"nativeSrc": "1682:93:10",
													"nodeType": "YulBlock",
													"src": "1682:93:10",
													"statements": [
														{
															"nativeSrc": "1692:29:10",
															"nodeType": "YulAssignment",
															"src": "1692:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1714:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1714:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1701:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1701:12:10"
																},
																"nativeSrc": "1701:20:10",
																"nodeType": "YulFunctionCall",
																"src": "1701:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1692:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1692:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1763:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1763:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nativeSrc": "1730:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "1730:32:10"
																},
																"nativeSrc": "1730:39:10",
																"nodeType": "YulFunctionCall",
																"src": "1730:39:10"
															},
															"nativeSrc": "1730:39:10",
															"nodeType": "YulExpressionStatement",
															"src": "1730:39:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1633:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1661:6:10",
														"nodeType": "YulTypedName",
														"src": "1661:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1672:5:10",
														"nodeType": "YulTypedName",
														"src": "1672:5:10",
														"type": ""
													}
												],
												"src": "1633:142:10"
											},
											{
												"body": {
													"nativeSrc": "1850:185:10",
													"nodeType": "YulBlock",
													"src": "1850:185:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1896:16:10",
																"nodeType": "YulBlock",
																"src": "1896:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1905:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1905:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1908:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1908:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1898:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1898:6:10"
																			},
																			"nativeSrc": "1898:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1898:12:10"
																		},
																		"nativeSrc": "1898:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1898:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1871:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1871:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1880:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1880:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1867:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1867:3:10"
																		},
																		"nativeSrc": "1867:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1867:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1892:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1892:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1863:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1863:3:10"
																},
																"nativeSrc": "1863:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1863:32:10"
															},
															"nativeSrc": "1860:52:10",
															"nodeType": "YulIf",
															"src": "1860:52:10"
														},
														{
															"nativeSrc": "1921:36:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1921:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1947:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1947:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1934:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1934:12:10"
																},
																"nativeSrc": "1934:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1934:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1925:5:10",
																	"nodeType": "YulTypedName",
																	"src": "1925:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1999:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1999:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nativeSrc": "1966:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "1966:32:10"
																},
																"nativeSrc": "1966:39:10",
																"nodeType": "YulFunctionCall",
																"src": "1966:39:10"
															},
															"nativeSrc": "1966:39:10",
															"nodeType": "YulExpressionStatement",
															"src": "1966:39:10"
														},
														{
															"nativeSrc": "2014:15:10",
															"nodeType": "YulAssignment",
															"src": "2014:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "2024:5:10",
																"nodeType": "YulIdentifier",
																"src": "2024:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2014:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2014:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1780:255:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1816:9:10",
														"nodeType": "YulTypedName",
														"src": "1816:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1827:7:10",
														"nodeType": "YulTypedName",
														"src": "1827:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1839:6:10",
														"nodeType": "YulTypedName",
														"src": "1839:6:10",
														"type": ""
													}
												],
												"src": "1780:255:10"
											},
											{
												"body": {
													"nativeSrc": "2127:161:10",
													"nodeType": "YulBlock",
													"src": "2127:161:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2173:16:10",
																"nodeType": "YulBlock",
																"src": "2173:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2182:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2182:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2185:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2185:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2175:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2175:6:10"
																			},
																			"nativeSrc": "2175:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2175:12:10"
																		},
																		"nativeSrc": "2175:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2175:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2148:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2148:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2157:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2157:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2144:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2144:3:10"
																		},
																		"nativeSrc": "2144:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2144:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2169:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2169:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2140:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2140:3:10"
																},
																"nativeSrc": "2140:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2140:32:10"
															},
															"nativeSrc": "2137:52:10",
															"nodeType": "YulIf",
															"src": "2137:52:10"
														},
														{
															"nativeSrc": "2198:33:10",
															"nodeType": "YulAssignment",
															"src": "2198:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2221:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2221:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2208:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2208:12:10"
																},
																"nativeSrc": "2208:23:10",
																"nodeType": "YulFunctionCall",
																"src": "2208:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2198:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2198:6:10"
																}
															]
														},
														{
															"nativeSrc": "2240:42:10",
															"nodeType": "YulAssignment",
															"src": "2240:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2267:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2267:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2278:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2278:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2263:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2263:3:10"
																		},
																		"nativeSrc": "2263:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2263:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2250:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2250:12:10"
																},
																"nativeSrc": "2250:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2250:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2240:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2240:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "2040:248:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2085:9:10",
														"nodeType": "YulTypedName",
														"src": "2085:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2096:7:10",
														"nodeType": "YulTypedName",
														"src": "2096:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2108:6:10",
														"nodeType": "YulTypedName",
														"src": "2108:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2116:6:10",
														"nodeType": "YulTypedName",
														"src": "2116:6:10",
														"type": ""
													}
												],
												"src": "2040:248:10"
											},
											{
												"body": {
													"nativeSrc": "2445:553:10",
													"nodeType": "YulBlock",
													"src": "2445:553:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2492:16:10",
																"nodeType": "YulBlock",
																"src": "2492:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2501:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2501:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2504:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2504:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2494:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2494:6:10"
																			},
																			"nativeSrc": "2494:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2494:12:10"
																		},
																		"nativeSrc": "2494:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2494:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2466:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2466:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2475:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2475:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2462:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2462:3:10"
																		},
																		"nativeSrc": "2462:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2462:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2487:3:10",
																		"nodeType": "YulLiteral",
																		"src": "2487:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2458:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2458:3:10"
																},
																"nativeSrc": "2458:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2458:33:10"
															},
															"nativeSrc": "2455:53:10",
															"nodeType": "YulIf",
															"src": "2455:53:10"
														},
														{
															"nativeSrc": "2517:36:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2517:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2543:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2543:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2530:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2530:12:10"
																},
																"nativeSrc": "2530:23:10",
																"nodeType": "YulFunctionCall",
																"src": "2530:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2521:5:10",
																	"nodeType": "YulTypedName",
																	"src": "2521:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2595:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2595:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nativeSrc": "2562:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "2562:32:10"
																},
																"nativeSrc": "2562:39:10",
																"nodeType": "YulFunctionCall",
																"src": "2562:39:10"
															},
															"nativeSrc": "2562:39:10",
															"nodeType": "YulExpressionStatement",
															"src": "2562:39:10"
														},
														{
															"nativeSrc": "2610:15:10",
															"nodeType": "YulAssignment",
															"src": "2610:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "2620:5:10",
																"nodeType": "YulIdentifier",
																"src": "2620:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2610:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2610:6:10"
																}
															]
														},
														{
															"nativeSrc": "2634:47:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2634:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2666:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2666:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2677:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2677:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2662:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2662:3:10"
																		},
																		"nativeSrc": "2662:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2662:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2649:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2649:12:10"
																},
																"nativeSrc": "2649:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2649:32:10"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2638:7:10",
																	"nodeType": "YulTypedName",
																	"src": "2638:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "2723:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "2723:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nativeSrc": "2690:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "2690:32:10"
																},
																"nativeSrc": "2690:41:10",
																"nodeType": "YulFunctionCall",
																"src": "2690:41:10"
															},
															"nativeSrc": "2690:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "2690:41:10"
														},
														{
															"nativeSrc": "2740:17:10",
															"nodeType": "YulAssignment",
															"src": "2740:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "2750:7:10",
																"nodeType": "YulIdentifier",
																"src": "2750:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2740:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2740:6:10"
																}
															]
														},
														{
															"nativeSrc": "2766:42:10",
															"nodeType": "YulAssignment",
															"src": "2766:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2793:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2793:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2804:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2804:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2789:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2789:3:10"
																		},
																		"nativeSrc": "2789:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2789:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2776:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2776:12:10"
																},
																"nativeSrc": "2776:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2776:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2766:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2766:6:10"
																}
															]
														},
														{
															"nativeSrc": "2817:42:10",
															"nodeType": "YulAssignment",
															"src": "2817:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2844:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2844:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2855:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2855:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2840:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2840:3:10"
																		},
																		"nativeSrc": "2840:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2840:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2827:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2827:12:10"
																},
																"nativeSrc": "2827:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2827:32:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "2817:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2817:6:10"
																}
															]
														},
														{
															"nativeSrc": "2868:48:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2868:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2900:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2900:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2911:3:10",
																				"nodeType": "YulLiteral",
																				"src": "2911:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2896:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2896:3:10"
																		},
																		"nativeSrc": "2896:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2896:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2883:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2883:12:10"
																},
																"nativeSrc": "2883:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2883:33:10"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "2872:7:10",
																	"nodeType": "YulTypedName",
																	"src": "2872:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nativeSrc": "2958:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "2958:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nativeSrc": "2925:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "2925:32:10"
																},
																"nativeSrc": "2925:41:10",
																"nodeType": "YulFunctionCall",
																"src": "2925:41:10"
															},
															"nativeSrc": "2925:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "2925:41:10"
														},
														{
															"nativeSrc": "2975:17:10",
															"nodeType": "YulAssignment",
															"src": "2975:17:10",
															"value": {
																"name": "value_2",
																"nativeSrc": "2985:7:10",
																"nodeType": "YulIdentifier",
																"src": "2985:7:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "2975:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_contract$_IERC20_$572t_uint256t_uint256t_address",
												"nativeSrc": "2293:705:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2379:9:10",
														"nodeType": "YulTypedName",
														"src": "2379:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2390:7:10",
														"nodeType": "YulTypedName",
														"src": "2390:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2402:6:10",
														"nodeType": "YulTypedName",
														"src": "2402:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2410:6:10",
														"nodeType": "YulTypedName",
														"src": "2410:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2418:6:10",
														"nodeType": "YulTypedName",
														"src": "2418:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2426:6:10",
														"nodeType": "YulTypedName",
														"src": "2426:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2434:6:10",
														"nodeType": "YulTypedName",
														"src": "2434:6:10",
														"type": ""
													}
												],
												"src": "2293:705:10"
											},
											{
												"body": {
													"nativeSrc": "3104:276:10",
													"nodeType": "YulBlock",
													"src": "3104:276:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3150:16:10",
																"nodeType": "YulBlock",
																"src": "3150:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3159:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3159:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3162:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3162:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3152:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3152:6:10"
																			},
																			"nativeSrc": "3152:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3152:12:10"
																		},
																		"nativeSrc": "3152:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3152:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3125:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3125:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3134:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3134:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3121:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3121:3:10"
																		},
																		"nativeSrc": "3121:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3121:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3146:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3146:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3117:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:10"
																},
																"nativeSrc": "3117:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3117:32:10"
															},
															"nativeSrc": "3114:52:10",
															"nodeType": "YulIf",
															"src": "3114:52:10"
														},
														{
															"nativeSrc": "3175:33:10",
															"nodeType": "YulAssignment",
															"src": "3175:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3198:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3198:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3185:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3185:12:10"
																},
																"nativeSrc": "3185:23:10",
																"nodeType": "YulFunctionCall",
																"src": "3185:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3175:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3175:6:10"
																}
															]
														},
														{
															"nativeSrc": "3217:42:10",
															"nodeType": "YulAssignment",
															"src": "3217:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3244:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3244:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3255:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3255:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3240:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3240:3:10"
																		},
																		"nativeSrc": "3240:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3240:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3227:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3227:12:10"
																},
																"nativeSrc": "3227:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3227:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3217:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3217:6:10"
																}
															]
														},
														{
															"nativeSrc": "3268:45:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3268:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3298:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3298:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3309:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3309:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3294:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3294:3:10"
																		},
																		"nativeSrc": "3294:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3294:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3281:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3281:12:10"
																},
																"nativeSrc": "3281:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3281:32:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3272:5:10",
																	"nodeType": "YulTypedName",
																	"src": "3272:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3344:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3344:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "3322:21:10",
																	"nodeType": "YulIdentifier",
																	"src": "3322:21:10"
																},
																"nativeSrc": "3322:28:10",
																"nodeType": "YulFunctionCall",
																"src": "3322:28:10"
															},
															"nativeSrc": "3322:28:10",
															"nodeType": "YulExpressionStatement",
															"src": "3322:28:10"
														},
														{
															"nativeSrc": "3359:15:10",
															"nodeType": "YulAssignment",
															"src": "3359:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "3369:5:10",
																"nodeType": "YulIdentifier",
																"src": "3369:5:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3359:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3359:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bool",
												"nativeSrc": "3003:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3054:9:10",
														"nodeType": "YulTypedName",
														"src": "3054:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3065:7:10",
														"nodeType": "YulTypedName",
														"src": "3065:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3077:6:10",
														"nodeType": "YulTypedName",
														"src": "3077:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3085:6:10",
														"nodeType": "YulTypedName",
														"src": "3085:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3093:6:10",
														"nodeType": "YulTypedName",
														"src": "3093:6:10",
														"type": ""
													}
												],
												"src": "3003:377:10"
											},
											{
												"body": {
													"nativeSrc": "3500:102:10",
													"nodeType": "YulBlock",
													"src": "3500:102:10",
													"statements": [
														{
															"nativeSrc": "3510:26:10",
															"nodeType": "YulAssignment",
															"src": "3510:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3522:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3522:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3533:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3533:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3518:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3518:3:10"
																},
																"nativeSrc": "3518:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3518:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3510:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3510:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3552:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3552:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3567:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3567:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3583:3:10",
																								"nodeType": "YulLiteral",
																								"src": "3583:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3588:1:10",
																								"nodeType": "YulLiteral",
																								"src": "3588:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3579:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "3579:3:10"
																						},
																						"nativeSrc": "3579:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "3579:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3592:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3592:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3575:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3575:3:10"
																				},
																				"nativeSrc": "3575:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3575:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3563:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3563:3:10"
																		},
																		"nativeSrc": "3563:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3563:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3545:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3545:6:10"
																},
																"nativeSrc": "3545:51:10",
																"nodeType": "YulFunctionCall",
																"src": "3545:51:10"
															},
															"nativeSrc": "3545:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "3545:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$572__to_t_address__fromStack_reversed",
												"nativeSrc": "3385:217:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3469:9:10",
														"nodeType": "YulTypedName",
														"src": "3469:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3480:6:10",
														"nodeType": "YulTypedName",
														"src": "3480:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3491:4:10",
														"nodeType": "YulTypedName",
														"src": "3491:4:10",
														"type": ""
													}
												],
												"src": "3385:217:10"
											},
											{
												"body": {
													"nativeSrc": "3708:102:10",
													"nodeType": "YulBlock",
													"src": "3708:102:10",
													"statements": [
														{
															"nativeSrc": "3718:26:10",
															"nodeType": "YulAssignment",
															"src": "3718:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3730:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3730:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3741:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3741:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3726:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3726:3:10"
																},
																"nativeSrc": "3726:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3726:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3718:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3718:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3760:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3760:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3775:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3775:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3791:3:10",
																								"nodeType": "YulLiteral",
																								"src": "3791:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3796:1:10",
																								"nodeType": "YulLiteral",
																								"src": "3796:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3787:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "3787:3:10"
																						},
																						"nativeSrc": "3787:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "3787:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3800:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3800:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3783:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3783:3:10"
																				},
																				"nativeSrc": "3783:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3783:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3771:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3771:3:10"
																		},
																		"nativeSrc": "3771:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3771:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3753:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:10"
																},
																"nativeSrc": "3753:51:10",
																"nodeType": "YulFunctionCall",
																"src": "3753:51:10"
															},
															"nativeSrc": "3753:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "3753:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3607:203:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3677:9:10",
														"nodeType": "YulTypedName",
														"src": "3677:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3688:6:10",
														"nodeType": "YulTypedName",
														"src": "3688:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3699:4:10",
														"nodeType": "YulTypedName",
														"src": "3699:4:10",
														"type": ""
													}
												],
												"src": "3607:203:10"
											},
											{
												"body": {
													"nativeSrc": "3902:236:10",
													"nodeType": "YulBlock",
													"src": "3902:236:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3948:16:10",
																"nodeType": "YulBlock",
																"src": "3948:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3957:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3957:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3960:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3960:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3950:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3950:6:10"
																			},
																			"nativeSrc": "3950:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3950:12:10"
																		},
																		"nativeSrc": "3950:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3950:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3923:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3923:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3932:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3932:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3919:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3919:3:10"
																		},
																		"nativeSrc": "3919:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3919:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3944:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3944:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3915:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3915:3:10"
																},
																"nativeSrc": "3915:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3915:32:10"
															},
															"nativeSrc": "3912:52:10",
															"nodeType": "YulIf",
															"src": "3912:52:10"
														},
														{
															"nativeSrc": "3973:33:10",
															"nodeType": "YulAssignment",
															"src": "3973:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3996:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3996:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3983:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3983:12:10"
																},
																"nativeSrc": "3983:23:10",
																"nodeType": "YulFunctionCall",
																"src": "3983:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3973:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3973:6:10"
																}
															]
														},
														{
															"nativeSrc": "4015:45:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4015:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4045:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4045:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4056:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4056:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4041:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4041:3:10"
																		},
																		"nativeSrc": "4041:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4041:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4028:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "4028:12:10"
																},
																"nativeSrc": "4028:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4028:32:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4019:5:10",
																	"nodeType": "YulTypedName",
																	"src": "4019:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4102:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4102:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nativeSrc": "4069:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "4069:32:10"
																},
																"nativeSrc": "4069:39:10",
																"nodeType": "YulFunctionCall",
																"src": "4069:39:10"
															},
															"nativeSrc": "4069:39:10",
															"nodeType": "YulExpressionStatement",
															"src": "4069:39:10"
														},
														{
															"nativeSrc": "4117:15:10",
															"nodeType": "YulAssignment",
															"src": "4117:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "4127:5:10",
																"nodeType": "YulIdentifier",
																"src": "4127:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4117:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4117:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "3815:323:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3860:9:10",
														"nodeType": "YulTypedName",
														"src": "3860:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3871:7:10",
														"nodeType": "YulTypedName",
														"src": "3871:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3883:6:10",
														"nodeType": "YulTypedName",
														"src": "3883:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3891:6:10",
														"nodeType": "YulTypedName",
														"src": "3891:6:10",
														"type": ""
													}
												],
												"src": "3815:323:10"
											},
											{
												"body": {
													"nativeSrc": "4300:162:10",
													"nodeType": "YulBlock",
													"src": "4300:162:10",
													"statements": [
														{
															"nativeSrc": "4310:26:10",
															"nodeType": "YulAssignment",
															"src": "4310:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4322:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4322:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4333:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4333:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4318:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4318:3:10"
																},
																"nativeSrc": "4318:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4318:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4310:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4310:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4352:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4352:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4363:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4363:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4345:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4345:6:10"
																},
																"nativeSrc": "4345:25:10",
																"nodeType": "YulFunctionCall",
																"src": "4345:25:10"
															},
															"nativeSrc": "4345:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "4345:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4390:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4390:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4401:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4401:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4386:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4386:3:10"
																		},
																		"nativeSrc": "4386:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4386:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4406:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4406:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4379:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4379:6:10"
																},
																"nativeSrc": "4379:34:10",
																"nodeType": "YulFunctionCall",
																"src": "4379:34:10"
															},
															"nativeSrc": "4379:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "4379:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4433:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4433:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4444:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4444:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4429:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4429:3:10"
																		},
																		"nativeSrc": "4429:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4429:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4449:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4449:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4422:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4422:6:10"
																},
																"nativeSrc": "4422:34:10",
																"nodeType": "YulFunctionCall",
																"src": "4422:34:10"
															},
															"nativeSrc": "4422:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "4422:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4143:319:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4253:9:10",
														"nodeType": "YulTypedName",
														"src": "4253:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4264:6:10",
														"nodeType": "YulTypedName",
														"src": "4264:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4272:6:10",
														"nodeType": "YulTypedName",
														"src": "4272:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4280:6:10",
														"nodeType": "YulTypedName",
														"src": "4280:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4291:4:10",
														"nodeType": "YulTypedName",
														"src": "4291:4:10",
														"type": ""
													}
												],
												"src": "4143:319:10"
											},
											{
												"body": {
													"nativeSrc": "4571:287:10",
													"nodeType": "YulBlock",
													"src": "4571:287:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4617:16:10",
																"nodeType": "YulBlock",
																"src": "4617:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4626:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4626:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4629:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4629:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4619:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4619:6:10"
																			},
																			"nativeSrc": "4619:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4619:12:10"
																		},
																		"nativeSrc": "4619:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4619:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4592:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4592:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4601:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4601:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4588:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4588:3:10"
																		},
																		"nativeSrc": "4588:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4588:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4613:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4613:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4584:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4584:3:10"
																},
																"nativeSrc": "4584:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4584:32:10"
															},
															"nativeSrc": "4581:52:10",
															"nodeType": "YulIf",
															"src": "4581:52:10"
														},
														{
															"nativeSrc": "4642:33:10",
															"nodeType": "YulAssignment",
															"src": "4642:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4665:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4665:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4652:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "4652:12:10"
																},
																"nativeSrc": "4652:23:10",
																"nodeType": "YulFunctionCall",
																"src": "4652:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4642:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4642:6:10"
																}
															]
														},
														{
															"nativeSrc": "4684:45:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4684:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4714:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4714:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4725:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4725:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4710:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4710:3:10"
																		},
																		"nativeSrc": "4710:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4710:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4697:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "4697:12:10"
																},
																"nativeSrc": "4697:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4697:32:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4688:5:10",
																	"nodeType": "YulTypedName",
																	"src": "4688:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4771:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4771:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nativeSrc": "4738:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "4738:32:10"
																},
																"nativeSrc": "4738:39:10",
																"nodeType": "YulFunctionCall",
																"src": "4738:39:10"
															},
															"nativeSrc": "4738:39:10",
															"nodeType": "YulExpressionStatement",
															"src": "4738:39:10"
														},
														{
															"nativeSrc": "4786:15:10",
															"nodeType": "YulAssignment",
															"src": "4786:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "4796:5:10",
																"nodeType": "YulIdentifier",
																"src": "4796:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4786:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4786:6:10"
																}
															]
														},
														{
															"nativeSrc": "4810:42:10",
															"nodeType": "YulAssignment",
															"src": "4810:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4837:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4837:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4848:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4848:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4833:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4833:3:10"
																		},
																		"nativeSrc": "4833:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4833:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4820:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "4820:12:10"
																},
																"nativeSrc": "4820:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4820:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4810:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4810:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_uint256",
												"nativeSrc": "4467:391:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4521:9:10",
														"nodeType": "YulTypedName",
														"src": "4521:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4532:7:10",
														"nodeType": "YulTypedName",
														"src": "4532:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4544:6:10",
														"nodeType": "YulTypedName",
														"src": "4544:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4552:6:10",
														"nodeType": "YulTypedName",
														"src": "4552:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4560:6:10",
														"nodeType": "YulTypedName",
														"src": "4560:6:10",
														"type": ""
													}
												],
												"src": "4467:391:10"
											},
											{
												"body": {
													"nativeSrc": "4986:102:10",
													"nodeType": "YulBlock",
													"src": "4986:102:10",
													"statements": [
														{
															"nativeSrc": "4996:26:10",
															"nodeType": "YulAssignment",
															"src": "4996:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5008:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5008:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5019:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5019:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5004:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5004:3:10"
																},
																"nativeSrc": "5004:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5004:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4996:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4996:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5038:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5038:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5053:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5053:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5069:3:10",
																								"nodeType": "YulLiteral",
																								"src": "5069:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5074:1:10",
																								"nodeType": "YulLiteral",
																								"src": "5074:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5065:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "5065:3:10"
																						},
																						"nativeSrc": "5065:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "5065:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5078:1:10",
																						"nodeType": "YulLiteral",
																						"src": "5078:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5061:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5061:3:10"
																				},
																				"nativeSrc": "5061:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5061:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5049:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5049:3:10"
																		},
																		"nativeSrc": "5049:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5049:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5031:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5031:6:10"
																},
																"nativeSrc": "5031:51:10",
																"nodeType": "YulFunctionCall",
																"src": "5031:51:10"
															},
															"nativeSrc": "5031:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "5031:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ISalesFactory_$2342__to_t_address__fromStack_reversed",
												"nativeSrc": "4863:225:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4955:9:10",
														"nodeType": "YulTypedName",
														"src": "4955:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4966:6:10",
														"nodeType": "YulTypedName",
														"src": "4966:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4977:4:10",
														"nodeType": "YulTypedName",
														"src": "4977:4:10",
														"type": ""
													}
												],
												"src": "4863:225:10"
											},
											{
												"body": {
													"nativeSrc": "5125:95:10",
													"nodeType": "YulBlock",
													"src": "5125:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5142:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5142:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5149:3:10",
																				"nodeType": "YulLiteral",
																				"src": "5149:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5154:10:10",
																				"nodeType": "YulLiteral",
																				"src": "5154:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5145:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5145:3:10"
																		},
																		"nativeSrc": "5145:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5145:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5135:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5135:6:10"
																},
																"nativeSrc": "5135:31:10",
																"nodeType": "YulFunctionCall",
																"src": "5135:31:10"
															},
															"nativeSrc": "5135:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "5135:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5182:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5182:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5185:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5185:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5175:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5175:6:10"
																},
																"nativeSrc": "5175:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5175:15:10"
															},
															"nativeSrc": "5175:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5175:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5206:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5206:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5209:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5209:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5199:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5199:6:10"
																},
																"nativeSrc": "5199:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5199:15:10"
															},
															"nativeSrc": "5199:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5199:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5093:127:10",
												"nodeType": "YulFunctionDefinition",
												"src": "5093:127:10"
											},
											{
												"body": {
													"nativeSrc": "5337:1079:10",
													"nodeType": "YulBlock",
													"src": "5337:1079:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5383:16:10",
																"nodeType": "YulBlock",
																"src": "5383:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5392:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5392:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5395:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5395:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5385:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5385:6:10"
																			},
																			"nativeSrc": "5385:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5385:12:10"
																		},
																		"nativeSrc": "5385:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5385:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5358:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5358:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5367:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5367:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5354:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5354:3:10"
																		},
																		"nativeSrc": "5354:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5354:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5379:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5379:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5350:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5350:3:10"
																},
																"nativeSrc": "5350:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5350:32:10"
															},
															"nativeSrc": "5347:52:10",
															"nodeType": "YulIf",
															"src": "5347:52:10"
														},
														{
															"nativeSrc": "5408:37:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5408:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5435:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5435:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5422:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "5422:12:10"
																},
																"nativeSrc": "5422:23:10",
																"nodeType": "YulFunctionCall",
																"src": "5422:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "5412:6:10",
																	"nodeType": "YulTypedName",
																	"src": "5412:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5454:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5454:28:10",
															"value": {
																"kind": "number",
																"nativeSrc": "5464:18:10",
																"nodeType": "YulLiteral",
																"src": "5464:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5458:2:10",
																	"nodeType": "YulTypedName",
																	"src": "5458:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5509:16:10",
																"nodeType": "YulBlock",
																"src": "5509:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5518:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5518:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5521:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5521:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5511:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5511:6:10"
																			},
																			"nativeSrc": "5511:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5511:12:10"
																		},
																		"nativeSrc": "5511:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5511:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5497:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5497:6:10"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "5505:2:10",
																		"nodeType": "YulIdentifier",
																		"src": "5505:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5494:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5494:2:10"
																},
																"nativeSrc": "5494:14:10",
																"nodeType": "YulFunctionCall",
																"src": "5494:14:10"
															},
															"nativeSrc": "5491:34:10",
															"nodeType": "YulIf",
															"src": "5491:34:10"
														},
														{
															"nativeSrc": "5534:32:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5534:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5548:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5548:9:10"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5559:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5559:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5544:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5544:3:10"
																},
																"nativeSrc": "5544:22:10",
																"nodeType": "YulFunctionCall",
																"src": "5544:22:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "5538:2:10",
																	"nodeType": "YulTypedName",
																	"src": "5538:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5614:16:10",
																"nodeType": "YulBlock",
																"src": "5614:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5623:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5623:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5626:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5626:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5616:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5616:6:10"
																			},
																			"nativeSrc": "5616:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5616:12:10"
																		},
																		"nativeSrc": "5616:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5616:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "5593:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "5593:2:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5597:4:10",
																						"nodeType": "YulLiteral",
																						"src": "5597:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5589:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5589:3:10"
																				},
																				"nativeSrc": "5589:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5589:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5604:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5604:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5585:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5585:3:10"
																		},
																		"nativeSrc": "5585:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5585:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5578:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5578:6:10"
																},
																"nativeSrc": "5578:35:10",
																"nodeType": "YulFunctionCall",
																"src": "5578:35:10"
															},
															"nativeSrc": "5575:55:10",
															"nodeType": "YulIf",
															"src": "5575:55:10"
														},
														{
															"nativeSrc": "5639:26:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5639:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "5662:2:10",
																		"nodeType": "YulIdentifier",
																		"src": "5662:2:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5649:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "5649:12:10"
																},
																"nativeSrc": "5649:16:10",
																"nodeType": "YulFunctionCall",
																"src": "5649:16:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "5643:2:10",
																	"nodeType": "YulTypedName",
																	"src": "5643:2:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5674:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5674:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "5684:4:10",
																"nodeType": "YulLiteral",
																"src": "5684:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "5678:2:10",
																	"nodeType": "YulTypedName",
																	"src": "5678:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5711:22:10",
																"nodeType": "YulBlock",
																"src": "5711:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5713:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "5713:16:10"
																			},
																			"nativeSrc": "5713:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5713:18:10"
																		},
																		"nativeSrc": "5713:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5713:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "5703:2:10",
																		"nodeType": "YulIdentifier",
																		"src": "5703:2:10"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "5707:2:10",
																		"nodeType": "YulIdentifier",
																		"src": "5707:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5700:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5700:2:10"
																},
																"nativeSrc": "5700:10:10",
																"nodeType": "YulFunctionCall",
																"src": "5700:10:10"
															},
															"nativeSrc": "5697:36:10",
															"nodeType": "YulIf",
															"src": "5697:36:10"
														},
														{
															"nativeSrc": "5742:20:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5742:20:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5756:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5756:1:10",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "5759:2:10",
																		"nodeType": "YulIdentifier",
																		"src": "5759:2:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5752:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5752:3:10"
																},
																"nativeSrc": "5752:10:10",
																"nodeType": "YulFunctionCall",
																"src": "5752:10:10"
															},
															"variables": [
																{
																	"name": "_5",
																	"nativeSrc": "5746:2:10",
																	"nodeType": "YulTypedName",
																	"src": "5746:2:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5771:23:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5771:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5791:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5791:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5785:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "5785:5:10"
																},
																"nativeSrc": "5785:9:10",
																"nodeType": "YulFunctionCall",
																"src": "5785:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5775:6:10",
																	"nodeType": "YulTypedName",
																	"src": "5775:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5803:56:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5803:56:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5825:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5825:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_5",
																						"nativeSrc": "5841:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "5841:2:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5845:2:10",
																						"nodeType": "YulLiteral",
																						"src": "5845:2:10",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5837:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5837:3:10"
																				},
																				"nativeSrc": "5837:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5837:11:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5854:2:10",
																						"nodeType": "YulLiteral",
																						"src": "5854:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5850:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5850:3:10"
																				},
																				"nativeSrc": "5850:7:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5850:7:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5833:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5833:3:10"
																		},
																		"nativeSrc": "5833:25:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5833:25:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5821:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5821:3:10"
																},
																"nativeSrc": "5821:38:10",
																"nodeType": "YulFunctionCall",
																"src": "5821:38:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5807:10:10",
																	"nodeType": "YulTypedName",
																	"src": "5807:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5918:22:10",
																"nodeType": "YulBlock",
																"src": "5918:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5920:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "5920:16:10"
																			},
																			"nativeSrc": "5920:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5920:18:10"
																		},
																		"nativeSrc": "5920:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5920:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5877:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "5877:10:10"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "5889:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "5889:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5874:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "5874:2:10"
																		},
																		"nativeSrc": "5874:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5874:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5897:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "5897:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5909:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5909:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5894:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "5894:2:10"
																		},
																		"nativeSrc": "5894:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5894:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5871:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5871:2:10"
																},
																"nativeSrc": "5871:46:10",
																"nodeType": "YulFunctionCall",
																"src": "5871:46:10"
															},
															"nativeSrc": "5868:72:10",
															"nodeType": "YulIf",
															"src": "5868:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5956:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5956:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5960:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "5960:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5949:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5949:6:10"
																},
																"nativeSrc": "5949:22:10",
																"nodeType": "YulFunctionCall",
																"src": "5949:22:10"
															},
															"nativeSrc": "5949:22:10",
															"nodeType": "YulExpressionStatement",
															"src": "5949:22:10"
														},
														{
															"nativeSrc": "5980:17:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5980:17:10",
															"value": {
																"name": "memPtr",
																"nativeSrc": "5991:6:10",
																"nodeType": "YulIdentifier",
																"src": "5991:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "5984:3:10",
																	"nodeType": "YulTypedName",
																	"src": "5984:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6013:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6013:6:10"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "6021:2:10",
																		"nodeType": "YulIdentifier",
																		"src": "6021:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6006:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6006:6:10"
																},
																"nativeSrc": "6006:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6006:18:10"
															},
															"nativeSrc": "6006:18:10",
															"nodeType": "YulExpressionStatement",
															"src": "6006:18:10"
														},
														{
															"nativeSrc": "6033:22:10",
															"nodeType": "YulAssignment",
															"src": "6033:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6044:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6044:6:10"
																	},
																	{
																		"name": "_4",
																		"nativeSrc": "6052:2:10",
																		"nodeType": "YulIdentifier",
																		"src": "6052:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6040:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6040:3:10"
																},
																"nativeSrc": "6040:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6040:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "6033:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6033:3:10"
																}
															]
														},
														{
															"nativeSrc": "6064:34:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6064:34:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "6086:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "6086:2:10"
																			},
																			{
																				"name": "_5",
																				"nativeSrc": "6090:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "6090:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6082:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6082:3:10"
																		},
																		"nativeSrc": "6082:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6082:11:10"
																	},
																	{
																		"name": "_4",
																		"nativeSrc": "6095:2:10",
																		"nodeType": "YulIdentifier",
																		"src": "6095:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6078:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6078:3:10"
																},
																"nativeSrc": "6078:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6078:20:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "6068:6:10",
																	"nodeType": "YulTypedName",
																	"src": "6068:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6130:16:10",
																"nodeType": "YulBlock",
																"src": "6130:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6139:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6139:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6142:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6142:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6132:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6132:6:10"
																			},
																			"nativeSrc": "6132:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6132:12:10"
																		},
																		"nativeSrc": "6132:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6132:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "6113:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6113:6:10"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "6121:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "6121:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6110:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6110:2:10"
																},
																"nativeSrc": "6110:19:10",
																"nodeType": "YulFunctionCall",
																"src": "6110:19:10"
															},
															"nativeSrc": "6107:39:10",
															"nodeType": "YulIf",
															"src": "6107:39:10"
														},
														{
															"nativeSrc": "6155:22:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6155:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "6170:2:10",
																		"nodeType": "YulIdentifier",
																		"src": "6170:2:10"
																	},
																	{
																		"name": "_4",
																		"nativeSrc": "6174:2:10",
																		"nodeType": "YulIdentifier",
																		"src": "6174:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6166:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6166:3:10"
																},
																"nativeSrc": "6166:11:10",
																"nodeType": "YulFunctionCall",
																"src": "6166:11:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "6159:3:10",
																	"nodeType": "YulTypedName",
																	"src": "6159:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6242:92:10",
																"nodeType": "YulBlock",
																"src": "6242:92:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "6263:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6263:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "6287:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "6287:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nativeSrc": "6268:18:10",
																						"nodeType": "YulIdentifier",
																						"src": "6268:18:10"
																					},
																					"nativeSrc": "6268:23:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6268:23:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6256:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6256:6:10"
																			},
																			"nativeSrc": "6256:36:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6256:36:10"
																		},
																		"nativeSrc": "6256:36:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6256:36:10"
																	},
																	{
																		"nativeSrc": "6305:19:10",
																		"nodeType": "YulAssignment",
																		"src": "6305:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "6316:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6316:3:10"
																				},
																				{
																					"name": "_4",
																					"nativeSrc": "6321:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "6321:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6312:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6312:3:10"
																			},
																			"nativeSrc": "6312:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6312:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "6305:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6305:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6197:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6197:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "6202:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6202:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6194:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6194:2:10"
																},
																"nativeSrc": "6194:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6194:15:10"
															},
															"nativeSrc": "6186:148:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6210:23:10",
																"nodeType": "YulBlock",
																"src": "6210:23:10",
																"statements": [
																	{
																		"nativeSrc": "6212:19:10",
																		"nodeType": "YulAssignment",
																		"src": "6212:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "6223:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6223:3:10"
																				},
																				{
																					"name": "_4",
																					"nativeSrc": "6228:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "6228:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6219:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6219:3:10"
																			},
																			"nativeSrc": "6219:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6219:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "6212:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6212:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6190:3:10",
																"nodeType": "YulBlock",
																"src": "6190:3:10",
																"statements": []
															},
															"src": "6186:148:10"
														},
														{
															"nativeSrc": "6343:16:10",
															"nodeType": "YulAssignment",
															"src": "6343:16:10",
															"value": {
																"name": "memPtr",
																"nativeSrc": "6353:6:10",
																"nodeType": "YulIdentifier",
																"src": "6353:6:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6343:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6343:6:10"
																}
															]
														},
														{
															"nativeSrc": "6368:42:10",
															"nodeType": "YulAssignment",
															"src": "6368:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6395:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6395:9:10"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "6406:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "6406:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6391:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6391:3:10"
																		},
																		"nativeSrc": "6391:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6391:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6378:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "6378:12:10"
																},
																"nativeSrc": "6378:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6378:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6368:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6368:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_uint256",
												"nativeSrc": "5225:1191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5295:9:10",
														"nodeType": "YulTypedName",
														"src": "5295:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5306:7:10",
														"nodeType": "YulTypedName",
														"src": "5306:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5318:6:10",
														"nodeType": "YulTypedName",
														"src": "5318:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5326:6:10",
														"nodeType": "YulTypedName",
														"src": "5326:6:10",
														"type": ""
													}
												],
												"src": "5225:1191:10"
											},
											{
												"body": {
													"nativeSrc": "6482:378:10",
													"nodeType": "YulBlock",
													"src": "6482:378:10",
													"statements": [
														{
															"nativeSrc": "6492:26:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6492:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6512:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6512:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6506:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6506:5:10"
																},
																"nativeSrc": "6506:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6506:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6496:6:10",
																	"nodeType": "YulTypedName",
																	"src": "6496:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6534:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6534:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6539:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6539:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6527:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6527:6:10"
																},
																"nativeSrc": "6527:19:10",
																"nodeType": "YulFunctionCall",
																"src": "6527:19:10"
															},
															"nativeSrc": "6527:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "6527:19:10"
														},
														{
															"nativeSrc": "6555:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6555:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "6565:4:10",
																"nodeType": "YulLiteral",
																"src": "6565:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6559:2:10",
																	"nodeType": "YulTypedName",
																	"src": "6559:2:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6578:21:10",
															"nodeType": "YulAssignment",
															"src": "6578:21:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6589:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6589:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6594:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6594:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6585:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6585:3:10"
																},
																"nativeSrc": "6585:14:10",
																"nodeType": "YulFunctionCall",
																"src": "6585:14:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6578:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6578:3:10"
																}
															]
														},
														{
															"nativeSrc": "6608:30:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6608:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6626:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6626:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6633:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6633:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6622:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6622:3:10"
																},
																"nativeSrc": "6622:16:10",
																"nodeType": "YulFunctionCall",
																"src": "6622:16:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "6612:6:10",
																	"nodeType": "YulTypedName",
																	"src": "6612:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6647:10:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6647:10:10",
															"value": {
																"kind": "number",
																"nativeSrc": "6656:1:10",
																"nodeType": "YulLiteral",
																"src": "6656:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "6651:1:10",
																	"nodeType": "YulTypedName",
																	"src": "6651:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6715:120:10",
																"nodeType": "YulBlock",
																"src": "6715:120:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "6736:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6736:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nativeSrc": "6747:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "6747:6:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "6741:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "6741:5:10"
																					},
																					"nativeSrc": "6741:13:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6741:13:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6729:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6729:6:10"
																			},
																			"nativeSrc": "6729:26:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6729:26:10"
																		},
																		"nativeSrc": "6729:26:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6729:26:10"
																	},
																	{
																		"nativeSrc": "6768:19:10",
																		"nodeType": "YulAssignment",
																		"src": "6768:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "6779:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6779:3:10"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "6784:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "6784:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6775:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6775:3:10"
																			},
																			"nativeSrc": "6775:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6775:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "6768:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6768:3:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6800:25:10",
																		"nodeType": "YulAssignment",
																		"src": "6800:25:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "6814:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "6814:6:10"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "6822:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "6822:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6810:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6810:3:10"
																			},
																			"nativeSrc": "6810:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6810:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "6800:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6800:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "6677:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6677:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6680:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6680:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6674:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6674:2:10"
																},
																"nativeSrc": "6674:13:10",
																"nodeType": "YulFunctionCall",
																"src": "6674:13:10"
															},
															"nativeSrc": "6666:169:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6688:18:10",
																"nodeType": "YulBlock",
																"src": "6688:18:10",
																"statements": [
																	{
																		"nativeSrc": "6690:14:10",
																		"nodeType": "YulAssignment",
																		"src": "6690:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "6699:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "6699:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6702:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6702:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6695:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6695:3:10"
																			},
																			"nativeSrc": "6695:9:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6695:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "6690:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "6690:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6670:3:10",
																"nodeType": "YulBlock",
																"src": "6670:3:10",
																"statements": []
															},
															"src": "6666:169:10"
														},
														{
															"nativeSrc": "6844:10:10",
															"nodeType": "YulAssignment",
															"src": "6844:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "6851:3:10",
																"nodeType": "YulIdentifier",
																"src": "6851:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6844:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6844:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nativeSrc": "6421:439:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6459:5:10",
														"nodeType": "YulTypedName",
														"src": "6459:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6466:3:10",
														"nodeType": "YulTypedName",
														"src": "6466:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6474:3:10",
														"nodeType": "YulTypedName",
														"src": "6474:3:10",
														"type": ""
													}
												],
												"src": "6421:439:10"
											},
											{
												"body": {
													"nativeSrc": "7094:236:10",
													"nodeType": "YulBlock",
													"src": "7094:236:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7111:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7111:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7122:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7122:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7104:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7104:6:10"
																},
																"nativeSrc": "7104:21:10",
																"nodeType": "YulFunctionCall",
																"src": "7104:21:10"
															},
															"nativeSrc": "7104:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "7104:21:10"
														},
														{
															"nativeSrc": "7134:70:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7134:70:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7177:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7177:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7189:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7189:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7200:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7200:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7185:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7185:3:10"
																		},
																		"nativeSrc": "7185:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7185:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nativeSrc": "7148:28:10",
																	"nodeType": "YulIdentifier",
																	"src": "7148:28:10"
																},
																"nativeSrc": "7148:56:10",
																"nodeType": "YulFunctionCall",
																"src": "7148:56:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "7138:6:10",
																	"nodeType": "YulTypedName",
																	"src": "7138:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7224:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7224:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7235:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7235:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7220:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7220:3:10"
																		},
																		"nativeSrc": "7220:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7220:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "7244:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7244:6:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7252:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7252:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7240:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7240:3:10"
																		},
																		"nativeSrc": "7240:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7240:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7213:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7213:6:10"
																},
																"nativeSrc": "7213:50:10",
																"nodeType": "YulFunctionCall",
																"src": "7213:50:10"
															},
															"nativeSrc": "7213:50:10",
															"nodeType": "YulExpressionStatement",
															"src": "7213:50:10"
														},
														{
															"nativeSrc": "7272:52:10",
															"nodeType": "YulAssignment",
															"src": "7272:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7309:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7309:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "7317:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7317:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nativeSrc": "7280:28:10",
																	"nodeType": "YulIdentifier",
																	"src": "7280:28:10"
																},
																"nativeSrc": "7280:44:10",
																"nodeType": "YulFunctionCall",
																"src": "7280:44:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7272:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7272:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "6865:465:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7055:9:10",
														"nodeType": "YulTypedName",
														"src": "7055:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7066:6:10",
														"nodeType": "YulTypedName",
														"src": "7066:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7074:6:10",
														"nodeType": "YulTypedName",
														"src": "7074:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7085:4:10",
														"nodeType": "YulTypedName",
														"src": "7085:4:10",
														"type": ""
													}
												],
												"src": "6865:465:10"
											},
											{
												"body": {
													"nativeSrc": "7367:95:10",
													"nodeType": "YulBlock",
													"src": "7367:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7384:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7384:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7391:3:10",
																				"nodeType": "YulLiteral",
																				"src": "7391:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7396:10:10",
																				"nodeType": "YulLiteral",
																				"src": "7396:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7387:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7387:3:10"
																		},
																		"nativeSrc": "7387:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7387:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7377:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7377:6:10"
																},
																"nativeSrc": "7377:31:10",
																"nodeType": "YulFunctionCall",
																"src": "7377:31:10"
															},
															"nativeSrc": "7377:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "7377:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7424:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7424:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7427:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7427:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7417:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7417:6:10"
																},
																"nativeSrc": "7417:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7417:15:10"
															},
															"nativeSrc": "7417:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7417:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7448:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7448:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7451:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7451:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7441:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7441:6:10"
																},
																"nativeSrc": "7441:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7441:15:10"
															},
															"nativeSrc": "7441:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7441:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7335:127:10",
												"nodeType": "YulFunctionDefinition",
												"src": "7335:127:10"
											},
											{
												"body": {
													"nativeSrc": "7516:79:10",
													"nodeType": "YulBlock",
													"src": "7516:79:10",
													"statements": [
														{
															"nativeSrc": "7526:17:10",
															"nodeType": "YulAssignment",
															"src": "7526:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7538:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7538:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7541:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7541:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7534:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7534:3:10"
																},
																"nativeSrc": "7534:9:10",
																"nodeType": "YulFunctionCall",
																"src": "7534:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "7526:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7526:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7567:22:10",
																"nodeType": "YulBlock",
																"src": "7567:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7569:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7569:16:10"
																			},
																			"nativeSrc": "7569:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7569:18:10"
																		},
																		"nativeSrc": "7569:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7569:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "7558:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7558:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "7564:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7564:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7555:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7555:2:10"
																},
																"nativeSrc": "7555:11:10",
																"nodeType": "YulFunctionCall",
																"src": "7555:11:10"
															},
															"nativeSrc": "7552:37:10",
															"nodeType": "YulIf",
															"src": "7552:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7467:128:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7498:1:10",
														"nodeType": "YulTypedName",
														"src": "7498:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7501:1:10",
														"nodeType": "YulTypedName",
														"src": "7501:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7507:4:10",
														"nodeType": "YulTypedName",
														"src": "7507:4:10",
														"type": ""
													}
												],
												"src": "7467:128:10"
											},
											{
												"body": {
													"nativeSrc": "7632:95:10",
													"nodeType": "YulBlock",
													"src": "7632:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7649:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7649:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7656:3:10",
																				"nodeType": "YulLiteral",
																				"src": "7656:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7661:10:10",
																				"nodeType": "YulLiteral",
																				"src": "7661:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7652:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7652:3:10"
																		},
																		"nativeSrc": "7652:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7652:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7642:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7642:6:10"
																},
																"nativeSrc": "7642:31:10",
																"nodeType": "YulFunctionCall",
																"src": "7642:31:10"
															},
															"nativeSrc": "7642:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "7642:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7689:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7689:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7692:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7692:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7682:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7682:6:10"
																},
																"nativeSrc": "7682:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7682:15:10"
															},
															"nativeSrc": "7682:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7682:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7713:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7713:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7716:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7716:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7706:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7706:6:10"
																},
																"nativeSrc": "7706:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7706:15:10"
															},
															"nativeSrc": "7706:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7706:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "7600:127:10",
												"nodeType": "YulFunctionDefinition",
												"src": "7600:127:10"
											},
											{
												"body": {
													"nativeSrc": "7906:239:10",
													"nodeType": "YulBlock",
													"src": "7906:239:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7923:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7923:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7934:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7934:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7916:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7916:6:10"
																},
																"nativeSrc": "7916:21:10",
																"nodeType": "YulFunctionCall",
																"src": "7916:21:10"
															},
															"nativeSrc": "7916:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "7916:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7957:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7957:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7968:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7968:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7953:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7953:3:10"
																		},
																		"nativeSrc": "7953:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7953:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7973:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7973:2:10",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7946:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7946:6:10"
																},
																"nativeSrc": "7946:30:10",
																"nodeType": "YulFunctionCall",
																"src": "7946:30:10"
															},
															"nativeSrc": "7946:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "7946:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7996:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7996:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8007:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8007:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7992:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7992:3:10"
																		},
																		"nativeSrc": "7992:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7992:18:10"
																	},
																	{
																		"hexValue": "4c6173742073616c6520796f75207265676973746572656420666f7220697320",
																		"kind": "string",
																		"nativeSrc": "8012:34:10",
																		"nodeType": "YulLiteral",
																		"src": "8012:34:10",
																		"type": "",
																		"value": "Last sale you registered for is "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7985:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7985:6:10"
																},
																"nativeSrc": "7985:62:10",
																"nodeType": "YulFunctionCall",
																"src": "7985:62:10"
															},
															"nativeSrc": "7985:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "7985:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8067:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8067:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8078:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8078:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8063:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8063:3:10"
																		},
																		"nativeSrc": "8063:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8063:18:10"
																	},
																	{
																		"hexValue": "6e6f742066696e6973686564207965742e",
																		"kind": "string",
																		"nativeSrc": "8083:19:10",
																		"nodeType": "YulLiteral",
																		"src": "8083:19:10",
																		"type": "",
																		"value": "not finished yet."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8056:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8056:6:10"
																},
																"nativeSrc": "8056:47:10",
																"nodeType": "YulFunctionCall",
																"src": "8056:47:10"
															},
															"nativeSrc": "8056:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "8056:47:10"
														},
														{
															"nativeSrc": "8112:27:10",
															"nodeType": "YulAssignment",
															"src": "8112:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8124:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8124:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8135:3:10",
																		"nodeType": "YulLiteral",
																		"src": "8135:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8120:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8120:3:10"
																},
																"nativeSrc": "8120:19:10",
																"nodeType": "YulFunctionCall",
																"src": "8120:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8112:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8112:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f13159535f66a78aff8e87048116728eebc9a6eadc436340bf8ddf945a670f5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7732:413:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7883:9:10",
														"nodeType": "YulTypedName",
														"src": "7883:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7897:4:10",
														"nodeType": "YulTypedName",
														"src": "7897:4:10",
														"type": ""
													}
												],
												"src": "7732:413:10"
											},
											{
												"body": {
													"nativeSrc": "8324:232:10",
													"nodeType": "YulBlock",
													"src": "8324:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8341:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8341:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8352:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8352:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8334:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8334:6:10"
																},
																"nativeSrc": "8334:21:10",
																"nodeType": "YulFunctionCall",
																"src": "8334:21:10"
															},
															"nativeSrc": "8334:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "8334:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8375:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8375:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8386:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8386:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8371:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8371:3:10"
																		},
																		"nativeSrc": "8371:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8371:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8391:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8391:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8364:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8364:6:10"
																},
																"nativeSrc": "8364:30:10",
																"nodeType": "YulFunctionCall",
																"src": "8364:30:10"
															},
															"nativeSrc": "8364:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "8364:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8414:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8414:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8425:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8425:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8410:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8410:3:10"
																		},
																		"nativeSrc": "8410:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8410:18:10"
																	},
																	{
																		"hexValue": "77697468647261773a2063616e2774207769746864726177206d6f7265207468",
																		"kind": "string",
																		"nativeSrc": "8430:34:10",
																		"nodeType": "YulLiteral",
																		"src": "8430:34:10",
																		"type": "",
																		"value": "withdraw: can't withdraw more th"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8403:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8403:6:10"
																},
																"nativeSrc": "8403:62:10",
																"nodeType": "YulFunctionCall",
																"src": "8403:62:10"
															},
															"nativeSrc": "8403:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "8403:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8485:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8485:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8496:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8496:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8481:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8481:3:10"
																		},
																		"nativeSrc": "8481:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8481:18:10"
																	},
																	{
																		"hexValue": "616e206465706f736974",
																		"kind": "string",
																		"nativeSrc": "8501:12:10",
																		"nodeType": "YulLiteral",
																		"src": "8501:12:10",
																		"type": "",
																		"value": "an deposit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8474:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8474:6:10"
																},
																"nativeSrc": "8474:40:10",
																"nodeType": "YulFunctionCall",
																"src": "8474:40:10"
															},
															"nativeSrc": "8474:40:10",
															"nodeType": "YulExpressionStatement",
															"src": "8474:40:10"
														},
														{
															"nativeSrc": "8523:27:10",
															"nodeType": "YulAssignment",
															"src": "8523:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8535:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8535:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8546:3:10",
																		"nodeType": "YulLiteral",
																		"src": "8546:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8531:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8531:3:10"
																},
																"nativeSrc": "8531:19:10",
																"nodeType": "YulFunctionCall",
																"src": "8531:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8523:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8523:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8150:406:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8301:9:10",
														"nodeType": "YulTypedName",
														"src": "8301:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8315:4:10",
														"nodeType": "YulTypedName",
														"src": "8315:4:10",
														"type": ""
													}
												],
												"src": "8150:406:10"
											},
											{
												"body": {
													"nativeSrc": "8735:249:10",
													"nodeType": "YulBlock",
													"src": "8735:249:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8752:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8752:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8763:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8763:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8745:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8745:6:10"
																},
																"nativeSrc": "8745:21:10",
																"nodeType": "YulFunctionCall",
																"src": "8745:21:10"
															},
															"nativeSrc": "8745:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "8745:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8786:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8786:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8797:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8797:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8782:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8782:3:10"
																		},
																		"nativeSrc": "8782:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8782:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8802:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8802:2:10",
																		"type": "",
																		"value": "59"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8775:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8775:6:10"
																},
																"nativeSrc": "8775:30:10",
																"nodeType": "YulFunctionCall",
																"src": "8775:30:10"
															},
															"nativeSrc": "8775:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "8775:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8825:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8825:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8836:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8836:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8821:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8821:3:10"
																		},
																		"nativeSrc": "8821:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8821:18:10"
																	},
																	{
																		"hexValue": "456d657267656e637920776974686472617720626c6f636b656420647572696e",
																		"kind": "string",
																		"nativeSrc": "8841:34:10",
																		"nodeType": "YulLiteral",
																		"src": "8841:34:10",
																		"type": "",
																		"value": "Emergency withdraw blocked durin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8814:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8814:6:10"
																},
																"nativeSrc": "8814:62:10",
																"nodeType": "YulFunctionCall",
																"src": "8814:62:10"
															},
															"nativeSrc": "8814:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "8814:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8896:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8896:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8907:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8907:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8892:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8892:3:10"
																		},
																		"nativeSrc": "8892:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8892:18:10"
																	},
																	{
																		"hexValue": "672073616c6520616e6420636f6f6c646f776e20706572696f642e",
																		"kind": "string",
																		"nativeSrc": "8912:29:10",
																		"nodeType": "YulLiteral",
																		"src": "8912:29:10",
																		"type": "",
																		"value": "g sale and cooldown period."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8885:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8885:6:10"
																},
																"nativeSrc": "8885:57:10",
																"nodeType": "YulFunctionCall",
																"src": "8885:57:10"
															},
															"nativeSrc": "8885:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "8885:57:10"
														},
														{
															"nativeSrc": "8951:27:10",
															"nodeType": "YulAssignment",
															"src": "8951:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8963:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8963:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8974:3:10",
																		"nodeType": "YulLiteral",
																		"src": "8974:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8959:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8959:3:10"
																},
																"nativeSrc": "8959:19:10",
																"nodeType": "YulFunctionCall",
																"src": "8959:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8951:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8951:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_56b9ca3553e1051f7fcbcaba90d07b4176d745112fcce0c7cc3b593a9da191ed__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8561:423:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8712:9:10",
														"nodeType": "YulTypedName",
														"src": "8712:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8726:4:10",
														"nodeType": "YulTypedName",
														"src": "8726:4:10",
														"type": ""
													}
												],
												"src": "8561:423:10"
											},
											{
												"body": {
													"nativeSrc": "9097:101:10",
													"nodeType": "YulBlock",
													"src": "9097:101:10",
													"statements": [
														{
															"nativeSrc": "9107:26:10",
															"nodeType": "YulAssignment",
															"src": "9107:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9119:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9119:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9130:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9130:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9115:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9115:3:10"
																},
																"nativeSrc": "9115:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9115:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9107:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9107:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9149:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9149:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9164:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9164:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9172:18:10",
																				"nodeType": "YulLiteral",
																				"src": "9172:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9160:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9160:3:10"
																		},
																		"nativeSrc": "9160:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9160:31:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9142:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9142:6:10"
																},
																"nativeSrc": "9142:50:10",
																"nodeType": "YulFunctionCall",
																"src": "9142:50:10"
															},
															"nativeSrc": "9142:50:10",
															"nodeType": "YulExpressionStatement",
															"src": "9142:50:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "8989:209:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9066:9:10",
														"nodeType": "YulTypedName",
														"src": "9066:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9077:6:10",
														"nodeType": "YulTypedName",
														"src": "9077:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9088:4:10",
														"nodeType": "YulTypedName",
														"src": "9088:4:10",
														"type": ""
													}
												],
												"src": "8989:209:10"
											},
											{
												"body": {
													"nativeSrc": "9377:225:10",
													"nodeType": "YulBlock",
													"src": "9377:225:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9394:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9394:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9405:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9405:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9387:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9387:6:10"
																},
																"nativeSrc": "9387:21:10",
																"nodeType": "YulFunctionCall",
																"src": "9387:21:10"
															},
															"nativeSrc": "9387:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "9387:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9428:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9428:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9439:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9439:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9424:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9424:3:10"
																		},
																		"nativeSrc": "9424:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9424:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9444:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9444:2:10",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9417:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9417:6:10"
																},
																"nativeSrc": "9417:30:10",
																"nodeType": "YulFunctionCall",
																"src": "9417:30:10"
															},
															"nativeSrc": "9417:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "9417:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9467:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9467:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9478:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9478:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9463:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9463:3:10"
																		},
																		"nativeSrc": "9463:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9463:18:10"
																	},
																	{
																		"hexValue": "5573657220646f6573206e6f74206861766520616e797468696e67207374616b",
																		"kind": "string",
																		"nativeSrc": "9483:34:10",
																		"nodeType": "YulLiteral",
																		"src": "9483:34:10",
																		"type": "",
																		"value": "User does not have anything stak"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9456:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9456:6:10"
																},
																"nativeSrc": "9456:62:10",
																"nodeType": "YulFunctionCall",
																"src": "9456:62:10"
															},
															"nativeSrc": "9456:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "9456:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9538:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9538:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9549:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9549:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9534:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9534:3:10"
																		},
																		"nativeSrc": "9534:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9534:18:10"
																	},
																	{
																		"hexValue": "65642e",
																		"kind": "string",
																		"nativeSrc": "9554:5:10",
																		"nodeType": "YulLiteral",
																		"src": "9554:5:10",
																		"type": "",
																		"value": "ed."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9527:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9527:6:10"
																},
																"nativeSrc": "9527:33:10",
																"nodeType": "YulFunctionCall",
																"src": "9527:33:10"
															},
															"nativeSrc": "9527:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "9527:33:10"
														},
														{
															"nativeSrc": "9569:27:10",
															"nodeType": "YulAssignment",
															"src": "9569:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9581:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9581:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9592:3:10",
																		"nodeType": "YulLiteral",
																		"src": "9592:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9577:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9577:3:10"
																},
																"nativeSrc": "9577:19:10",
																"nodeType": "YulFunctionCall",
																"src": "9577:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9569:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9569:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ea8c4190832cfece80b3f2404c6211d113e3c15b0e1b7b1fbf8c07c9c81bca0e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9203:399:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9354:9:10",
														"nodeType": "YulTypedName",
														"src": "9354:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9368:4:10",
														"nodeType": "YulTypedName",
														"src": "9368:4:10",
														"type": ""
													}
												],
												"src": "9203:399:10"
											},
											{
												"body": {
													"nativeSrc": "9736:119:10",
													"nodeType": "YulBlock",
													"src": "9736:119:10",
													"statements": [
														{
															"nativeSrc": "9746:26:10",
															"nodeType": "YulAssignment",
															"src": "9746:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9758:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9758:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9769:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9769:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9754:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9754:3:10"
																},
																"nativeSrc": "9754:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9754:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9746:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9746:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9788:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9788:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "9799:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9799:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9781:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9781:6:10"
																},
																"nativeSrc": "9781:25:10",
																"nodeType": "YulFunctionCall",
																"src": "9781:25:10"
															},
															"nativeSrc": "9781:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "9781:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9826:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9826:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9837:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9837:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9822:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9822:3:10"
																		},
																		"nativeSrc": "9822:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9822:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "9842:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9842:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9815:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9815:6:10"
																},
																"nativeSrc": "9815:34:10",
																"nodeType": "YulFunctionCall",
																"src": "9815:34:10"
															},
															"nativeSrc": "9815:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "9815:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9607:248:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9697:9:10",
														"nodeType": "YulTypedName",
														"src": "9697:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9708:6:10",
														"nodeType": "YulTypedName",
														"src": "9708:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9716:6:10",
														"nodeType": "YulTypedName",
														"src": "9716:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9727:4:10",
														"nodeType": "YulTypedName",
														"src": "9727:4:10",
														"type": ""
													}
												],
												"src": "9607:248:10"
											},
											{
												"body": {
													"nativeSrc": "10034:224:10",
													"nodeType": "YulBlock",
													"src": "10034:224:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10051:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10051:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10062:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10062:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10044:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10044:6:10"
																},
																"nativeSrc": "10044:21:10",
																"nodeType": "YulFunctionCall",
																"src": "10044:21:10"
															},
															"nativeSrc": "10044:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "10044:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10085:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10085:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10096:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10096:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10081:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10081:3:10"
																		},
																		"nativeSrc": "10081:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10081:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10101:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10101:2:10",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10074:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10074:6:10"
																},
																"nativeSrc": "10074:30:10",
																"nodeType": "YulFunctionCall",
																"src": "10074:30:10"
															},
															"nativeSrc": "10074:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "10074:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10124:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10124:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10135:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10135:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10120:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10120:3:10"
																		},
																		"nativeSrc": "10120:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10120:18:10"
																	},
																	{
																		"hexValue": "66756e643a20746f6f206c6174652c20746865206661726d20697320636c6f73",
																		"kind": "string",
																		"nativeSrc": "10140:34:10",
																		"nodeType": "YulLiteral",
																		"src": "10140:34:10",
																		"type": "",
																		"value": "fund: too late, the farm is clos"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10113:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10113:6:10"
																},
																"nativeSrc": "10113:62:10",
																"nodeType": "YulFunctionCall",
																"src": "10113:62:10"
															},
															"nativeSrc": "10113:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "10113:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10195:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10195:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10206:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10206:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10191:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10191:3:10"
																		},
																		"nativeSrc": "10191:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10191:18:10"
																	},
																	{
																		"hexValue": "6564",
																		"kind": "string",
																		"nativeSrc": "10211:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10211:4:10",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10184:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10184:6:10"
																},
																"nativeSrc": "10184:32:10",
																"nodeType": "YulFunctionCall",
																"src": "10184:32:10"
															},
															"nativeSrc": "10184:32:10",
															"nodeType": "YulExpressionStatement",
															"src": "10184:32:10"
														},
														{
															"nativeSrc": "10225:27:10",
															"nodeType": "YulAssignment",
															"src": "10225:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10237:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10237:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10248:3:10",
																		"nodeType": "YulLiteral",
																		"src": "10248:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10233:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10233:3:10"
																},
																"nativeSrc": "10233:19:10",
																"nodeType": "YulFunctionCall",
																"src": "10233:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10225:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10225:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9860:398:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10011:9:10",
														"nodeType": "YulTypedName",
														"src": "10011:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10025:4:10",
														"nodeType": "YulTypedName",
														"src": "10025:4:10",
														"type": ""
													}
												],
												"src": "9860:398:10"
											},
											{
												"body": {
													"nativeSrc": "10311:77:10",
													"nodeType": "YulBlock",
													"src": "10311:77:10",
													"statements": [
														{
															"nativeSrc": "10321:16:10",
															"nodeType": "YulAssignment",
															"src": "10321:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10332:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10332:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10335:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10335:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10328:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10328:3:10"
																},
																"nativeSrc": "10328:9:10",
																"nodeType": "YulFunctionCall",
																"src": "10328:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10321:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10321:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10360:22:10",
																"nodeType": "YulBlock",
																"src": "10360:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10362:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "10362:16:10"
																			},
																			"nativeSrc": "10362:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10362:18:10"
																		},
																		"nativeSrc": "10362:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10362:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10352:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10352:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10355:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10355:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10349:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "10349:2:10"
																},
																"nativeSrc": "10349:10:10",
																"nodeType": "YulFunctionCall",
																"src": "10349:10:10"
															},
															"nativeSrc": "10346:36:10",
															"nodeType": "YulIf",
															"src": "10346:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10263:125:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10294:1:10",
														"nodeType": "YulTypedName",
														"src": "10294:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10297:1:10",
														"nodeType": "YulTypedName",
														"src": "10297:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10303:3:10",
														"nodeType": "YulTypedName",
														"src": "10303:3:10",
														"type": ""
													}
												],
												"src": "10263:125:10"
											},
											{
												"body": {
													"nativeSrc": "10471:167:10",
													"nodeType": "YulBlock",
													"src": "10471:167:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "10517:16:10",
																"nodeType": "YulBlock",
																"src": "10517:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10526:1:10",
																					"nodeType": "YulLiteral",
																					"src": "10526:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10529:1:10",
																					"nodeType": "YulLiteral",
																					"src": "10529:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10519:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10519:6:10"
																			},
																			"nativeSrc": "10519:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10519:12:10"
																		},
																		"nativeSrc": "10519:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10519:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10492:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10492:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10501:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10501:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10488:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10488:3:10"
																		},
																		"nativeSrc": "10488:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10488:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10513:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10513:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10484:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10484:3:10"
																},
																"nativeSrc": "10484:32:10",
																"nodeType": "YulFunctionCall",
																"src": "10484:32:10"
															},
															"nativeSrc": "10481:52:10",
															"nodeType": "YulIf",
															"src": "10481:52:10"
														},
														{
															"nativeSrc": "10542:29:10",
															"nodeType": "YulVariableDeclaration",
															"src": "10542:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10561:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10561:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10555:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "10555:5:10"
																},
																"nativeSrc": "10555:16:10",
																"nodeType": "YulFunctionCall",
																"src": "10555:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "10546:5:10",
																	"nodeType": "YulTypedName",
																	"src": "10546:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10602:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "10602:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "10580:21:10",
																	"nodeType": "YulIdentifier",
																	"src": "10580:21:10"
																},
																"nativeSrc": "10580:28:10",
																"nodeType": "YulFunctionCall",
																"src": "10580:28:10"
															},
															"nativeSrc": "10580:28:10",
															"nodeType": "YulExpressionStatement",
															"src": "10580:28:10"
														},
														{
															"nativeSrc": "10617:15:10",
															"nodeType": "YulAssignment",
															"src": "10617:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "10627:5:10",
																"nodeType": "YulIdentifier",
																"src": "10627:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "10617:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10617:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "10393:245:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10437:9:10",
														"nodeType": "YulTypedName",
														"src": "10437:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10448:7:10",
														"nodeType": "YulTypedName",
														"src": "10448:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10460:6:10",
														"nodeType": "YulTypedName",
														"src": "10460:6:10",
														"type": ""
													}
												],
												"src": "10393:245:10"
											},
											{
												"body": {
													"nativeSrc": "10817:223:10",
													"nodeType": "YulBlock",
													"src": "10817:223:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10834:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10834:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10845:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10845:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10827:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10827:6:10"
																},
																"nativeSrc": "10827:21:10",
																"nodeType": "YulFunctionCall",
																"src": "10827:21:10"
															},
															"nativeSrc": "10827:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "10827:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10868:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10868:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10879:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10879:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10864:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10864:3:10"
																		},
																		"nativeSrc": "10864:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10864:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10884:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10884:2:10",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10857:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10857:6:10"
																},
																"nativeSrc": "10857:30:10",
																"nodeType": "YulFunctionCall",
																"src": "10857:30:10"
															},
															"nativeSrc": "10857:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "10857:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10907:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10907:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10918:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10918:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10903:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10903:3:10"
																		},
																		"nativeSrc": "10903:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10903:18:10"
																	},
																	{
																		"hexValue": "53616c65206e6f742063726561746564207468726f75676820666163746f7279",
																		"kind": "string",
																		"nativeSrc": "10923:34:10",
																		"nodeType": "YulLiteral",
																		"src": "10923:34:10",
																		"type": "",
																		"value": "Sale not created through factory"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10896:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10896:6:10"
																},
																"nativeSrc": "10896:62:10",
																"nodeType": "YulFunctionCall",
																"src": "10896:62:10"
															},
															"nativeSrc": "10896:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "10896:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10978:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10978:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10989:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10989:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10974:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10974:3:10"
																		},
																		"nativeSrc": "10974:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10974:18:10"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nativeSrc": "10994:3:10",
																		"nodeType": "YulLiteral",
																		"src": "10994:3:10",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10967:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10967:6:10"
																},
																"nativeSrc": "10967:31:10",
																"nodeType": "YulFunctionCall",
																"src": "10967:31:10"
															},
															"nativeSrc": "10967:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "10967:31:10"
														},
														{
															"nativeSrc": "11007:27:10",
															"nodeType": "YulAssignment",
															"src": "11007:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11019:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11019:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11030:3:10",
																		"nodeType": "YulLiteral",
																		"src": "11030:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11015:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11015:3:10"
																},
																"nativeSrc": "11015:19:10",
																"nodeType": "YulFunctionCall",
																"src": "11015:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11007:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11007:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f95e2b94b64afe2d9116800b91afd89844f4c614e9be6f53796fc62d9ae9798e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10643:397:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10794:9:10",
														"nodeType": "YulTypedName",
														"src": "10794:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10808:4:10",
														"nodeType": "YulTypedName",
														"src": "10808:4:10",
														"type": ""
													}
												],
												"src": "10643:397:10"
											},
											{
												"body": {
													"nativeSrc": "11219:177:10",
													"nodeType": "YulBlock",
													"src": "11219:177:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11236:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11236:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11247:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11247:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11229:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11229:6:10"
																},
																"nativeSrc": "11229:21:10",
																"nodeType": "YulFunctionCall",
																"src": "11229:21:10"
															},
															"nativeSrc": "11229:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "11229:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11270:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11270:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11281:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11281:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11266:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11266:3:10"
																		},
																		"nativeSrc": "11266:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11266:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11286:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11286:2:10",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11259:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11259:6:10"
																},
																"nativeSrc": "11259:30:10",
																"nodeType": "YulFunctionCall",
																"src": "11259:30:10"
															},
															"nativeSrc": "11259:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "11259:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11309:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11309:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11320:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11320:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11305:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11305:3:10"
																		},
																		"nativeSrc": "11305:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11305:18:10"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nativeSrc": "11325:29:10",
																		"nodeType": "YulLiteral",
																		"src": "11325:29:10",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11298:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11298:6:10"
																},
																"nativeSrc": "11298:57:10",
																"nodeType": "YulFunctionCall",
																"src": "11298:57:10"
															},
															"nativeSrc": "11298:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "11298:57:10"
														},
														{
															"nativeSrc": "11364:26:10",
															"nodeType": "YulAssignment",
															"src": "11364:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11376:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11376:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11387:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11387:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11372:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11372:3:10"
																},
																"nativeSrc": "11372:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11372:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11364:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11364:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11045:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11196:9:10",
														"nodeType": "YulTypedName",
														"src": "11196:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11210:4:10",
														"nodeType": "YulTypedName",
														"src": "11210:4:10",
														"type": ""
													}
												],
												"src": "11045:351:10"
											},
											{
												"body": {
													"nativeSrc": "11453:116:10",
													"nodeType": "YulBlock",
													"src": "11453:116:10",
													"statements": [
														{
															"nativeSrc": "11463:20:10",
															"nodeType": "YulAssignment",
															"src": "11463:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11478:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11478:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11481:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11481:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11474:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11474:3:10"
																},
																"nativeSrc": "11474:9:10",
																"nodeType": "YulFunctionCall",
																"src": "11474:9:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "11463:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "11463:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11541:22:10",
																"nodeType": "YulBlock",
																"src": "11541:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11543:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "11543:16:10"
																			},
																			"nativeSrc": "11543:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11543:18:10"
																		},
																		"nativeSrc": "11543:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11543:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "11512:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "11512:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "11505:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "11505:6:10"
																				},
																				"nativeSrc": "11505:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11505:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "11519:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "11519:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "11526:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "11526:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "11535:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "11535:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "11522:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "11522:3:10"
																						},
																						"nativeSrc": "11522:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "11522:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "11516:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "11516:2:10"
																				},
																				"nativeSrc": "11516:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11516:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "11502:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "11502:2:10"
																		},
																		"nativeSrc": "11502:37:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11502:37:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11495:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11495:6:10"
																},
																"nativeSrc": "11495:45:10",
																"nodeType": "YulFunctionCall",
																"src": "11495:45:10"
															},
															"nativeSrc": "11492:71:10",
															"nodeType": "YulIf",
															"src": "11492:71:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "11401:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11432:1:10",
														"nodeType": "YulTypedName",
														"src": "11432:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11435:1:10",
														"nodeType": "YulTypedName",
														"src": "11435:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "11441:7:10",
														"nodeType": "YulTypedName",
														"src": "11441:7:10",
														"type": ""
													}
												],
												"src": "11401:168:10"
											},
											{
												"body": {
													"nativeSrc": "11620:171:10",
													"nodeType": "YulBlock",
													"src": "11620:171:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "11651:111:10",
																"nodeType": "YulBlock",
																"src": "11651:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11672:1:10",
																					"nodeType": "YulLiteral",
																					"src": "11672:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "11679:3:10",
																							"nodeType": "YulLiteral",
																							"src": "11679:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "11684:10:10",
																							"nodeType": "YulLiteral",
																							"src": "11684:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "11675:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "11675:3:10"
																					},
																					"nativeSrc": "11675:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "11675:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "11665:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11665:6:10"
																			},
																			"nativeSrc": "11665:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11665:31:10"
																		},
																		"nativeSrc": "11665:31:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11665:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11716:1:10",
																					"nodeType": "YulLiteral",
																					"src": "11716:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11719:4:10",
																					"nodeType": "YulLiteral",
																					"src": "11719:4:10",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "11709:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11709:6:10"
																			},
																			"nativeSrc": "11709:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11709:15:10"
																		},
																		"nativeSrc": "11709:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11709:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11744:1:10",
																					"nodeType": "YulLiteral",
																					"src": "11744:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11747:4:10",
																					"nodeType": "YulLiteral",
																					"src": "11747:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11737:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11737:6:10"
																			},
																			"nativeSrc": "11737:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11737:15:10"
																		},
																		"nativeSrc": "11737:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11737:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11640:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11640:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11633:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11633:6:10"
																},
																"nativeSrc": "11633:9:10",
																"nodeType": "YulFunctionCall",
																"src": "11633:9:10"
															},
															"nativeSrc": "11630:132:10",
															"nodeType": "YulIf",
															"src": "11630:132:10"
														},
														{
															"nativeSrc": "11771:14:10",
															"nodeType": "YulAssignment",
															"src": "11771:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11780:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11780:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11783:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11783:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11776:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11776:3:10"
																},
																"nativeSrc": "11776:9:10",
																"nodeType": "YulFunctionCall",
																"src": "11776:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "11771:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "11771:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "11574:217:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11605:1:10",
														"nodeType": "YulTypedName",
														"src": "11605:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11608:1:10",
														"nodeType": "YulTypedName",
														"src": "11608:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "11614:1:10",
														"nodeType": "YulTypedName",
														"src": "11614:1:10",
														"type": ""
													}
												],
												"src": "11574:217:10"
											},
											{
												"body": {
													"nativeSrc": "11970:223:10",
													"nodeType": "YulBlock",
													"src": "11970:223:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11987:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11987:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11998:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11998:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11980:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11980:6:10"
																},
																"nativeSrc": "11980:21:10",
																"nodeType": "YulFunctionCall",
																"src": "11980:21:10"
															},
															"nativeSrc": "11980:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "11980:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12021:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12021:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12032:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12032:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12017:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12017:3:10"
																		},
																		"nativeSrc": "12017:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12017:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12037:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12037:2:10",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12010:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12010:6:10"
																},
																"nativeSrc": "12010:30:10",
																"nodeType": "YulFunctionCall",
																"src": "12010:30:10"
															},
															"nativeSrc": "12010:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "12010:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12060:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12060:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12071:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12071:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12056:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12056:3:10"
																		},
																		"nativeSrc": "12056:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12056:18:10"
																	},
																	{
																		"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f",
																		"kind": "string",
																		"nativeSrc": "12076:34:10",
																		"nodeType": "YulLiteral",
																		"src": "12076:34:10",
																		"type": "",
																		"value": "SafeMath: multiplication overflo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12049:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12049:6:10"
																},
																"nativeSrc": "12049:62:10",
																"nodeType": "YulFunctionCall",
																"src": "12049:62:10"
															},
															"nativeSrc": "12049:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "12049:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12131:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12131:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12142:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12142:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12127:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12127:3:10"
																		},
																		"nativeSrc": "12127:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12127:18:10"
																	},
																	{
																		"hexValue": "77",
																		"kind": "string",
																		"nativeSrc": "12147:3:10",
																		"nodeType": "YulLiteral",
																		"src": "12147:3:10",
																		"type": "",
																		"value": "w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12120:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12120:6:10"
																},
																"nativeSrc": "12120:31:10",
																"nodeType": "YulFunctionCall",
																"src": "12120:31:10"
															},
															"nativeSrc": "12120:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "12120:31:10"
														},
														{
															"nativeSrc": "12160:27:10",
															"nodeType": "YulAssignment",
															"src": "12160:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12172:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12172:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12183:3:10",
																		"nodeType": "YulLiteral",
																		"src": "12183:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12168:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12168:3:10"
																},
																"nativeSrc": "12168:19:10",
																"nodeType": "YulFunctionCall",
																"src": "12168:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12160:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12160:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11796:397:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11947:9:10",
														"nodeType": "YulTypedName",
														"src": "11947:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11961:4:10",
														"nodeType": "YulTypedName",
														"src": "11961:4:10",
														"type": ""
													}
												],
												"src": "11796:397:10"
											},
											{
												"body": {
													"nativeSrc": "12372:180:10",
													"nodeType": "YulBlock",
													"src": "12372:180:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12389:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12389:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12400:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12400:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12382:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12382:6:10"
																},
																"nativeSrc": "12382:21:10",
																"nodeType": "YulFunctionCall",
																"src": "12382:21:10"
															},
															"nativeSrc": "12382:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "12382:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12423:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12423:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12434:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12434:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12419:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12419:3:10"
																		},
																		"nativeSrc": "12419:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12419:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12439:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12439:2:10",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12412:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12412:6:10"
																},
																"nativeSrc": "12412:30:10",
																"nodeType": "YulFunctionCall",
																"src": "12412:30:10"
															},
															"nativeSrc": "12412:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "12412:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12462:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12462:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12473:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12473:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12458:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12458:3:10"
																		},
																		"nativeSrc": "12458:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12458:18:10"
																	},
																	{
																		"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
																		"kind": "string",
																		"nativeSrc": "12478:32:10",
																		"nodeType": "YulLiteral",
																		"src": "12478:32:10",
																		"type": "",
																		"value": "SafeMath: subtraction overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12451:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12451:6:10"
																},
																"nativeSrc": "12451:60:10",
																"nodeType": "YulFunctionCall",
																"src": "12451:60:10"
															},
															"nativeSrc": "12451:60:10",
															"nodeType": "YulExpressionStatement",
															"src": "12451:60:10"
														},
														{
															"nativeSrc": "12520:26:10",
															"nodeType": "YulAssignment",
															"src": "12520:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12532:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12532:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12543:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12543:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12528:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12528:3:10"
																},
																"nativeSrc": "12528:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12528:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12520:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12520:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12198:354:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12349:9:10",
														"nodeType": "YulTypedName",
														"src": "12349:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12363:4:10",
														"nodeType": "YulTypedName",
														"src": "12363:4:10",
														"type": ""
													}
												],
												"src": "12198:354:10"
											},
											{
												"body": {
													"nativeSrc": "12731:176:10",
													"nodeType": "YulBlock",
													"src": "12731:176:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12748:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12748:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12759:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12759:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12741:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12741:6:10"
																},
																"nativeSrc": "12741:21:10",
																"nodeType": "YulFunctionCall",
																"src": "12741:21:10"
															},
															"nativeSrc": "12741:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "12741:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12782:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12782:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12793:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12793:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12778:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12778:3:10"
																		},
																		"nativeSrc": "12778:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12778:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12798:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12798:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12771:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12771:6:10"
																},
																"nativeSrc": "12771:30:10",
																"nodeType": "YulFunctionCall",
																"src": "12771:30:10"
															},
															"nativeSrc": "12771:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "12771:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12821:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12821:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12832:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12832:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12817:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12817:3:10"
																		},
																		"nativeSrc": "12817:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12817:18:10"
																	},
																	{
																		"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
																		"kind": "string",
																		"nativeSrc": "12837:28:10",
																		"nodeType": "YulLiteral",
																		"src": "12837:28:10",
																		"type": "",
																		"value": "SafeMath: division by zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12810:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12810:6:10"
																},
																"nativeSrc": "12810:56:10",
																"nodeType": "YulFunctionCall",
																"src": "12810:56:10"
															},
															"nativeSrc": "12810:56:10",
															"nodeType": "YulExpressionStatement",
															"src": "12810:56:10"
														},
														{
															"nativeSrc": "12875:26:10",
															"nodeType": "YulAssignment",
															"src": "12875:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12887:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12887:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12898:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12898:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12883:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12883:3:10"
																},
																"nativeSrc": "12883:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12883:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12875:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12875:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12557:350:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12708:9:10",
														"nodeType": "YulTypedName",
														"src": "12708:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12722:4:10",
														"nodeType": "YulTypedName",
														"src": "12722:4:10",
														"type": ""
													}
												],
												"src": "12557:350:10"
											},
											{
												"body": {
													"nativeSrc": "13041:145:10",
													"nodeType": "YulBlock",
													"src": "13041:145:10",
													"statements": [
														{
															"nativeSrc": "13051:26:10",
															"nodeType": "YulAssignment",
															"src": "13051:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13063:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13063:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13074:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13074:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13059:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13059:3:10"
																},
																"nativeSrc": "13059:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13059:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13051:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13051:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13093:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13093:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "13108:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13108:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "13124:3:10",
																								"nodeType": "YulLiteral",
																								"src": "13124:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "13129:1:10",
																								"nodeType": "YulLiteral",
																								"src": "13129:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "13120:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "13120:3:10"
																						},
																						"nativeSrc": "13120:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "13120:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13133:1:10",
																						"nodeType": "YulLiteral",
																						"src": "13133:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "13116:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "13116:3:10"
																				},
																				"nativeSrc": "13116:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13116:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13104:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13104:3:10"
																		},
																		"nativeSrc": "13104:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13104:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13086:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13086:6:10"
																},
																"nativeSrc": "13086:51:10",
																"nodeType": "YulFunctionCall",
																"src": "13086:51:10"
															},
															"nativeSrc": "13086:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "13086:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13157:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13157:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13168:2:10",
																				"nodeType": "YulLiteral",
																				"src": "13168:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13153:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13153:3:10"
																		},
																		"nativeSrc": "13153:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13153:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "13173:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13173:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13146:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13146:6:10"
																},
																"nativeSrc": "13146:34:10",
																"nodeType": "YulFunctionCall",
																"src": "13146:34:10"
															},
															"nativeSrc": "13146:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "13146:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "12912:274:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13002:9:10",
														"nodeType": "YulTypedName",
														"src": "13002:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13013:6:10",
														"nodeType": "YulTypedName",
														"src": "13013:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13021:6:10",
														"nodeType": "YulTypedName",
														"src": "13021:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13032:4:10",
														"nodeType": "YulTypedName",
														"src": "13032:4:10",
														"type": ""
													}
												],
												"src": "12912:274:10"
											},
											{
												"body": {
													"nativeSrc": "13348:218:10",
													"nodeType": "YulBlock",
													"src": "13348:218:10",
													"statements": [
														{
															"nativeSrc": "13358:26:10",
															"nodeType": "YulAssignment",
															"src": "13358:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13370:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13370:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13381:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13381:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13366:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13366:3:10"
																},
																"nativeSrc": "13366:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13366:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13358:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13358:4:10"
																}
															]
														},
														{
															"nativeSrc": "13393:29:10",
															"nodeType": "YulVariableDeclaration",
															"src": "13393:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "13411:3:10",
																				"nodeType": "YulLiteral",
																				"src": "13411:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13416:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13416:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "13407:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13407:3:10"
																		},
																		"nativeSrc": "13407:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13407:11:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13420:1:10",
																		"nodeType": "YulLiteral",
																		"src": "13420:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "13403:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13403:3:10"
																},
																"nativeSrc": "13403:19:10",
																"nodeType": "YulFunctionCall",
																"src": "13403:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "13397:2:10",
																	"nodeType": "YulTypedName",
																	"src": "13397:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13438:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13438:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "13453:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13453:6:10"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "13461:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "13461:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13449:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13449:3:10"
																		},
																		"nativeSrc": "13449:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13449:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13431:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13431:6:10"
																},
																"nativeSrc": "13431:34:10",
																"nodeType": "YulFunctionCall",
																"src": "13431:34:10"
															},
															"nativeSrc": "13431:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "13431:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13485:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13485:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13496:2:10",
																				"nodeType": "YulLiteral",
																				"src": "13496:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13481:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13481:3:10"
																		},
																		"nativeSrc": "13481:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13481:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "13505:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13505:6:10"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "13513:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "13513:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13501:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13501:3:10"
																		},
																		"nativeSrc": "13501:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13501:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13474:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13474:6:10"
																},
																"nativeSrc": "13474:43:10",
																"nodeType": "YulFunctionCall",
																"src": "13474:43:10"
															},
															"nativeSrc": "13474:43:10",
															"nodeType": "YulExpressionStatement",
															"src": "13474:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13537:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13537:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13548:2:10",
																				"nodeType": "YulLiteral",
																				"src": "13548:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13533:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13533:3:10"
																		},
																		"nativeSrc": "13533:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13533:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "13553:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13553:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13526:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13526:6:10"
																},
																"nativeSrc": "13526:34:10",
																"nodeType": "YulFunctionCall",
																"src": "13526:34:10"
															},
															"nativeSrc": "13526:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "13526:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13191:375:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13301:9:10",
														"nodeType": "YulTypedName",
														"src": "13301:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13312:6:10",
														"nodeType": "YulTypedName",
														"src": "13312:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13320:6:10",
														"nodeType": "YulTypedName",
														"src": "13320:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13328:6:10",
														"nodeType": "YulTypedName",
														"src": "13328:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13339:4:10",
														"nodeType": "YulTypedName",
														"src": "13339:4:10",
														"type": ""
													}
												],
												"src": "13191:375:10"
											},
											{
												"body": {
													"nativeSrc": "13708:275:10",
													"nodeType": "YulBlock",
													"src": "13708:275:10",
													"statements": [
														{
															"nativeSrc": "13718:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "13718:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13738:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13738:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13732:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "13732:5:10"
																},
																"nativeSrc": "13732:13:10",
																"nodeType": "YulFunctionCall",
																"src": "13732:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13722:6:10",
																	"nodeType": "YulTypedName",
																	"src": "13722:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13754:10:10",
															"nodeType": "YulVariableDeclaration",
															"src": "13754:10:10",
															"value": {
																"kind": "number",
																"nativeSrc": "13763:1:10",
																"nodeType": "YulLiteral",
																"src": "13763:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "13758:1:10",
																	"nodeType": "YulTypedName",
																	"src": "13758:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13825:77:10",
																"nodeType": "YulBlock",
																"src": "13825:77:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "13850:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "13850:3:10"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "13855:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "13855:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "13846:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "13846:3:10"
																					},
																					"nativeSrc": "13846:11:10",
																					"nodeType": "YulFunctionCall",
																					"src": "13846:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "13873:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "13873:6:10"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "13881:1:10",
																											"nodeType": "YulIdentifier",
																											"src": "13881:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "13869:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "13869:3:10"
																									},
																									"nativeSrc": "13869:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "13869:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "13885:4:10",
																									"nodeType": "YulLiteral",
																									"src": "13885:4:10",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "13865:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "13865:3:10"
																							},
																							"nativeSrc": "13865:25:10",
																							"nodeType": "YulFunctionCall",
																							"src": "13865:25:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "13859:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "13859:5:10"
																					},
																					"nativeSrc": "13859:32:10",
																					"nodeType": "YulFunctionCall",
																					"src": "13859:32:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "13839:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13839:6:10"
																			},
																			"nativeSrc": "13839:53:10",
																			"nodeType": "YulFunctionCall",
																			"src": "13839:53:10"
																		},
																		"nativeSrc": "13839:53:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "13839:53:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "13784:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13784:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13787:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13787:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "13781:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "13781:2:10"
																},
																"nativeSrc": "13781:13:10",
																"nodeType": "YulFunctionCall",
																"src": "13781:13:10"
															},
															"nativeSrc": "13773:129:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "13795:21:10",
																"nodeType": "YulBlock",
																"src": "13795:21:10",
																"statements": [
																	{
																		"nativeSrc": "13797:17:10",
																		"nodeType": "YulAssignment",
																		"src": "13797:17:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "13806:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "13806:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13809:4:10",
																					"nodeType": "YulLiteral",
																					"src": "13809:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "13802:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "13802:3:10"
																			},
																			"nativeSrc": "13802:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "13802:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "13797:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "13797:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "13777:3:10",
																"nodeType": "YulBlock",
																"src": "13777:3:10",
																"statements": []
															},
															"src": "13773:129:10"
														},
														{
															"nativeSrc": "13911:26:10",
															"nodeType": "YulVariableDeclaration",
															"src": "13911:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13925:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13925:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13930:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13930:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13921:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13921:3:10"
																},
																"nativeSrc": "13921:16:10",
																"nodeType": "YulFunctionCall",
																"src": "13921:16:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "13915:2:10",
																	"nodeType": "YulTypedName",
																	"src": "13915:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "13953:2:10",
																		"nodeType": "YulIdentifier",
																		"src": "13953:2:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13957:1:10",
																		"nodeType": "YulLiteral",
																		"src": "13957:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13946:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13946:6:10"
																},
																"nativeSrc": "13946:13:10",
																"nodeType": "YulFunctionCall",
																"src": "13946:13:10"
															},
															"nativeSrc": "13946:13:10",
															"nodeType": "YulExpressionStatement",
															"src": "13946:13:10"
														},
														{
															"nativeSrc": "13968:9:10",
															"nodeType": "YulAssignment",
															"src": "13968:9:10",
															"value": {
																"name": "_1",
																"nativeSrc": "13975:2:10",
																"nodeType": "YulIdentifier",
																"src": "13975:2:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13968:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13968:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13571:412:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13684:3:10",
														"nodeType": "YulTypedName",
														"src": "13684:3:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13689:6:10",
														"nodeType": "YulTypedName",
														"src": "13689:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13700:3:10",
														"nodeType": "YulTypedName",
														"src": "13700:3:10",
														"type": ""
													}
												],
												"src": "13571:412:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$572_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function validator_revert_contract_IERC20(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_contract$_IERC20_$572t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_contract_IERC20(value)\n        value1 := value\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_bool(value_1)\n        value2 := value_1\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_contract_IERC20(value)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_contract$_IERC20_$572t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_IERC20(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let value_2 := calldataload(add(headStart, 128))\n        validator_revert_contract_IERC20(value_2)\n        value4 := value_2\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value2 := value\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$572__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_contract_IERC20(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_contract_IERC20(value)\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_contract$_ISalesFactory_$2342__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        if gt(_3, _1) { panic_error_0x41() }\n        let _5 := shl(5, _3)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, _5), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        value1 := calldataload(add(headStart, _4))\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, 0x20)\n        let srcPtr := add(value, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_1f13159535f66a78aff8e87048116728eebc9a6eadc436340bf8ddf945a670f5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"Last sale you registered for is \")\n        mstore(add(headStart, 96), \"not finished yet.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"withdraw: can't withdraw more th\")\n        mstore(add(headStart, 96), \"an deposit\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_56b9ca3553e1051f7fcbcaba90d07b4176d745112fcce0c7cc3b593a9da191ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"Emergency withdraw blocked durin\")\n        mstore(add(headStart, 96), \"g sale and cooldown period.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_ea8c4190832cfece80b3f2404c6211d113e3c15b0e1b7b1fbf8c07c9c81bca0e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"User does not have anything stak\")\n        mstore(add(headStart, 96), \"ed.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"fund: too late, the farm is clos\")\n        mstore(add(headStart, 96), \"ed\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_f95e2b94b64afe2d9116800b91afd89844f4c614e9be6f53796fc62d9ae9798e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Sale not created through factory\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SafeMath: addition overflow\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"SafeMath: multiplication overflo\")\n        mstore(add(headStart, 96), \"w\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"SafeMath: subtraction overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"SafeMath: division by zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106101d1575f3560e01c8063785e9e86116100fe578063ca1d209d1161009e578063e6fd48bc1161006e578063e6fd48bc1461041d578063ed95f07f14610426578063f2fde38b14610439578063fcfc1b141461044c575f80fd5b8063ca1d209d146103d1578063e2bbb158146103e4578063e4c75c27146103f7578063e6f04acc1461040a575f80fd5b806393f1a40b116100d957806393f1a40b1461034e578063a2383106146103a2578063a85adeab146103b5578063aa5f7e26146103be575f80fd5b8063785e9e86146102eb5780638da5cb5b146103155780638f10369a14610345575f80fd5b8063441a3e70116101745780635c76ca2d116101445780635c76ca2d146102bf578063630b5ba1146102c857806364482f79146102d0578063715018a6146102e3575f80fd5b8063441a3e701461027357806351eb05a6146102865780635312ea8e1461029957806357fb25cc146102ac575f80fd5b806317caf6f1116101af57806317caf6f11461023a5780631eaaa045146102435780633dfcb861146102585780633f90916a1461026b575f80fd5b8063081e3eda146101d55780630e15561a146101ec5780631526fe27146101f5575b5f80fd5b6005545b6040519081526020015b60405180910390f35b6101d960035481565b6102086102033660046118e7565b61046d565b604080516001600160a01b0390961686526020860194909452928401919091526060830152608082015260a0016101e3565b6101d960075481565b61025661025136600461191f565b6104b6565b005b61025661026636600461196e565b610610565b6101d961064c565b610256610281366004611989565b61069d565b6102566102943660046118e7565b6108ac565b6102566102a73660046118e7565b61098e565b6102566102ba3660046119a9565b610ac4565b6101d960015481565b610256610c14565b6102566102de366004611a04565b610c36565b610256610cbf565b5f546102fd906001600160a01b031681565b6040516001600160a01b0390911681526020016101e3565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166102fd565b6101d960025481565b61038761035c366004611a2f565b600660209081525f928352604080842090915290825290208054600182015460029092015490919083565b604080519384526020840192909252908201526060016101e3565b6101d96103b0366004611a2f565b610cd2565b6101d960095481565b6102566103cc3660046118e7565b610cfb565b6102566103df3660046118e7565b610e08565b6102566103f2366004611989565b610eb1565b6101d9610405366004611a2f565b610fd6565b610256610418366004611a5d565b6110fd565b6101d960085481565b6004546102fd906001600160a01b031681565b61025661044736600461196e565b611220565b61045f61045a366004611aa6565b61125d565b6040516101e3929190611ba6565b6005818154811061047c575f80fd5b5f918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b0390931694509092909185565b6104be61138e565b80156104cc576104cc610c14565b5f60085442116104de576008546104e0565b425b6007549091506104f090856113e9565b6007556040805160a0810182526001600160a01b039485168152602081019586529081019182525f6060820181815260808301828152600580546001810182559381905293517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db09390940292830180546001600160a01b031916949097169390931790955594517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db186015590517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db285015591517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db384015550517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db490910155565b61061861138e565b6001600160a01b03811661062a575f80fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b5f600854421161065b57505f90565b5f600954421061066d5760095461066f565b425b9050610697600154610691600854846106889190611be7565b6002549061144e565b906114cc565b91505090565b5f600583815481106106b1576106b1611bfa565b5f9182526020808320868452600682526040808520338652909252922060028101546005909202909201925042101561074b5760405162461bcd60e51b815260206004820152603160248201527f4c6173742073616c6520796f75207265676973746572656420666f72206973206044820152703737ba103334b734b9b432b2103cb2ba1760791b60648201526084015b60405180910390fd5b80548311156107af5760405162461bcd60e51b815260206004820152602a60248201527f77697468647261773a2063616e2774207769746864726177206d6f7265207468604482015269185b8819195c1bdcda5d60b21b6064820152608401610742565b6107b8846108ac565b5f6107f382600101546106916a0c097ce7bc90715b34b9f160241b6107ed8760030154875f015461144e90919063ffffffff16565b90611527565b90506107ff3382611581565b815461080b90856114cc565b8083556003840154610831916a0c097ce7bc90715b34b9f160241b916107ed919061144e565b6001830155825461084c906001600160a01b0316338661160f565b600483015461085b90856114cc565b6004840155831561086d575f60028301555b604051848152859033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568906020015b60405180910390a35050505050565b5f600582815481106108c0576108c0611bfa565b905f5260205f20906005020190505f60095442106108e0576009546108e2565b425b9050816002015481116108f6575060028101545b60048201545f81900361090d575060029091015550565b5f6109258460020154846114cc90919063ffffffff16565b90505f6109516007546107ed876001015461094b6002548761144e90919063ffffffff16565b9061144e565b905061097d610972846107ed846a0c097ce7bc90715b34b9f160241b61144e565b6003870154906113e9565b600386015550505060029091015550565b5f600582815481106109a2576109a2611bfa565b5f91825260208083208584526006825260408085203386529092529220600281015460059092029092019250421015610a435760405162461bcd60e51b815260206004820152603b60248201527f456d657267656e637920776974686472617720626c6f636b656420647572696e60448201527f672073616c6520616e6420636f6f6c646f776e20706572696f642e00000000006064820152608401610742565b80548254610a5e916001600160a01b0390911690339061160f565b8054604051908152839033907fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959060200160405180910390a380546004830154610aa7916114cc565b6004909201919091555f8082556001820181905560029091015550565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f81158015610b095750825b90505f8267ffffffffffffffff166001148015610b255750303b155b905081158015610b33575080155b15610b515760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610b7b57845460ff60401b1916600160401b1785555b610b848a611673565b5f80546001600160a01b03808c166001600160a01b03199283161790925560028a90556008899055600989905560048054928916929091169190911790558315610c0857845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b6005545f5b81811015610c3257610c2a816108ac565b600101610c19565b5050565b610c3e61138e565b8015610c4c57610c4c610c14565b610c8d82610c8760058681548110610c6657610c66611bfa565b905f5260205f209060050201600101546007546114cc90919063ffffffff16565b906113e9565b6007819055508160058481548110610ca757610ca7611bfa565b905f5260205f20906005020160010181905550505050565b610cc761138e565b610cd05f611684565b565b5f8281526006602090815260408083206001600160a01b03851684529091529020545b92915050565b5f60058281548110610d0f57610d0f611bfa565b5f9182526020808320858452600682526040808520338652909252922060059091029091019150610d3f836108ac565b5f610d7482600101546106916a0c097ce7bc90715b34b9f160241b6107ed8760030154875f015461144e90919063ffffffff16565b8254909150610d8390826113e9565b8083556003840154610da9916a0c097ce7bc90715b34b9f160241b916107ed919061144e565b60018301556004830154610dbd90826113e9565b60048401558154604080518381526020810192909252859133917f92f0bdf80f3916a4279540865e94ef327cf48639092106cca4bddc9bb1de4a86910160405180910390a350505050565b6009544210610e645760405162461bcd60e51b815260206004820152602260248201527f66756e643a20746f6f206c6174652c20746865206661726d20697320636c6f73604482015261195960f21b6064820152608401610742565b5f54610e7b906001600160a01b03163330846116f4565b600254610e89908290611527565b60095f828254610e999190611c0e565b9091555050600354610eab90826113e9565b60035550565b5f60058381548110610ec557610ec5611bfa565b5f918252602080832086845260068252604080852033865290925292206005909102909101915082610ef6856108ac565b815415610f40575f610f3283600101546106916a0c097ce7bc90715b34b9f160241b6107ed8860030154885f015461144e90919063ffffffff16565b9050610f3e3382611581565b505b8254610f57906001600160a01b03163330876116f4565b6004830154610f6690826113e9565b60048401558154610f7790826113e9565b8083556003840154610f9d916a0c097ce7bc90715b34b9f160241b916107ed919061144e565b6001830155604051818152859033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159060200161089d565b5f8060058481548110610feb57610feb611bfa565b5f91825260208083208784526006825260408085206001600160a01b0389168652909252922060036005909202909201908101546004820154600283015492945090914211801561103b57508015155b156110c2575f600954421061105257600954611054565b425b90505f61106e8660020154836114cc90919063ffffffff16565b90505f6110946007546107ed896001015461094b6002548761144e90919063ffffffff16565b90506110bc6110b5856107ed846a0c097ce7bc90715b34b9f160241b61144e565b86906113e9565b94505050505b6110f283600101546106916a0c097ce7bc90715b34b9f160241b6107ed86885f015461144e90919063ffffffff16565b979650505050505050565b60048054604051631400493d60e31b815233928101929092526001600160a01b03169063a00249e890602401602060405180830381865afa158015611144573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111689190611c21565b6111be5760405162461bcd60e51b815260206004820152602160248201527f53616c65206e6f742063726561746564207468726f75676820666163746f72796044820152601760f91b6064820152608401610742565b5f8381526006602090815260408083206001600160a01b0386168452909152902060028101544210156111ef575f80fd5b600281019190915560030180546001810182555f91825260209091200180546001600160a01b031916331790555050565b61122861138e565b6001600160a01b03811661125157604051631e4fbdf760e01b81525f6004820152602401610742565b61125a81611684565b50565b6060805f845167ffffffffffffffff81111561127b5761127b611a92565b6040519080825280602002602001820160405280156112a4578160200160208202803683370190505b5090505f855167ffffffffffffffff8111156112c2576112c2611a92565b6040519080825280602002602001820160405280156112eb578160200160208202803683370190505b5090505f5b86518110156113825761131c8688838151811061130f5761130f611bfa565b6020026020010151610cd2565b83828151811061132e5761132e611bfa565b60200260200101818152505061135d8688838151811061135057611350611bfa565b6020026020010151610fd6565b82828151811061136f5761136f611bfa565b60209081029190910101526001016112f0565b50909590945092505050565b336113c07f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b031614610cd05760405163118cdaa760e01b8152336004820152602401610742565b5f806113f58385611c0e565b9050838110156114475760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610742565b9392505050565b5f825f0361145d57505f610cf5565b5f6114688385611c3c565b9050826114758583611c53565b146114475760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610742565b5f8282111561151d5760405162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006044820152606401610742565b6114478284611be7565b5f8082116115775760405162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f0000000000006044820152606401610742565b6114478284611c53565b5f5460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303815f875af11580156115d0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115f49190611c21565b508060015f8282546116069190611c0e565b90915550505050565b6040516001600160a01b0383811660248301526044820183905261166e91859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050611733565b505050565b61167b611794565b61125a816117dd565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b6040516001600160a01b03848116602483015283811660448301526064820183905261172d9186918216906323b872dd9060840161163c565b50505050565b5f6117476001600160a01b038416836117e5565b905080515f1415801561176b5750808060200190518101906117699190611c21565b155b1561166e57604051635274afe760e01b81526001600160a01b0384166004820152602401610742565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610cd057604051631afcd79f60e31b815260040160405180910390fd5b611228611794565b606061144783835f845f80856001600160a01b031684866040516118099190611c72565b5f6040518083038185875af1925050503d805f8114611843576040519150601f19603f3d011682016040523d82523d5f602084013e611848565b606091505b5091509150611858868383611862565b9695505050505050565b60608261187757611872826118be565b611447565b815115801561188e57506001600160a01b0384163b155b156118b757604051639996b31560e01b81526001600160a01b0385166004820152602401610742565b5080611447565b8051156118ce5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b5f602082840312156118f7575f80fd5b5035919050565b6001600160a01b038116811461125a575f80fd5b801515811461125a575f80fd5b5f805f60608486031215611931575f80fd5b833592506020840135611943816118fe565b9150604084013561195381611912565b809150509250925092565b8035611969816118fe565b919050565b5f6020828403121561197e575f80fd5b8135611447816118fe565b5f806040838503121561199a575f80fd5b50508035926020909101359150565b5f805f805f60a086880312156119bd575f80fd5b85356119c8816118fe565b945060208601356119d8816118fe565b9350604086013592506060860135915060808601356119f6816118fe565b809150509295509295909350565b5f805f60608486031215611a16575f80fd5b8335925060208401359150604084013561195381611912565b5f8060408385031215611a40575f80fd5b823591506020830135611a52816118fe565b809150509250929050565b5f805f60608486031215611a6f575f80fd5b833592506020840135611a81816118fe565b929592945050506040919091013590565b634e487b7160e01b5f52604160045260245ffd5b5f8060408385031215611ab7575f80fd5b823567ffffffffffffffff80821115611ace575f80fd5b818501915085601f830112611ae1575f80fd5b8135602082821115611af557611af5611a92565b8160051b604051601f19603f83011681018181108682111715611b1a57611b1a611a92565b604052928352818301935084810182019289841115611b37575f80fd5b948201945b83861015611b5c57611b4d8661195e565b85529482019493820193611b3c565b9997909101359750505050505050565b5f815180845260208085019450602084015f5b83811015611b9b57815187529582019590820190600101611b7f565b509495945050505050565b604081525f611bb86040830185611b6c565b8281036020840152611bca8185611b6c565b95945050505050565b634e487b7160e01b5f52601160045260245ffd5b81810381811115610cf557610cf5611bd3565b634e487b7160e01b5f52603260045260245ffd5b80820180821115610cf557610cf5611bd3565b5f60208284031215611c31575f80fd5b815161144781611912565b8082028115828204841417610cf557610cf5611bd3565b5f82611c6d57634e487b7160e01b5f52601260045260245ffd5b500490565b5f82515f5b81811015611c915760208186018101518583015201611c77565b505f92019182525091905056fea26469706673582212203049d4d7f6ab6eeb7a3c8f4dcd6e72906c35301870d43fa6f875c73f174cbee064736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x785E9E86 GT PUSH2 0xFE JUMPI DUP1 PUSH4 0xCA1D209D GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xE6FD48BC GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xE6FD48BC EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0xED95F07F EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0xFCFC1B14 EQ PUSH2 0x44C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCA1D209D EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0xE4C75C27 EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xE6F04ACC EQ PUSH2 0x40A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x93F1A40B GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0xA2383106 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0xA85ADEAB EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xAA5F7E26 EQ PUSH2 0x3BE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x785E9E86 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x8F10369A EQ PUSH2 0x345 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x441A3E70 GT PUSH2 0x174 JUMPI DUP1 PUSH4 0x5C76CA2D GT PUSH2 0x144 JUMPI DUP1 PUSH4 0x5C76CA2D EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x57FB25CC EQ PUSH2 0x2AC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x17CAF6F1 GT PUSH2 0x1AF JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x1EAAA045 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x3DFCB861 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x3F90916A EQ PUSH2 0x26B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xE15561A EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x1F5 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0x46D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0x1D9 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x251 CALLDATASIZE PUSH1 0x4 PUSH2 0x191F JUMP JUMPDEST PUSH2 0x4B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x256 PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x196E JUMP JUMPDEST PUSH2 0x610 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x64C JUMP JUMPDEST PUSH2 0x256 PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x1989 JUMP JUMPDEST PUSH2 0x69D JUMP JUMPDEST PUSH2 0x256 PUSH2 0x294 CALLDATASIZE PUSH1 0x4 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0x8AC JUMP JUMPDEST PUSH2 0x256 PUSH2 0x2A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0x98E JUMP JUMPDEST PUSH2 0x256 PUSH2 0x2BA CALLDATASIZE PUSH1 0x4 PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0xAC4 JUMP JUMPDEST PUSH2 0x1D9 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x256 PUSH2 0xC14 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1A04 JUMP JUMPDEST PUSH2 0xC36 JUMP JUMPDEST PUSH2 0x256 PUSH2 0xCBF JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x2FD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2FD JUMP JUMPDEST PUSH2 0x1D9 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x387 PUSH2 0x35C CALLDATASIZE PUSH1 0x4 PUSH2 0x1A2F JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x3B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A2F JUMP JUMPDEST PUSH2 0xCD2 JUMP JUMPDEST PUSH2 0x1D9 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x3CC CALLDATASIZE PUSH1 0x4 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0xCFB JUMP JUMPDEST PUSH2 0x256 PUSH2 0x3DF CALLDATASIZE PUSH1 0x4 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0xE08 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x3F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1989 JUMP JUMPDEST PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x405 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A2F JUMP JUMPDEST PUSH2 0xFD6 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x418 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A5D JUMP JUMPDEST PUSH2 0x10FD JUMP JUMPDEST PUSH2 0x1D9 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x2FD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x447 CALLDATASIZE PUSH1 0x4 PUSH2 0x196E JUMP JUMPDEST PUSH2 0x1220 JUMP JUMPDEST PUSH2 0x45F PUSH2 0x45A CALLDATASIZE PUSH1 0x4 PUSH2 0x1AA6 JUMP JUMPDEST PUSH2 0x125D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E3 SWAP3 SWAP2 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x47C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP5 POP SWAP1 SWAP3 SWAP1 SWAP2 DUP6 JUMP JUMPDEST PUSH2 0x4BE PUSH2 0x138E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4CC JUMPI PUSH2 0x4CC PUSH2 0xC14 JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD TIMESTAMP GT PUSH2 0x4DE JUMPI PUSH1 0x8 SLOAD PUSH2 0x4E0 JUMP JUMPDEST TIMESTAMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 SWAP2 POP PUSH2 0x4F0 SWAP1 DUP6 PUSH2 0x13E9 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP6 DUP7 MSTORE SWAP1 DUP2 ADD SWAP2 DUP3 MSTORE PUSH0 PUSH1 0x60 DUP3 ADD DUP2 DUP2 MSTORE PUSH1 0x80 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP4 DUP2 SWAP1 MSTORE SWAP4 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP4 SWAP1 SWAP5 MUL SWAP3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 SWAP1 SWAP8 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP6 SSTORE SWAP5 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB1 DUP7 ADD SSTORE SWAP1 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB2 DUP6 ADD SSTORE SWAP2 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB3 DUP5 ADD SSTORE POP MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB4 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH2 0x618 PUSH2 0x138E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x62A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD TIMESTAMP GT PUSH2 0x65B JUMPI POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0x66D JUMPI PUSH1 0x9 SLOAD PUSH2 0x66F JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP PUSH2 0x697 PUSH1 0x1 SLOAD PUSH2 0x691 PUSH1 0x8 SLOAD DUP5 PUSH2 0x688 SWAP2 SWAP1 PUSH2 0x1BE7 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0x144E JUMP JUMPDEST SWAP1 PUSH2 0x14CC JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x6B1 JUMPI PUSH2 0x6B1 PUSH2 0x1BFA JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x5 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP3 POP TIMESTAMP LT ISZERO PUSH2 0x74B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6173742073616C6520796F75207265676973746572656420666F7220697320 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x3737BA103334B734B9B432B2103CB2BA17 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD DUP4 GT ISZERO PUSH2 0x7AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x77697468647261773A2063616E2774207769746864726177206D6F7265207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x185B8819195C1BDCDA5D PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x742 JUMP JUMPDEST PUSH2 0x7B8 DUP5 PUSH2 0x8AC JUMP JUMPDEST PUSH0 PUSH2 0x7F3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x691 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL PUSH2 0x7ED DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH0 ADD SLOAD PUSH2 0x144E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1527 JUMP JUMPDEST SWAP1 POP PUSH2 0x7FF CALLER DUP3 PUSH2 0x1581 JUMP JUMPDEST DUP2 SLOAD PUSH2 0x80B SWAP1 DUP6 PUSH2 0x14CC JUMP JUMPDEST DUP1 DUP4 SSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0x831 SWAP2 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL SWAP2 PUSH2 0x7ED SWAP2 SWAP1 PUSH2 0x144E JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE DUP3 SLOAD PUSH2 0x84C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP7 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x4 DUP4 ADD SLOAD PUSH2 0x85B SWAP1 DUP6 PUSH2 0x14CC JUMP JUMPDEST PUSH1 0x4 DUP5 ADD SSTORE DUP4 ISZERO PUSH2 0x86D JUMPI PUSH0 PUSH1 0x2 DUP4 ADD SSTORE JUMPDEST PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE DUP6 SWAP1 CALLER SWAP1 PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x8C0 JUMPI PUSH2 0x8C0 PUSH2 0x1BFA JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0x8E0 JUMPI PUSH1 0x9 SLOAD PUSH2 0x8E2 JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x2 ADD SLOAD DUP2 GT PUSH2 0x8F6 JUMPI POP PUSH1 0x2 DUP2 ADD SLOAD JUMPDEST PUSH1 0x4 DUP3 ADD SLOAD PUSH0 DUP2 SWAP1 SUB PUSH2 0x90D JUMPI POP PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x925 DUP5 PUSH1 0x2 ADD SLOAD DUP5 PUSH2 0x14CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x951 PUSH1 0x7 SLOAD PUSH2 0x7ED DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x94B PUSH1 0x2 SLOAD DUP8 PUSH2 0x144E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x144E JUMP JUMPDEST SWAP1 POP PUSH2 0x97D PUSH2 0x972 DUP5 PUSH2 0x7ED DUP5 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL PUSH2 0x144E JUMP JUMPDEST PUSH1 0x3 DUP8 ADD SLOAD SWAP1 PUSH2 0x13E9 JUMP JUMPDEST PUSH1 0x3 DUP7 ADD SSTORE POP POP POP PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9A2 JUMPI PUSH2 0x9A2 PUSH2 0x1BFA JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x5 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP3 POP TIMESTAMP LT ISZERO PUSH2 0xA43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456D657267656E637920776974686472617720626C6F636B656420647572696E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x672073616C6520616E6420636F6F6C646F776E20706572696F642E0000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x742 JUMP JUMPDEST DUP1 SLOAD DUP3 SLOAD PUSH2 0xA5E SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH2 0x160F JUMP JUMPDEST DUP1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE DUP4 SWAP1 CALLER SWAP1 PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH2 0xAA7 SWAP2 PUSH2 0x14CC JUMP JUMPDEST PUSH1 0x4 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH0 DUP1 DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xB09 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xB25 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xB33 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xB51 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xB7B JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0xB84 DUP11 PUSH2 0x1673 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x2 DUP11 SWAP1 SSTORE PUSH1 0x8 DUP10 SWAP1 SSTORE PUSH1 0x9 DUP10 SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP3 DUP10 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0xC08 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC32 JUMPI PUSH2 0xC2A DUP2 PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xC19 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC3E PUSH2 0x138E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC4C JUMPI PUSH2 0xC4C PUSH2 0xC14 JUMP JUMPDEST PUSH2 0xC8D DUP3 PUSH2 0xC87 PUSH1 0x5 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xC66 JUMPI PUSH2 0xC66 PUSH2 0x1BFA JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x7 SLOAD PUSH2 0x14CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x13E9 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xCA7 JUMPI PUSH2 0xCA7 PUSH2 0x1BFA JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0xCC7 PUSH2 0x138E JUMP JUMPDEST PUSH2 0xCD0 PUSH0 PUSH2 0x1684 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD0F JUMPI PUSH2 0xD0F PUSH2 0x1BFA JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0xD3F DUP4 PUSH2 0x8AC JUMP JUMPDEST PUSH0 PUSH2 0xD74 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x691 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL PUSH2 0x7ED DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH0 ADD SLOAD PUSH2 0x144E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 SLOAD SWAP1 SWAP2 POP PUSH2 0xD83 SWAP1 DUP3 PUSH2 0x13E9 JUMP JUMPDEST DUP1 DUP4 SSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0xDA9 SWAP2 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL SWAP2 PUSH2 0x7ED SWAP2 SWAP1 PUSH2 0x144E JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH2 0xDBD SWAP1 DUP3 PUSH2 0x13E9 JUMP JUMPDEST PUSH1 0x4 DUP5 ADD SSTORE DUP2 SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP6 SWAP2 CALLER SWAP2 PUSH32 0x92F0BDF80F3916A4279540865E94EF327CF48639092106CCA4BDDC9BB1DE4A86 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0xE64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x66756E643A20746F6F206C6174652C20746865206661726D20697320636C6F73 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x742 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0xE7B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP5 PUSH2 0x16F4 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xE89 SWAP1 DUP3 SWAP1 PUSH2 0x1527 JUMP JUMPDEST PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE99 SWAP2 SWAP1 PUSH2 0x1C0E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH2 0xEAB SWAP1 DUP3 PUSH2 0x13E9 JUMP JUMPDEST PUSH1 0x3 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xEC5 JUMPI PUSH2 0xEC5 PUSH2 0x1BFA JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD SWAP2 POP DUP3 PUSH2 0xEF6 DUP6 PUSH2 0x8AC JUMP JUMPDEST DUP2 SLOAD ISZERO PUSH2 0xF40 JUMPI PUSH0 PUSH2 0xF32 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x691 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL PUSH2 0x7ED DUP9 PUSH1 0x3 ADD SLOAD DUP9 PUSH0 ADD SLOAD PUSH2 0x144E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xF3E CALLER DUP3 PUSH2 0x1581 JUMP JUMPDEST POP JUMPDEST DUP3 SLOAD PUSH2 0xF57 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP8 PUSH2 0x16F4 JUMP JUMPDEST PUSH1 0x4 DUP4 ADD SLOAD PUSH2 0xF66 SWAP1 DUP3 PUSH2 0x13E9 JUMP JUMPDEST PUSH1 0x4 DUP5 ADD SSTORE DUP2 SLOAD PUSH2 0xF77 SWAP1 DUP3 PUSH2 0x13E9 JUMP JUMPDEST DUP1 DUP4 SSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0xF9D SWAP2 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL SWAP2 PUSH2 0x7ED SWAP2 SWAP1 PUSH2 0x144E JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE DUP6 SWAP1 CALLER SWAP1 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP1 PUSH1 0x20 ADD PUSH2 0x89D JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xFEB JUMPI PUSH2 0xFEB PUSH2 0x1BFA JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x3 PUSH1 0x5 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP1 DUP2 ADD SLOAD PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP3 SWAP5 POP SWAP1 SWAP2 TIMESTAMP GT DUP1 ISZERO PUSH2 0x103B JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x10C2 JUMPI PUSH0 PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0x1052 JUMPI PUSH1 0x9 SLOAD PUSH2 0x1054 JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x106E DUP7 PUSH1 0x2 ADD SLOAD DUP4 PUSH2 0x14CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1094 PUSH1 0x7 SLOAD PUSH2 0x7ED DUP10 PUSH1 0x1 ADD SLOAD PUSH2 0x94B PUSH1 0x2 SLOAD DUP8 PUSH2 0x144E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x10BC PUSH2 0x10B5 DUP6 PUSH2 0x7ED DUP5 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL PUSH2 0x144E JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x13E9 JUMP JUMPDEST SWAP5 POP POP POP POP JUMPDEST PUSH2 0x10F2 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x691 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL PUSH2 0x7ED DUP7 DUP9 PUSH0 ADD SLOAD PUSH2 0x144E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1400493D PUSH1 0xE3 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA00249E8 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1144 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1168 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH2 0x11BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616C65206E6F742063726561746564207468726F75676820666163746F7279 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x742 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x11EF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1228 PUSH2 0x138E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1251 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x742 JUMP JUMPDEST PUSH2 0x125A DUP2 PUSH2 0x1684 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 DUP5 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x127B JUMPI PUSH2 0x127B PUSH2 0x1A92 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12A4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP6 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12C2 JUMPI PUSH2 0x12C2 PUSH2 0x1A92 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12EB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x1382 JUMPI PUSH2 0x131C DUP7 DUP9 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x130F JUMPI PUSH2 0x130F PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xCD2 JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x132E JUMPI PUSH2 0x132E PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x135D DUP7 DUP9 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1350 JUMPI PUSH2 0x1350 PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xFD6 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x136F JUMPI PUSH2 0x136F PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x12F0 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH2 0x13C0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCD0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x742 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x13F5 DUP4 DUP6 PUSH2 0x1C0E JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1447 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x742 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 SUB PUSH2 0x145D JUMPI POP PUSH0 PUSH2 0xCF5 JUMP JUMPDEST PUSH0 PUSH2 0x1468 DUP4 DUP6 PUSH2 0x1C3C JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x1475 DUP6 DUP4 PUSH2 0x1C53 JUMP JUMPDEST EQ PUSH2 0x1447 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x742 JUMP JUMPDEST PUSH0 DUP3 DUP3 GT ISZERO PUSH2 0x151D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x742 JUMP JUMPDEST PUSH2 0x1447 DUP3 DUP5 PUSH2 0x1BE7 JUMP JUMPDEST PUSH0 DUP1 DUP3 GT PUSH2 0x1577 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x742 JUMP JUMPDEST PUSH2 0x1447 DUP3 DUP5 PUSH2 0x1C53 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15D0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15F4 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1606 SWAP2 SWAP1 PUSH2 0x1C0E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x166E SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1733 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x167B PUSH2 0x1794 JUMP JUMPDEST PUSH2 0x125A DUP2 PUSH2 0x17DD JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x172D SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0x163C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1747 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 PUSH2 0x17E5 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 EQ ISZERO DUP1 ISZERO PUSH2 0x176B JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1769 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x166E JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x742 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xCD0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1228 PUSH2 0x1794 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1447 DUP4 DUP4 PUSH0 DUP5 PUSH0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1809 SWAP2 SWAP1 PUSH2 0x1C72 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1843 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1848 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1858 DUP7 DUP4 DUP4 PUSH2 0x1862 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1877 JUMPI PUSH2 0x1872 DUP3 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0x1447 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x188E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x18B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x742 JUMP JUMPDEST POP DUP1 PUSH2 0x1447 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x18CE JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x125A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x125A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1931 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1943 DUP2 PUSH2 0x18FE JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1953 DUP2 PUSH2 0x1912 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1969 DUP2 PUSH2 0x18FE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x197E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1447 DUP2 PUSH2 0x18FE JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x199A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x19BD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x19C8 DUP2 PUSH2 0x18FE JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x19D8 DUP2 PUSH2 0x18FE JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH2 0x19F6 DUP2 PUSH2 0x18FE JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A16 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1953 DUP2 PUSH2 0x1912 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A40 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1A52 DUP2 PUSH2 0x18FE JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A6F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1A81 DUP2 PUSH2 0x18FE JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AB7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1ACE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AE1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 DUP3 DUP3 GT ISZERO PUSH2 0x1AF5 JUMPI PUSH2 0x1AF5 PUSH2 0x1A92 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP7 DUP3 GT OR ISZERO PUSH2 0x1B1A JUMPI PUSH2 0x1B1A PUSH2 0x1A92 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP3 DUP4 MSTORE DUP2 DUP4 ADD SWAP4 POP DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP10 DUP5 GT ISZERO PUSH2 0x1B37 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1B5C JUMPI PUSH2 0x1B4D DUP7 PUSH2 0x195E JUMP JUMPDEST DUP6 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP4 DUP3 ADD SWAP4 PUSH2 0x1B3C JUMP JUMPDEST SWAP10 SWAP8 SWAP1 SWAP2 ADD CALLDATALOAD SWAP8 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B9B JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1B7F JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x1BB8 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B6C JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1BCA DUP2 DUP6 PUSH2 0x1B6C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xCF5 JUMPI PUSH2 0xCF5 PUSH2 0x1BD3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xCF5 JUMPI PUSH2 0xCF5 PUSH2 0x1BD3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C31 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1447 DUP2 PUSH2 0x1912 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xCF5 JUMPI PUSH2 0xCF5 PUSH2 0x1BD3 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1C6D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C91 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x1C77 JUMP JUMPDEST POP PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS BLOBHASH 0xD4 0xD7 0xF6 0xAB PUSH15 0xEB7A3C8F4DCD6E72906C35301870D4 EXTCODEHASH 0xA6 0xF8 PUSH22 0xC73F174CBEE064736F6C634300081800330000000000 ",
							"sourceMap": "336:16036:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5527:93;5598:8;:15;5527:93;;;160:25:10;;;148:2;133:18;5527:93:7;;;;;;;;3200:27;;;;;;3390:26;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;672:32:10;;;654:51;;736:2;721:18;;714:34;;;;764:18;;;757:34;;;;822:2;807:18;;800:34;865:3;850:19;;843:35;641:3;626:19;3390:26:7;381:503:10;3733:30:7;;;;;;6325:594;;;;;;:::i;:::-;;:::i;:::-;;5322:173;;;;;;:::i;:::-;;:::i;9102:323::-;;;:::i;12610:1213::-;;;;;;:::i;:::-;;:::i;10425:891::-;;;;;;:::i;:::-;;:::i;14779:703::-;;;;;;:::i;:::-;;:::i;4652:490::-;;;;;;:::i;:::-;;:::i;2999:22::-;;;;;;9565:175;;;:::i;7084:298::-;;;;;;:::i;:::-;;:::i;3155:101:0:-;;;:::i;2877:19:7:-;;;;;-1:-1:-1;;;;;2877:19:7;;;;;;-1:-1:-1;;;;;3563:32:10;;;3545:51;;3533:2;3518:18;2877:19:7;3385:217:10;2441:144:0;1313:22;2570:8;-1:-1:-1;;;;;2570:8:0;2441:144;;3099:30:7;;;;;;3513:64;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4345:25:10;;;4401:2;4386:18;;4379:34;;;;4429:18;;;4422:34;4333:2;4318:18;3513:64:7;4143:319:10;7441:168:7;;;;;;:::i;:::-;;:::i;3941:27::-;;;;;;13907:747;;;;;;:::i;:::-;;:::i;5706:313::-;;;;;;:::i;:::-;;:::i;11427:1140::-;;;;;;:::i;:::-;;:::i;7701:873::-;;;;;;:::i;:::-;;:::i;9746:536::-;;;;;;:::i;:::-;;:::i;3839:29::-;;;;;;3304:33;;;;;-1:-1:-1;;;;;3304:33:7;;;3405:215:0;;;;;;:::i;:::-;;:::i;15820:548:7:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3390:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3390:26:7;;;;-1:-1:-1;3390:26:7;;;;;:::o;6325:594::-;2334:13:0;:11;:13::i;:::-;6425:11:7::1;6421:59;;;6452:17;:15;:17::i;:::-;6489:27;6537:14;;6519:15;:32;:67;;6572:14;;6519:67;;;6554:15;6519:67;6614:15;::::0;6489:97;;-1:-1:-1;6614:32:7::1;::::0;6634:11;6614:19:::1;:32::i;:::-;6596:15;:50:::0;6712:190:::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;6712:190:7;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;-1:-1:-1;6712:190:7;;;;;;;;;;;;6685:8:::1;:227:::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;6685:227:7::1;::::0;;;::::1;::::0;;;::::1;::::0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6685:227:7;;;;;;6325:594::o;5322:173::-;2334:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;5407:27:7;::::1;5399:36;;;::::0;::::1;;5445:12;:43:::0;;-1:-1:-1;;;;;;5445:43:7::1;-1:-1:-1::0;;;;;5445:43:7;;;::::1;::::0;;;::::1;::::0;;5322:173::o;9102:323::-;9149:7;9191:14;;9172:15;:33;9168:72;;-1:-1:-1;9228:1:7;;9102:323::o;9168:72::-;9250:21;9292:12;;9274:15;:30;:63;;9325:12;;9274:63;;;9307:15;9274:63;9250:87;;9354:64;9410:7;;9354:51;9390:14;;9374:13;:30;;;;:::i;:::-;9354:15;;;:19;:51::i;:::-;:55;;:64::i;:::-;9347:71;;;9102:323;:::o;12610:1213::-;12676:21;12700:8;12709:4;12700:14;;;;;;;;:::i;:::-;;;;;;;;;12748;;;:8;:14;;;;;;12763:10;12748:26;;;;;;;12845:21;;;;12700:14;;;;;;;;-1:-1:-1;12870:15:7;-1:-1:-1;12845:40:7;12837:102;;;;-1:-1:-1;;;12837:102:7;;7934:2:10;12837:102:7;;;7916:21:10;7973:2;7953:18;;;7946:30;8012:34;7992:18;;;7985:62;-1:-1:-1;;;8063:18:10;;;8056:47;8120:19;;12837:102:7;;;;;;;;;12957:11;;:22;-1:-1:-1;12957:22:7;12949:77;;;;-1:-1:-1;;;12949:77:7;;8352:2:10;12949:77:7;;;8334:21:10;8391:2;8371:18;;;8364:30;8430:34;8410:18;;;8403:62;-1:-1:-1;;;8481:18:10;;;8474:40;8531:19;;12949:77:7;8150:406:10;12949:77:7;13060:16;13071:4;13060:10;:16::i;:::-;13128:21;13152:69;13205:4;:15;;;13152:48;-1:-1:-1;;;13152:38:7;13168:4;:21;;;13152:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48::i;:69::-;13128:93;;13275:40;13289:10;13301:13;13275;:40::i;:::-;13339:11;;:24;;13355:7;13339:15;:24::i;:::-;13325:38;;;13407:21;;;;13391:48;;-1:-1:-1;;;13434:4:7;13391:38;;13325;13391:15;:38::i;:48::-;13373:15;;;:66;13496:12;;:55;;-1:-1:-1;;;;;13496:12:7;13530:10;13543:7;13496:25;:55::i;:::-;13582:18;;;;:31;;13605:7;13582:22;:31::i;:::-;13561:18;;;:52;13628:11;;13624:111;;13723:1;13699:21;;;:25;13624:111;13781:35;;160:25:10;;;13802:4:7;;13790:10;;13781:35;;148:2:10;133:18;13781:35:7;;;;;;;;12666:1157;;;12610:1213;;:::o;10425:891::-;10476:21;10500:8;10509:4;10500:14;;;;;;;;:::i;:::-;;;;;;;;;;;10476:38;;10525:21;10567:12;;10549:15;:30;:63;;10600:12;;10549:63;;;10582:15;10549:63;10525:87;;10644:4;:24;;;10627:13;:41;10623:112;;-1:-1:-1;10700:24:7;;;;10623:112;10764:18;;;;10745:16;10797:13;;;10793:104;;-1:-1:-1;10826:24:7;;;;:40;-1:-1:-1;10425:891:7:o;10793:104::-;10907:19;10929:43;10947:4;:24;;;10929:13;:17;;:43;;;;:::i;:::-;10907:65;;10982:19;11004:74;11062:15;;11004:53;11041:4;:15;;;11004:32;11020:15;;11004:11;:15;;:32;;;;:::i;:::-;:36;;:53::i;:74::-;10982:96;-1:-1:-1;11153:62:7;11179:35;11205:8;11179:21;10982:96;-1:-1:-1;;;11179:15:7;:21::i;:35::-;11153:21;;;;;:25;:62::i;:::-;11129:21;;;:86;-1:-1:-1;;;11269:24:7;;;;:40;-1:-1:-1;10425:891:7:o;14779:703::-;14837:21;14861:8;14870:4;14861:14;;;;;;;;:::i;:::-;;;;;;;;;14909;;;:8;:14;;;;;;14924:10;14909:26;;;;;;;15006:21;;;;14861:14;;;;;;;;-1:-1:-1;15031:15:7;-1:-1:-1;15006:40:7;14998:124;;;;-1:-1:-1;;;14998:124:7;;8763:2:10;14998:124:7;;;8745:21:10;8802:2;8782:18;;;8775:30;8841:34;8821:18;;;8814:62;8912:29;8892:18;;;8885:57;8959:19;;14998:124:7;8561:423:10;14998:124:7;15212:11;;15165:12;;:59;;-1:-1:-1;;;;;15165:12:7;;;;15199:10;;15165:25;:59::i;:::-;15275:11;;15239:48;;160:25:10;;;15269:4:7;;15257:10;;15239:48;;148:2:10;133:18;15239:48:7;;;;;;;15374:11;;15351:18;;;;:35;;:22;:35::i;:::-;15330:18;;;;:56;;;;15410:1;15396:15;;;15421;;;:19;;;15450:21;;;;:25;-1:-1:-1;14779:703:7:o;4652:490::-;8870:21:1;4302:15;;-1:-1:-1;;;4302:15:1;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:1;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:1;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:1;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:1;-1:-1:-1;;;5013:22:1;;;4979:67;4866:24:7::1;4881:8;4866:14;:24::i;:::-;4901:5;:14:::0;;-1:-1:-1;;;;;4901:14:7;;::::1;-1:-1:-1::0;;;;;;4901:14:7;;::::1;;::::0;;;4925:15:::1;:34:::0;;;4969:14:::1;:32:::0;;;5011:12:::1;:30:::0;;;5092:12:::1;:43:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;5066:101:1;;;;5100:23;;-1:-1:-1;;;;5100:23:1;;;5142:14;;-1:-1:-1;9142:50:10;;5142:14:1;;9130:2:10;9115:18;5142:14:1;;;;;;;5066:101;4092:1081;;;;;4652:490:7;;;;;:::o;9565:175::-;9626:8;:15;9609:14;9651:83;9679:6;9673:3;:12;9651:83;;;9708:15;9719:3;9708:10;:15::i;:::-;9687:5;;9651:83;;;;9599:141;9565:175::o;7084:298::-;2334:13:0;:11;:13::i;:::-;7181:11:7::1;7177:59;;;7208:17;:15;:17::i;:::-;7263:63;7314:11;7263:46;7283:8;7292:4;7283:14;;;;;;;;:::i;:::-;;;;;;;;;;;:25;;;7263:15;;:19;;:46;;;;:::i;:::-;:50:::0;::::1;:63::i;:::-;7245:15;:81;;;;7364:11;7336:8;7345:4;7336:14;;;;;;;;:::i;:::-;;;;;;;;;;;:25;;:39;;;;7084:298:::0;;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;7441:168:7:-;7510:7;7553:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;7553:21:7;;;;;;;;;7591:11;7441:168;;;;;:::o;13907:747::-;13956:21;13980:8;13989:4;13980:14;;;;;;;;:::i;:::-;;;;;;;;;14028;;;:8;:14;;;;;;14043:10;14028:26;;;;;;;13980:14;;;;;;;;-1:-1:-1;14163:16:7;14174:4;14163:10;:16::i;:::-;14190:21;14214:69;14267:4;:15;;;14214:48;-1:-1:-1;;;14214:38:7;14230:4;:21;;;14214:4;:11;;;:15;;:38;;;;:::i;:69::-;14351:11;;14190:93;;-1:-1:-1;14351:30:7;;14190:93;14351:15;:30::i;:::-;14337:44;;;14425:21;;;;14409:48;;-1:-1:-1;;;14452:4:7;14409:38;;14337:44;14409:15;:38::i;:48::-;14391:15;;;:66;14531:18;;;;:37;;14554:13;14531:22;:37::i;:::-;14510:18;;;:58;14635:11;;14583:64;;;9781:25:10;;;9837:2;9822:18;;9815:34;;;;14614:4:7;;14602:10;;14583:64;;9754:18:10;14583:64:7;;;;;;;13946:708;;;13907:747;:::o;5706:313::-;5780:12;;5762:15;:30;5754:77;;;;-1:-1:-1;;;5754:77:7;;10062:2:10;5754:77:7;;;10044:21:10;10101:2;10081:18;;;10074:30;10140:34;10120:18;;;10113:62;-1:-1:-1;;;10191:18:10;;;10184:32;10233:19;;5754:77:7;9860:398:10;5754:77:7;5841:5;;:67;;-1:-1:-1;;;;;5841:5:7;5872:10;5893:4;5900:7;5841:22;:67::i;:::-;5946:15;;5934:28;;:7;;:11;:28::i;:::-;5918:12;;:44;;;;;;;:::i;:::-;;;;-1:-1:-1;;5987:12:7;;:25;;6004:7;5987:16;:25::i;:::-;5972:12;:40;-1:-1:-1;5706:313:7:o;11427:1140::-;11492:21;11516:8;11525:4;11516:14;;;;;;;;:::i;:::-;;;;;;;;;11564;;;:8;:14;;;;;;11579:10;11564:26;;;;;;;11516:14;;;;;;;;-1:-1:-1;11625:7:7;11666:16;11573:4;11666:10;:16::i;:::-;11816:11;;:15;11812:193;;11847:21;11871:69;11924:4;:15;;;11871:48;-1:-1:-1;;;11871:38:7;11887:4;:21;;;11871:4;:11;;;:15;;:38;;;;:::i;:69::-;11847:93;;11954:40;11968:10;11980:13;11954;:40::i;:::-;11833:172;11812:193;12090:12;;:74;;-1:-1:-1;;;;;12090:12:7;12128:10;12149:4;12156:7;12090:29;:74::i;:::-;12236:18;;;;:37;;12259:13;12236:22;:37::i;:::-;12215:18;;;:58;12337:11;;:30;;12353:13;12337:15;:30::i;:::-;12323:44;;;12442:21;;;;12426:48;;-1:-1:-1;;;12469:4:7;12426:38;;12323:44;12426:15;:38::i;:48::-;12408:15;;;:66;12520:40;;160:25:10;;;12540:4:7;;12528:10;;12520:40;;148:2:10;133:18;12520:40:7;14:177:10;7701:873:7;7768:7;7787:21;7811:8;7820:4;7811:14;;;;;;;;:::i;:::-;;;;;;;;;7859;;;:8;:14;;;;;;-1:-1:-1;;;;;7859:21:7;;;;;;;;;7917;7811:14;;;;;;;7917:21;;;;7968:18;;;;8053:24;;;;7811:14;;-1:-1:-1;7917:21:7;;8035:15;:42;:59;;;;-1:-1:-1;8081:13:7;;;8035:59;8031:456;;;8110:21;8152:12;;8134:15;:30;:63;;8185:12;;8134:63;;;8167:15;8134:63;8110:87;;8211:19;8233:43;8251:4;:24;;;8233:13;:17;;:43;;;;:::i;:::-;8211:65;;8290:19;8312:74;8370:15;;8312:53;8349:4;:15;;;8312:32;8328:15;;8312:11;:15;;:32;;;;:::i;:74::-;8290:96;-1:-1:-1;8419:57:7;8440:35;8466:8;8440:21;8290:96;-1:-1:-1;;;8440:15:7;:21::i;:35::-;8419:16;;:20;:57::i;:::-;8400:76;;8096:391;;;8031:456;8503:64;8551:4;:15;;;8503:43;-1:-1:-1;;;8503:33:7;8519:16;8503:4;:11;;;:15;;:33;;;;:::i;:64::-;8496:71;7701:873;-1:-1:-1;;;;;;;7701:873:7:o;9746:536::-;4538:12;;;:52;;-1:-1:-1;;;4538:52:7;;4579:10;4538:52;;;3545:51:10;;;;-1:-1:-1;;;;;4538:12:7;;:40;;3518:18:10;;4538:52:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4530:98;;;;-1:-1:-1;;;4530:98:7;;10845:2:10;4530:98:7;;;10827:21:10;10884:2;10864:18;;;10857:30;10923:34;10903:18;;;10896:62;-1:-1:-1;;;10974:18:10;;;10967:31;11015:19;;4530:98:7;10643:397:10;4530:98:7;9868:21:::1;9892:14:::0;;;:8:::1;:14;::::0;;;;;;;-1:-1:-1;;;;;9892:21:7;::::1;::::0;;;;;;;10022::::1;::::0;::::1;::::0;10047:15:::1;-1:-1:-1::0;10022:40:7::1;10014:49;;;::::0;::::1;;10073:21;::::0;::::1;:41:::0;;;;10238:20:::1;;:37:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;10238:37:7;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;;10238:37:7::1;10264:10;10238:37;::::0;;-1:-1:-1;;9746:536:7:o;3405:215:0:-;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:0;::::1;3485:91;;3534:31;::::0;-1:-1:-1;;;3534:31:0;;3562:1:::1;3534:31;::::0;::::1;3545:51:10::0;3518:18;;3534:31:0::1;3385:217:10::0;3485:91:0::1;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;15820:548:7:-;15930:17;15949;15982:26;16025:5;:12;16011:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16011:27:7;;15982:56;;16048:26;16091:5;:12;16077:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16077:27:7;;16048:56;;16176:6;16171:153;16192:5;:12;16188:1;:16;16171:153;;;16239:24;16249:3;16254:5;16260:1;16254:8;;;;;;;;:::i;:::-;;;;;;;16239:9;:24::i;:::-;16225:8;16234:1;16225:11;;;;;;;;:::i;:::-;;;;;;:38;;;;;16291:22;16299:3;16304:5;16310:1;16304:8;;;;;;;;:::i;:::-;;;;;;;16291:7;:22::i;:::-;16277:8;16286:1;16277:11;;;;;;;;:::i;:::-;;;;;;;;;;:36;16206:3;;16171:153;;;-1:-1:-1;16342:8:7;;;;-1:-1:-1;15820:548:7;-1:-1:-1;;;15820:548:7:o;2658:162:0:-;966:10:2;2717:7:0;1313:22;2570:8;-1:-1:-1;;;;;2570:8:0;;2441:144;2717:7;-1:-1:-1;;;;;2717:23:0;;2713:101;;2763:40;;-1:-1:-1;;;2763:40:0;;966:10:2;2763:40:0;;;3545:51:10;3518:18;;2763:40:0;3385:217:10;2689:175:9;2747:7;;2778:5;2782:1;2778;:5;:::i;:::-;2766:17;;2806:1;2801;:6;;2793:46;;;;-1:-1:-1;;;2793:46:9;;11247:2:10;2793:46:9;;;11229:21:10;11286:2;11266:18;;;11259:30;11325:29;11305:18;;;11298:57;11372:18;;2793:46:9;11045:351:10;2793:46:9;2856:1;2689:175;-1:-1:-1;;;2689:175:9:o;3537:215::-;3595:7;3618:1;3623;3618:6;3614:20;;-1:-1:-1;3633:1:9;3626:8;;3614:20;3644:9;3656:5;3660:1;3656;:5;:::i;:::-;3644:17;-1:-1:-1;3688:1:9;3679:5;3683:1;3644:17;3679:5;:::i;:::-;:10;3671:56;;;;-1:-1:-1;;;3671:56:9;;11998:2:10;3671:56:9;;;11980:21:10;12037:2;12017:18;;;12010:30;12076:34;12056:18;;;12049:62;-1:-1:-1;;;12127:18:10;;;12120:31;12168:19;;3671:56:9;11796:397:10;3135:155:9;3193:7;3225:1;3220;:6;;3212:49;;;;-1:-1:-1;;;3212:49:9;;12400:2:10;3212:49:9;;;12382:21:10;12439:2;12419:18;;;12412:30;12478:32;12458:18;;;12451:60;12528:18;;3212:49:9;12198:354:10;3212:49:9;3278:5;3282:1;3278;:5;:::i;4216:150::-;4274:7;4305:1;4301;:5;4293:44;;;;-1:-1:-1;;;4293:44:9;;12759:2:10;4293:44:9;;;12741:21:10;12798:2;12778:18;;;12771:30;12837:28;12817:18;;;12810:56;12883:18;;4293:44:9;12557:350:10;4293:44:9;4354:5;4358:1;4354;:5;:::i;15581:135:7:-;15653:5;;:28;;-1:-1:-1;;;15653:28:7;;-1:-1:-1;;;;;13104:32:10;;;15653:28:7;;;13086:51:10;13153:18;;;13146:34;;;15653:5:7;;;;:14;;13059:18:10;;15653:28:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;15702:7;15691;;:18;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;15581:135:7:o;1303:160:5:-;1412:43;;-1:-1:-1;;;;;13104:32:10;;;1412:43:5;;;13086:51:10;13153:18;;;13146:34;;;1385:71:5;;1405:5;;1427:14;;;;;13059:18:10;;1412:43:5;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1412:43:5;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;3774:248::-:0;1313:22;3923:8;;-1:-1:-1;;;;;;3941:19:0;;-1:-1:-1;;;;;3941:19:0;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;1702:188:5:-;1829:53;;-1:-1:-1;;;;;13449:15:10;;;1829:53:5;;;13431:34:10;13501:15;;;13481:18;;;13474:43;13533:18;;;13526:34;;;1802:81:5;;1822:5;;1844:18;;;;;13366::10;;1829:53:5;13191:375:10;1802:81:5;1702:188;;;;:::o;4059:629::-;4478:23;4504:33;-1:-1:-1;;;;;4504:27:5;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;-1:-1:-1;;;4631:40:5;;-1:-1:-1;;;;;3563:32:10;;4631:40:5;;;3545:51:10;3518:18;;4631:40:5;3385:217:10;7084:141:1;8870:21;8560:40;-1:-1:-1;;;8560:40:1;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:1;;;;;;;;;;;1980:235:0;6931:20:1;:18;:20::i;2705:151:6:-;2780:12;2811:38;2833:6;2841:4;2847:1;2780:12;3421;3435:23;3462:6;-1:-1:-1;;;;;3462:11:6;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;3180:392;-1:-1:-1;;;;;;3180:392:6:o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:6;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:6;;-1:-1:-1;;;;;3563:32:10;;5121:24:6;;;3545:51:10;3518:18;;5121:24:6;3385:217:10;5041:119:6;-1:-1:-1;5180:10:6;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:6;;;;;;;;;;;196:180:10;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:10;;196:180;-1:-1:-1;196:180:10:o;889:139::-;-1:-1:-1;;;;;972:31:10;;962:42;;952:70;;1018:1;1015;1008:12;1033:118;1119:5;1112:13;1105:21;1098:5;1095:32;1085:60;;1141:1;1138;1131:12;1156:472;1244:6;1252;1260;1313:2;1301:9;1292:7;1288:23;1284:32;1281:52;;;1329:1;1326;1319:12;1281:52;1365:9;1352:23;1342:33;;1425:2;1414:9;1410:18;1397:32;1438:39;1471:5;1438:39;:::i;:::-;1496:5;-1:-1:-1;1553:2:10;1538:18;;1525:32;1566:30;1525:32;1566:30;:::i;:::-;1615:7;1605:17;;;1156:472;;;;;:::o;1633:142::-;1701:20;;1730:39;1701:20;1730:39;:::i;:::-;1633:142;;;:::o;1780:255::-;1839:6;1892:2;1880:9;1871:7;1867:23;1863:32;1860:52;;;1908:1;1905;1898:12;1860:52;1947:9;1934:23;1966:39;1999:5;1966:39;:::i;2040:248::-;2108:6;2116;2169:2;2157:9;2148:7;2144:23;2140:32;2137:52;;;2185:1;2182;2175:12;2137:52;-1:-1:-1;;2208:23:10;;;2278:2;2263:18;;;2250:32;;-1:-1:-1;2040:248:10:o;2293:705::-;2402:6;2410;2418;2426;2434;2487:3;2475:9;2466:7;2462:23;2458:33;2455:53;;;2504:1;2501;2494:12;2455:53;2543:9;2530:23;2562:39;2595:5;2562:39;:::i;:::-;2620:5;-1:-1:-1;2677:2:10;2662:18;;2649:32;2690:41;2649:32;2690:41;:::i;:::-;2750:7;-1:-1:-1;2804:2:10;2789:18;;2776:32;;-1:-1:-1;2855:2:10;2840:18;;2827:32;;-1:-1:-1;2911:3:10;2896:19;;2883:33;2925:41;2883:33;2925:41;:::i;:::-;2985:7;2975:17;;;2293:705;;;;;;;;:::o;3003:377::-;3077:6;3085;3093;3146:2;3134:9;3125:7;3121:23;3117:32;3114:52;;;3162:1;3159;3152:12;3114:52;3198:9;3185:23;3175:33;;3255:2;3244:9;3240:18;3227:32;3217:42;;3309:2;3298:9;3294:18;3281:32;3322:28;3344:5;3322:28;:::i;3815:323::-;3883:6;3891;3944:2;3932:9;3923:7;3919:23;3915:32;3912:52;;;3960:1;3957;3950:12;3912:52;3996:9;3983:23;3973:33;;4056:2;4045:9;4041:18;4028:32;4069:39;4102:5;4069:39;:::i;:::-;4127:5;4117:15;;;3815:323;;;;;:::o;4467:391::-;4544:6;4552;4560;4613:2;4601:9;4592:7;4588:23;4584:32;4581:52;;;4629:1;4626;4619:12;4581:52;4665:9;4652:23;4642:33;;4725:2;4714:9;4710:18;4697:32;4738:39;4771:5;4738:39;:::i;:::-;4467:391;;4796:5;;-1:-1:-1;;;4848:2:10;4833:18;;;;4820:32;;4467:391::o;5093:127::-;5154:10;5149:3;5145:20;5142:1;5135:31;5185:4;5182:1;5175:15;5209:4;5206:1;5199:15;5225:1191;5318:6;5326;5379:2;5367:9;5358:7;5354:23;5350:32;5347:52;;;5395:1;5392;5385:12;5347:52;5435:9;5422:23;5464:18;5505:2;5497:6;5494:14;5491:34;;;5521:1;5518;5511:12;5491:34;5559:6;5548:9;5544:22;5534:32;;5604:7;5597:4;5593:2;5589:13;5585:27;5575:55;;5626:1;5623;5616:12;5575:55;5662:2;5649:16;5684:4;5707:2;5703;5700:10;5697:36;;;5713:18;;:::i;:::-;5759:2;5756:1;5752:10;5791:2;5785:9;5854:2;5850:7;5845:2;5841;5837:11;5833:25;5825:6;5821:38;5909:6;5897:10;5894:22;5889:2;5877:10;5874:18;5871:46;5868:72;;;5920:18;;:::i;:::-;5956:2;5949:22;6006:18;;;6040:15;;;;-1:-1:-1;6082:11:10;;;6078:20;;;6110:19;;;6107:39;;;6142:1;6139;6132:12;6107:39;6166:11;;;;6186:148;6202:6;6197:3;6194:15;6186:148;;;6268:23;6287:3;6268:23;:::i;:::-;6256:36;;6219:12;;;;6312;;;;6186:148;;;6353:6;6391:18;;;;6378:32;;-1:-1:-1;;;;;;;5225:1191:10:o;6421:439::-;6474:3;6512:5;6506:12;6539:6;6534:3;6527:19;6565:4;6594;6589:3;6585:14;6578:21;;6633:4;6626:5;6622:16;6656:1;6666:169;6680:6;6677:1;6674:13;6666:169;;;6741:13;;6729:26;;6775:12;;;;6810:15;;;;6702:1;6695:9;6666:169;;;-1:-1:-1;6851:3:10;;6421:439;-1:-1:-1;;;;;6421:439:10:o;6865:465::-;7122:2;7111:9;7104:21;7085:4;7148:56;7200:2;7189:9;7185:18;7177:6;7148:56;:::i;:::-;7252:9;7244:6;7240:22;7235:2;7224:9;7220:18;7213:50;7280:44;7317:6;7309;7280:44;:::i;:::-;7272:52;6865:465;-1:-1:-1;;;;;6865:465:10:o;7335:127::-;7396:10;7391:3;7387:20;7384:1;7377:31;7427:4;7424:1;7417:15;7451:4;7448:1;7441:15;7467:128;7534:9;;;7555:11;;;7552:37;;;7569:18;;:::i;7600:127::-;7661:10;7656:3;7652:20;7649:1;7642:31;7692:4;7689:1;7682:15;7716:4;7713:1;7706:15;10263:125;10328:9;;;10349:10;;;10346:36;;;10362:18;;:::i;10393:245::-;10460:6;10513:2;10501:9;10492:7;10488:23;10484:32;10481:52;;;10529:1;10526;10519:12;10481:52;10561:9;10555:16;10580:28;10602:5;10580:28;:::i;11401:168::-;11474:9;;;11505;;11522:15;;;11516:22;;11502:37;11492:71;;11543:18;;:::i;11574:217::-;11614:1;11640;11630:132;;11684:10;11679:3;11675:20;11672:1;11665:31;11719:4;11716:1;11709:15;11747:4;11744:1;11737:15;11630:132;-1:-1:-1;11776:9:10;;11574:217::o;13571:412::-;13700:3;13738:6;13732:13;13763:1;13773:129;13787:6;13784:1;13781:13;13773:129;;;13885:4;13869:14;;;13865:25;;13859:32;13846:11;;;13839:53;13802:12;13773:129;;;-1:-1:-1;13957:1:10;13921:16;;13946:13;;;-1:-1:-1;13921:16:10;13571:412;-1:-1:-1;13571:412:10:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1476000",
								"executionCost": "1539",
								"totalCost": "1477539"
							},
							"external": {
								"add(uint256,address,bool)": "infinite",
								"compound(uint256)": "infinite",
								"deposit(uint256,uint256)": "infinite",
								"deposited(uint256,address)": "2707",
								"emergencyWithdraw(uint256)": "infinite",
								"endTimestamp()": "2372",
								"erc20()": "2381",
								"fund(uint256)": "infinite",
								"getPendingAndDepositedForUsers(address[],uint256)": "infinite",
								"initialize(address,address,uint256,uint256,address)": "infinite",
								"massUpdatePools()": "infinite",
								"owner()": "2398",
								"paidOut()": "2328",
								"pending(uint256,address)": "infinite",
								"poolInfo(uint256)": "13257",
								"poolLength()": "2316",
								"renounceOwnership()": "infinite",
								"rewardPerSecond()": "2373",
								"salesFactory()": "2402",
								"set(uint256,uint256,bool)": "infinite",
								"setSalesFactory(address)": "26885",
								"setTokensUnlockTime(uint256,address,uint256)": "infinite",
								"startTimestamp()": "2327",
								"totalAllocPoint()": "2329",
								"totalPending()": "infinite",
								"totalRewards()": "2352",
								"transferOwnership(address)": "infinite",
								"updatePool(uint256)": "infinite",
								"userInfo(uint256,address)": "6933",
								"withdraw(uint256,uint256)": "infinite"
							},
							"internal": {
								"erc20Transfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 336,
									"end": 16372,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 336,
									"end": 16372,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 336,
									"end": 16372,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 336,
									"end": 16372,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 336,
									"end": 16372,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 336,
									"end": 16372,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 336,
									"end": 16372,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 336,
									"end": 16372,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 336,
									"end": 16372,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 16372,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 336,
									"end": 16372,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 336,
									"end": 16372,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 336,
									"end": 16372,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 336,
									"end": 16372,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 336,
									"end": 16372,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 336,
									"end": 16372,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 336,
									"end": 16372,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 336,
									"end": 16372,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 16372,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 336,
									"end": 16372,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 16372,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203049d4d7f6ab6eeb7a3c8f4dcd6e72906c35301870d43fa6f875c73f174cbee064736f6c63430008180033",
									".code": [
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "785E9E86"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "CA1D209D"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "E6FD48BC"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "E6FD48BC"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "ED95F07F"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "FCFC1B14"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "CA1D209D"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "E2BBB158"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "E4C75C27"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "E6F04ACC"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "93F1A40B"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "93F1A40B"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "A2383106"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "A85ADEAB"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "AA5F7E26"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "785E9E86"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "8F10369A"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "441A3E70"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "5C76CA2D"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "5C76CA2D"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "630B5BA1"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "64482F79"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "441A3E70"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "51EB05A6"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "5312EA8E"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "57FB25CC"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "17CAF6F1"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "17CAF6F1"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "1EAAA045"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "3DFCB861"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "3F90916A"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "81E3EDA"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "E15561A"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "1526FE27"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 336,
											"end": 16372,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5620,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5527,
											"end": 5620,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5598,
											"end": 5606,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5598,
											"end": 5613,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5620,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5527,
											"end": 5620,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5620,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5527,
											"end": 5620,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5527,
											"end": 5620,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 5527,
											"end": 5620,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5620,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5527,
											"end": 5620,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5620,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5620,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5620,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5620,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5620,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3227,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3200,
											"end": 3227,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3200,
											"end": 3227,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3200,
											"end": 3227,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3227,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3227,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 3390,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 3390,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 672,
											"end": 704,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 672,
											"end": 704,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 672,
											"end": 704,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 654,
											"end": 705,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 654,
											"end": 705,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 736,
											"end": 738,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 721,
											"end": 739,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 721,
											"end": 739,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 714,
											"end": 748,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 714,
											"end": 748,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 714,
											"end": 748,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 714,
											"end": 748,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 764,
											"end": 782,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 764,
											"end": 782,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 764,
											"end": 782,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 757,
											"end": 791,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 757,
											"end": 791,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 757,
											"end": 791,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 757,
											"end": 791,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 822,
											"end": 824,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 807,
											"end": 825,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 807,
											"end": 825,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 800,
											"end": 834,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 865,
											"end": 868,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 850,
											"end": 869,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 850,
											"end": 869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 843,
											"end": 878,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 641,
											"end": 644,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 381,
											"end": 884,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3733,
											"end": 3763,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3733,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3733,
											"end": 3763,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3733,
											"end": 3763,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3763,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3763,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6325,
											"end": 6919,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 6325,
											"end": 6919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6325,
											"end": 6919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 6325,
											"end": 6919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 6325,
											"end": 6919,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6325,
											"end": 6919,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6325,
											"end": 6919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 6325,
											"end": 6919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6325,
											"end": 6919,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 6325,
											"end": 6919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6325,
											"end": 6919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 6325,
											"end": 6919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6325,
											"end": 6919,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 6325,
											"end": 6919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6325,
											"end": 6919,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 5322,
											"end": 5495,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 5322,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5322,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 5322,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 5322,
											"end": 5495,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5322,
											"end": 5495,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5322,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 5322,
											"end": 5495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5322,
											"end": 5495,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 5322,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5322,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 5322,
											"end": 5495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9102,
											"end": 9425,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 9102,
											"end": 9425,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9102,
											"end": 9425,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9102,
											"end": 9425,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 9102,
											"end": 9425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12610,
											"end": 13823,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 12610,
											"end": 13823,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12610,
											"end": 13823,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 12610,
											"end": 13823,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 12610,
											"end": 13823,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 12610,
											"end": 13823,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 12610,
											"end": 13823,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 12610,
											"end": 13823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12610,
											"end": 13823,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 12610,
											"end": 13823,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12610,
											"end": 13823,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 12610,
											"end": 13823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10425,
											"end": 11316,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 10425,
											"end": 11316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10425,
											"end": 11316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 10425,
											"end": 11316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 10425,
											"end": 11316,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 10425,
											"end": 11316,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10425,
											"end": 11316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 10425,
											"end": 11316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10425,
											"end": 11316,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 10425,
											"end": 11316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10425,
											"end": 11316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 10425,
											"end": 11316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14779,
											"end": 15482,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 14779,
											"end": 15482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14779,
											"end": 15482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 14779,
											"end": 15482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 14779,
											"end": 15482,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 14779,
											"end": 15482,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 14779,
											"end": 15482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 14779,
											"end": 15482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14779,
											"end": 15482,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 14779,
											"end": 15482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14779,
											"end": 15482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 14779,
											"end": 15482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4652,
											"end": 5142,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 4652,
											"end": 5142,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4652,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 4652,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 4652,
											"end": 5142,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4652,
											"end": 5142,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4652,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 4652,
											"end": 5142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4652,
											"end": 5142,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 4652,
											"end": 5142,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4652,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4652,
											"end": 5142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2999,
											"end": 3021,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 2999,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2999,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2999,
											"end": 3021,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2999,
											"end": 3021,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2999,
											"end": 3021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2999,
											"end": 3021,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9565,
											"end": 9740,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 9565,
											"end": 9740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9565,
											"end": 9740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 9565,
											"end": 9740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 9565,
											"end": 9740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7084,
											"end": 7382,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 7084,
											"end": 7382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7084,
											"end": 7382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 7084,
											"end": 7382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 7084,
											"end": 7382,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7084,
											"end": 7382,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7084,
											"end": 7382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 7084,
											"end": 7382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7084,
											"end": 7382,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 7084,
											"end": 7382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7084,
											"end": 7382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 7084,
											"end": 7382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2877,
											"end": 2896,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 2877,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2877,
											"end": 2896,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 2896,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2877,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 2877,
											"end": 2896,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2877,
											"end": 2896,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2877,
											"end": 2896,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2877,
											"end": 2896,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2877,
											"end": 2896,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 2877,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2877,
											"end": 2896,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2877,
											"end": 2896,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3563,
											"end": 3595,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3563,
											"end": 3595,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3563,
											"end": 3595,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3545,
											"end": 3596,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3545,
											"end": 3596,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3533,
											"end": 3535,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3518,
											"end": 3536,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2877,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 3385,
											"end": 3602,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3129,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3099,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3099,
											"end": 3129,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3099,
											"end": 3129,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3099,
											"end": 3129,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3099,
											"end": 3129,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 3513,
											"end": 3577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4345,
											"end": 4370,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4345,
											"end": 4370,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4345,
											"end": 4370,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4401,
											"end": 4403,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4386,
											"end": 4404,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4386,
											"end": 4404,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4429,
											"end": 4447,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4429,
											"end": 4447,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4429,
											"end": 4447,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4422,
											"end": 4456,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4333,
											"end": 4335,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4318,
											"end": 4336,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3513,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4143,
											"end": 4462,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7441,
											"end": 7609,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 7441,
											"end": 7609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7441,
											"end": 7609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7441,
											"end": 7609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 7441,
											"end": 7609,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7441,
											"end": 7609,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7441,
											"end": 7609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 7441,
											"end": 7609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7441,
											"end": 7609,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 7441,
											"end": 7609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7441,
											"end": 7609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 7441,
											"end": 7609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13907,
											"end": 14654,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13907,
											"end": 14654,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13907,
											"end": 14654,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 13907,
											"end": 14654,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 13907,
											"end": 14654,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 13907,
											"end": 14654,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13907,
											"end": 14654,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 13907,
											"end": 14654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13907,
											"end": 14654,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 13907,
											"end": 14654,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13907,
											"end": 14654,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 13907,
											"end": 14654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5706,
											"end": 6019,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 5706,
											"end": 6019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5706,
											"end": 6019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 5706,
											"end": 6019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 5706,
											"end": 6019,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5706,
											"end": 6019,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5706,
											"end": 6019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 5706,
											"end": 6019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5706,
											"end": 6019,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 5706,
											"end": 6019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5706,
											"end": 6019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 5706,
											"end": 6019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11427,
											"end": 12567,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 11427,
											"end": 12567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11427,
											"end": 12567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 11427,
											"end": 12567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 11427,
											"end": 12567,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 11427,
											"end": 12567,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11427,
											"end": 12567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 11427,
											"end": 12567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11427,
											"end": 12567,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 11427,
											"end": 12567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11427,
											"end": 12567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 11427,
											"end": 12567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7701,
											"end": 8574,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 7701,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7701,
											"end": 8574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7701,
											"end": 8574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 7701,
											"end": 8574,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7701,
											"end": 8574,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7701,
											"end": 8574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 7701,
											"end": 8574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7701,
											"end": 8574,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 7701,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7701,
											"end": 8574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 7701,
											"end": 8574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9746,
											"end": 10282,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 9746,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9746,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 9746,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 9746,
											"end": 10282,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9746,
											"end": 10282,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9746,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 9746,
											"end": 10282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9746,
											"end": 10282,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 9746,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9746,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 9746,
											"end": 10282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3868,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 3839,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3839,
											"end": 3868,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3839,
											"end": 3868,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3868,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3868,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3304,
											"end": 3337,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 3304,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3304,
											"end": 3337,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3304,
											"end": 3337,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3304,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 3304,
											"end": 3337,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3304,
											"end": 3337,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3304,
											"end": 3337,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3304,
											"end": 3337,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15820,
											"end": 16368,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 15820,
											"end": 16368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15820,
											"end": 16368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 15820,
											"end": 16368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 15820,
											"end": 16368,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 15820,
											"end": 16368,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15820,
											"end": 16368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 15820,
											"end": 16368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15820,
											"end": 16368,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 15820,
											"end": 16368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15820,
											"end": 16368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 15820,
											"end": 16368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15820,
											"end": 16368,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 15820,
											"end": 16368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15820,
											"end": 16368,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15820,
											"end": 16368,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 15820,
											"end": 16368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 15820,
											"end": 16368,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15820,
											"end": 16368,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15820,
											"end": 16368,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15820,
											"end": 16368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 15820,
											"end": 16368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6325,
											"end": 6919,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 6325,
											"end": 6919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 6436,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6421,
											"end": 6480,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6421,
											"end": 6480,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 6421,
											"end": 6480,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6452,
											"end": 6469,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 6452,
											"end": 6467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 6452,
											"end": 6469,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6452,
											"end": 6469,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 6452,
											"end": 6469,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6489,
											"end": 6516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6537,
											"end": 6551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6537,
											"end": 6551,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6519,
											"end": 6534,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 6519,
											"end": 6551,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6519,
											"end": 6586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 6519,
											"end": 6586,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6572,
											"end": 6586,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6519,
											"end": 6586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 6519,
											"end": 6586,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6519,
											"end": 6586,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 6519,
											"end": 6586,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6554,
											"end": 6569,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 6519,
											"end": 6586,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 6519,
											"end": 6586,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6614,
											"end": 6629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 6614,
											"end": 6629,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6489,
											"end": 6586,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6489,
											"end": 6586,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6614,
											"end": 6646,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 6614,
											"end": 6646,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6634,
											"end": 6645,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6614,
											"end": 6633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 6614,
											"end": 6646,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6614,
											"end": 6646,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 6614,
											"end": 6646,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6596,
											"end": 6611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 6596,
											"end": 6646,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6712,
											"end": 6902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6902,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 6712,
											"end": 6902,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6902,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6902,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6902,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6712,
											"end": 6902,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6902,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6902,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6902,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6902,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6712,
											"end": 6902,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6902,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6902,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6902,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6902,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6902,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6902,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6902,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6902,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6902,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6902,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6712,
											"end": 6902,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6712,
											"end": 6902,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6902,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6902,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6902,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6902,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6902,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 6712,
											"end": 6902,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6902,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6902,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6902,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6902,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "PUSH",
											"source": 7,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6685,
											"end": 6912,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "PUSH",
											"source": 7,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB1"
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "PUSH",
											"source": 7,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB2"
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "PUSH",
											"source": 7,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB3"
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "PUSH",
											"source": 7,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB4"
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6912,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6325,
											"end": 6919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5322,
											"end": 5495,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 5322,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5407,
											"end": 5434,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5434,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5399,
											"end": 5435,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 5399,
											"end": 5435,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5399,
											"end": 5435,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5399,
											"end": 5435,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5399,
											"end": 5435,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5399,
											"end": 5435,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 5399,
											"end": 5435,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5445,
											"end": 5488,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5488,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5445,
											"end": 5488,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5445,
											"end": 5488,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5488,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5488,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5488,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5488,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5488,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5488,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5322,
											"end": 5495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9102,
											"end": 9425,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 9102,
											"end": 9425,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9149,
											"end": 9156,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9191,
											"end": 9205,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 9191,
											"end": 9205,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9172,
											"end": 9187,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 9172,
											"end": 9205,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9168,
											"end": 9240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 9168,
											"end": 9240,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9228,
											"end": 9229,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9228,
											"end": 9229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9102,
											"end": 9425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9168,
											"end": 9240,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 9168,
											"end": 9240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9250,
											"end": 9271,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9292,
											"end": 9304,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 9292,
											"end": 9304,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9274,
											"end": 9289,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 9274,
											"end": 9304,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9274,
											"end": 9337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 9274,
											"end": 9337,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9325,
											"end": 9337,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 9325,
											"end": 9337,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9274,
											"end": 9337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 9274,
											"end": 9337,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9274,
											"end": 9337,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 9274,
											"end": 9337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9307,
											"end": 9322,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 9274,
											"end": 9337,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 9274,
											"end": 9337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9250,
											"end": 9337,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9250,
											"end": 9337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9354,
											"end": 9418,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 9410,
											"end": 9417,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9410,
											"end": 9417,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9354,
											"end": 9405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 9390,
											"end": 9404,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 9390,
											"end": 9404,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9374,
											"end": 9387,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9374,
											"end": 9404,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 9374,
											"end": 9404,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9374,
											"end": 9404,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9374,
											"end": 9404,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 9374,
											"end": 9404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9374,
											"end": 9404,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 9374,
											"end": 9404,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9354,
											"end": 9369,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 9354,
											"end": 9369,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9354,
											"end": 9369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9354,
											"end": 9373,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 9354,
											"end": 9405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9354,
											"end": 9405,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 9354,
											"end": 9405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9354,
											"end": 9409,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9354,
											"end": 9409,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 9354,
											"end": 9418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9354,
											"end": 9418,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 9354,
											"end": 9418,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9347,
											"end": 9418,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9347,
											"end": 9418,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9347,
											"end": 9418,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9102,
											"end": 9425,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9102,
											"end": 9425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12610,
											"end": 13823,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 12610,
											"end": 13823,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12676,
											"end": 12697,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12700,
											"end": 12708,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 12709,
											"end": 12713,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12700,
											"end": 12714,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12700,
											"end": 12714,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 12700,
											"end": 12714,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12700,
											"end": 12714,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 12700,
											"end": 12714,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 12700,
											"end": 12714,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12700,
											"end": 12714,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 12700,
											"end": 12714,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 12700,
											"end": 12714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12700,
											"end": 12714,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 12700,
											"end": 12714,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12700,
											"end": 12714,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12700,
											"end": 12714,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12700,
											"end": 12714,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12700,
											"end": 12714,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12700,
											"end": 12714,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12700,
											"end": 12714,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12700,
											"end": 12714,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12700,
											"end": 12714,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 12748,
											"end": 12762,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 12748,
											"end": 12762,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12748,
											"end": 12762,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12748,
											"end": 12756,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 12748,
											"end": 12762,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12748,
											"end": 12762,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12748,
											"end": 12762,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12748,
											"end": 12762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12748,
											"end": 12762,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12748,
											"end": 12762,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 12763,
											"end": 12773,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 12748,
											"end": 12774,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 12748,
											"end": 12774,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12748,
											"end": 12774,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12748,
											"end": 12774,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12748,
											"end": 12774,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12748,
											"end": 12774,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12748,
											"end": 12774,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 12845,
											"end": 12866,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 12845,
											"end": 12866,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12845,
											"end": 12866,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12845,
											"end": 12866,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 12700,
											"end": 12714,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 12700,
											"end": 12714,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12700,
											"end": 12714,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12700,
											"end": 12714,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 12700,
											"end": 12714,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12700,
											"end": 12714,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12700,
											"end": 12714,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12700,
											"end": 12714,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12870,
											"end": 12885,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 12845,
											"end": 12885,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12837,
											"end": 12939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 12837,
											"end": 12939,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12837,
											"end": 12939,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12837,
											"end": 12939,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12837,
											"end": 12939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12837,
											"end": 12939,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7934,
											"end": 7936,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12837,
											"end": 12939,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 12837,
											"end": 12939,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12837,
											"end": 12939,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7916,
											"end": 7937,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7973,
											"end": 7975,
											"name": "PUSH",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 7953,
											"end": 7971,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7953,
											"end": 7971,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7953,
											"end": 7971,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7946,
											"end": 7976,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8012,
											"end": 8046,
											"name": "PUSH",
											"source": 10,
											"value": "4C6173742073616C6520796F75207265676973746572656420666F7220697320"
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7985,
											"end": 8047,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3737BA103334B734B9B432B2103CB2BA17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8063,
											"end": 8081,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8063,
											"end": 8081,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8063,
											"end": 8081,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8103,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8120,
											"end": 8139,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 8120,
											"end": 8139,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12837,
											"end": 12939,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 12837,
											"end": 12939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12837,
											"end": 12939,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12837,
											"end": 12939,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12837,
											"end": 12939,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12837,
											"end": 12939,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12837,
											"end": 12939,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12837,
											"end": 12939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12837,
											"end": 12939,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12837,
											"end": 12939,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 12837,
											"end": 12939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12957,
											"end": 12968,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12957,
											"end": 12968,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 12957,
											"end": 12979,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 12957,
											"end": 12979,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12949,
											"end": 13026,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 12949,
											"end": 13026,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12949,
											"end": 13026,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12949,
											"end": 13026,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12949,
											"end": 13026,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12949,
											"end": 13026,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8352,
											"end": 8354,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12949,
											"end": 13026,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 12949,
											"end": 13026,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12949,
											"end": 13026,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8334,
											"end": 8355,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8391,
											"end": 8393,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8364,
											"end": 8394,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8430,
											"end": 8464,
											"name": "PUSH",
											"source": 10,
											"value": "77697468647261773A2063616E2774207769746864726177206D6F7265207468"
										},
										{
											"begin": 8410,
											"end": 8428,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8410,
											"end": 8428,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8410,
											"end": 8428,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8403,
											"end": 8465,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "185B8819195C1BDCDA5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8481,
											"end": 8499,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8481,
											"end": 8499,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8481,
											"end": 8499,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8474,
											"end": 8514,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8550,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 8531,
											"end": 8550,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12949,
											"end": 13026,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 8150,
											"end": 8556,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12949,
											"end": 13026,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 12949,
											"end": 13026,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13060,
											"end": 13076,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 13071,
											"end": 13075,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13060,
											"end": 13070,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 13060,
											"end": 13076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13060,
											"end": 13076,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 13060,
											"end": 13076,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13128,
											"end": 13149,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13152,
											"end": 13221,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 13205,
											"end": 13209,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13205,
											"end": 13220,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 13205,
											"end": 13220,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13205,
											"end": 13220,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13152,
											"end": 13200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C097CE7BC90715B34B9F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13152,
											"end": 13190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 13168,
											"end": 13172,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 13168,
											"end": 13189,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 13168,
											"end": 13189,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13168,
											"end": 13189,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13152,
											"end": 13156,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 13152,
											"end": 13163,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13152,
											"end": 13163,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13152,
											"end": 13163,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13152,
											"end": 13167,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 13152,
											"end": 13167,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13152,
											"end": 13190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13152,
											"end": 13190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13152,
											"end": 13190,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13152,
											"end": 13190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13152,
											"end": 13190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13152,
											"end": 13190,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 13152,
											"end": 13190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13152,
											"end": 13194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13152,
											"end": 13194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 13152,
											"end": 13200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13152,
											"end": 13221,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 13152,
											"end": 13221,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13128,
											"end": 13221,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13128,
											"end": 13221,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13275,
											"end": 13315,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 13289,
											"end": 13299,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 13301,
											"end": 13314,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13275,
											"end": 13288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 13275,
											"end": 13315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13275,
											"end": 13315,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 13275,
											"end": 13315,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13339,
											"end": 13350,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13339,
											"end": 13350,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13339,
											"end": 13363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 13339,
											"end": 13363,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13355,
											"end": 13362,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13339,
											"end": 13354,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 13339,
											"end": 13363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13339,
											"end": 13363,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 13339,
											"end": 13363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13325,
											"end": 13363,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13325,
											"end": 13363,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13325,
											"end": 13363,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 13407,
											"end": 13428,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 13407,
											"end": 13428,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13407,
											"end": 13428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13407,
											"end": 13428,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13391,
											"end": 13439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 13391,
											"end": 13439,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C097CE7BC90715B34B9F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13434,
											"end": 13438,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13391,
											"end": 13429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 13391,
											"end": 13429,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13325,
											"end": 13363,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13391,
											"end": 13406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 13391,
											"end": 13429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13391,
											"end": 13439,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 13391,
											"end": 13439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13373,
											"end": 13388,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 13373,
											"end": 13388,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13373,
											"end": 13388,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13373,
											"end": 13439,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 13496,
											"end": 13508,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13496,
											"end": 13508,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13496,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 13496,
											"end": 13551,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13496,
											"end": 13508,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13530,
											"end": 13540,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 13543,
											"end": 13550,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 13496,
											"end": 13521,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 13496,
											"end": 13551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13496,
											"end": 13551,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 13496,
											"end": 13551,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13582,
											"end": 13600,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13582,
											"end": 13600,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13582,
											"end": 13600,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13582,
											"end": 13600,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13582,
											"end": 13613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 13582,
											"end": 13613,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13605,
											"end": 13612,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13582,
											"end": 13604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 13582,
											"end": 13613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13582,
											"end": 13613,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 13582,
											"end": 13613,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13561,
											"end": 13579,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13561,
											"end": 13579,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13561,
											"end": 13579,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13561,
											"end": 13613,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 13628,
											"end": 13639,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13628,
											"end": 13639,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13624,
											"end": 13735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 13624,
											"end": 13735,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13723,
											"end": 13724,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13699,
											"end": 13720,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 13699,
											"end": 13720,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13699,
											"end": 13720,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13699,
											"end": 13724,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 13624,
											"end": 13735,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 13624,
											"end": 13735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13781,
											"end": 13816,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13781,
											"end": 13816,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13802,
											"end": 13806,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13802,
											"end": 13806,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13790,
											"end": 13800,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 13790,
											"end": 13800,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13781,
											"end": 13816,
											"name": "PUSH",
											"source": 7,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 13781,
											"end": 13816,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13781,
											"end": 13816,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 13781,
											"end": 13816,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13781,
											"end": 13816,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13781,
											"end": 13816,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 13781,
											"end": 13816,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13781,
											"end": 13816,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13781,
											"end": 13816,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13781,
											"end": 13816,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13781,
											"end": 13816,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 12666,
											"end": 13823,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12666,
											"end": 13823,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12666,
											"end": 13823,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12610,
											"end": 13823,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12610,
											"end": 13823,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12610,
											"end": 13823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10425,
											"end": 11316,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 10425,
											"end": 11316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10476,
											"end": 10497,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10500,
											"end": 10508,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 10509,
											"end": 10513,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10500,
											"end": 10514,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10500,
											"end": 10514,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10500,
											"end": 10514,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10500,
											"end": 10514,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10500,
											"end": 10514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 10500,
											"end": 10514,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10500,
											"end": 10514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 10500,
											"end": 10514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 10500,
											"end": 10514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10500,
											"end": 10514,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 10500,
											"end": 10514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10500,
											"end": 10514,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10500,
											"end": 10514,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10500,
											"end": 10514,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10500,
											"end": 10514,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10500,
											"end": 10514,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10500,
											"end": 10514,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 10500,
											"end": 10514,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10500,
											"end": 10514,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 10500,
											"end": 10514,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 10500,
											"end": 10514,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10476,
											"end": 10514,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10476,
											"end": 10514,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10525,
											"end": 10546,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10567,
											"end": 10579,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 10567,
											"end": 10579,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10549,
											"end": 10564,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 10549,
											"end": 10579,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10549,
											"end": 10612,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 10549,
											"end": 10612,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10600,
											"end": 10612,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 10600,
											"end": 10612,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10549,
											"end": 10612,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 10549,
											"end": 10612,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10549,
											"end": 10612,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 10549,
											"end": 10612,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10582,
											"end": 10597,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 10549,
											"end": 10612,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 10549,
											"end": 10612,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10525,
											"end": 10612,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10525,
											"end": 10612,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10644,
											"end": 10648,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10644,
											"end": 10668,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 10644,
											"end": 10668,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10644,
											"end": 10668,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10627,
											"end": 10640,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10627,
											"end": 10668,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10623,
											"end": 10735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 10623,
											"end": 10735,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10700,
											"end": 10724,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 10700,
											"end": 10724,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10700,
											"end": 10724,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10700,
											"end": 10724,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10623,
											"end": 10735,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 10623,
											"end": 10735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10764,
											"end": 10782,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10764,
											"end": 10782,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10764,
											"end": 10782,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10764,
											"end": 10782,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10745,
											"end": 10761,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10797,
											"end": 10810,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10797,
											"end": 10810,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10797,
											"end": 10810,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10793,
											"end": 10897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 10793,
											"end": 10897,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10826,
											"end": 10850,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 10826,
											"end": 10850,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10826,
											"end": 10850,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10826,
											"end": 10850,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10826,
											"end": 10866,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10425,
											"end": 11316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10793,
											"end": 10897,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 10793,
											"end": 10897,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10907,
											"end": 10926,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10929,
											"end": 10972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 10947,
											"end": 10951,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10947,
											"end": 10971,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 10947,
											"end": 10971,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10947,
											"end": 10971,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10929,
											"end": 10942,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10929,
											"end": 10946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 10929,
											"end": 10946,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10929,
											"end": 10972,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10929,
											"end": 10972,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10929,
											"end": 10972,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10929,
											"end": 10972,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10929,
											"end": 10972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10929,
											"end": 10972,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 10929,
											"end": 10972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10907,
											"end": 10972,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10907,
											"end": 10972,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10982,
											"end": 11001,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11004,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 11062,
											"end": 11077,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 11062,
											"end": 11077,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11004,
											"end": 11057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 11041,
											"end": 11045,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 11041,
											"end": 11056,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11041,
											"end": 11056,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11041,
											"end": 11056,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11004,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 11020,
											"end": 11035,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 11020,
											"end": 11035,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11004,
											"end": 11015,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 11004,
											"end": 11019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 11004,
											"end": 11019,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11004,
											"end": 11036,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11004,
											"end": 11036,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11004,
											"end": 11036,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11004,
											"end": 11036,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11004,
											"end": 11036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11004,
											"end": 11036,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 11004,
											"end": 11036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11004,
											"end": 11040,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11004,
											"end": 11040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 11004,
											"end": 11057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11004,
											"end": 11078,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 11004,
											"end": 11078,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10982,
											"end": 11078,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11153,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 11179,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 11205,
											"end": 11213,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11179,
											"end": 11200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 10982,
											"end": 11078,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C097CE7BC90715B34B9F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11179,
											"end": 11194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 11179,
											"end": 11200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11179,
											"end": 11214,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 11179,
											"end": 11214,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11153,
											"end": 11174,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 11153,
											"end": 11174,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 11153,
											"end": 11174,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11153,
											"end": 11174,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11153,
											"end": 11174,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11153,
											"end": 11178,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 11153,
											"end": 11215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11153,
											"end": 11215,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 11153,
											"end": 11215,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11129,
											"end": 11150,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 11129,
											"end": 11150,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11129,
											"end": 11150,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11129,
											"end": 11215,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11269,
											"end": 11293,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 11269,
											"end": 11293,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11269,
											"end": 11293,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11269,
											"end": 11293,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11269,
											"end": 11309,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10425,
											"end": 11316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14779,
											"end": 15482,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 14779,
											"end": 15482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14837,
											"end": 14858,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14861,
											"end": 14869,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 14870,
											"end": 14874,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 14861,
											"end": 14875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 14909,
											"end": 14923,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14909,
											"end": 14923,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14909,
											"end": 14923,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14909,
											"end": 14917,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 14909,
											"end": 14923,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14909,
											"end": 14923,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14909,
											"end": 14923,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14909,
											"end": 14923,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14909,
											"end": 14923,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14909,
											"end": 14923,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 14924,
											"end": 14934,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 14909,
											"end": 14935,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 14909,
											"end": 14935,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14909,
											"end": 14935,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14909,
											"end": 14935,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14909,
											"end": 14935,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14909,
											"end": 14935,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14909,
											"end": 14935,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 15006,
											"end": 15027,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 15006,
											"end": 15027,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15006,
											"end": 15027,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15006,
											"end": 15027,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15031,
											"end": 15046,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 15006,
											"end": 15046,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14998,
											"end": 15122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 14998,
											"end": 15122,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14998,
											"end": 15122,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14998,
											"end": 15122,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14998,
											"end": 15122,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14998,
											"end": 15122,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8763,
											"end": 8765,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14998,
											"end": 15122,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 14998,
											"end": 15122,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14998,
											"end": 15122,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8745,
											"end": 8766,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8802,
											"end": 8804,
											"name": "PUSH",
											"source": 10,
											"value": "3B"
										},
										{
											"begin": 8782,
											"end": 8800,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8782,
											"end": 8800,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8782,
											"end": 8800,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8775,
											"end": 8805,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8841,
											"end": 8875,
											"name": "PUSH",
											"source": 10,
											"value": "456D657267656E637920776974686472617720626C6F636B656420647572696E"
										},
										{
											"begin": 8821,
											"end": 8839,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8821,
											"end": 8839,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8821,
											"end": 8839,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8814,
											"end": 8876,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8912,
											"end": 8941,
											"name": "PUSH",
											"source": 10,
											"value": "672073616C6520616E6420636F6F6C646F776E20706572696F642E0000000000"
										},
										{
											"begin": 8892,
											"end": 8910,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8892,
											"end": 8910,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8892,
											"end": 8910,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8885,
											"end": 8942,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8959,
											"end": 8978,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 8959,
											"end": 8978,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14998,
											"end": 15122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 8561,
											"end": 8984,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14998,
											"end": 15122,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 14998,
											"end": 15122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15212,
											"end": 15223,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15212,
											"end": 15223,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 15165,
											"end": 15177,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15165,
											"end": 15177,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 15165,
											"end": 15224,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 15165,
											"end": 15224,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15165,
											"end": 15177,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15165,
											"end": 15177,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15165,
											"end": 15177,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15165,
											"end": 15177,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15199,
											"end": 15209,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 15199,
											"end": 15209,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15165,
											"end": 15190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 15165,
											"end": 15224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15165,
											"end": 15224,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 15165,
											"end": 15224,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15275,
											"end": 15286,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15275,
											"end": 15286,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 15239,
											"end": 15287,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15239,
											"end": 15287,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15269,
											"end": 15273,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15269,
											"end": 15273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15257,
											"end": 15267,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 15257,
											"end": 15267,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15239,
											"end": 15287,
											"name": "PUSH",
											"source": 7,
											"value": "BB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
										},
										{
											"begin": 15239,
											"end": 15287,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15239,
											"end": 15287,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15239,
											"end": 15287,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 15239,
											"end": 15287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15239,
											"end": 15287,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15239,
											"end": 15287,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15239,
											"end": 15287,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15239,
											"end": 15287,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 15374,
											"end": 15385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15374,
											"end": 15385,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 15351,
											"end": 15369,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15351,
											"end": 15369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15351,
											"end": 15369,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15351,
											"end": 15369,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 15351,
											"end": 15386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 15351,
											"end": 15386,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15351,
											"end": 15373,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 15351,
											"end": 15386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15351,
											"end": 15386,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 15351,
											"end": 15386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15330,
											"end": 15348,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15330,
											"end": 15348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15330,
											"end": 15348,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15330,
											"end": 15348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15330,
											"end": 15386,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15330,
											"end": 15386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15330,
											"end": 15386,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15330,
											"end": 15386,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 15410,
											"end": 15411,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15396,
											"end": 15411,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15396,
											"end": 15411,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15396,
											"end": 15411,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 15421,
											"end": 15436,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 15421,
											"end": 15436,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15421,
											"end": 15436,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15421,
											"end": 15440,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15421,
											"end": 15440,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15421,
											"end": 15440,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 15450,
											"end": 15471,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 15450,
											"end": 15471,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15450,
											"end": 15471,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15450,
											"end": 15471,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15450,
											"end": 15475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14779,
											"end": 15482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4652,
											"end": 5142,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4652,
											"end": 5142,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F92EE8A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4866,
											"end": 4890,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 4881,
											"end": 4889,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 4866,
											"end": 4880,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 4866,
											"end": 4890,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4866,
											"end": 4890,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 4866,
											"end": 4890,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4901,
											"end": 4906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4901,
											"end": 4915,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4901,
											"end": 4915,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4901,
											"end": 4915,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4901,
											"end": 4915,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 4901,
											"end": 4915,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4901,
											"end": 4915,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4901,
											"end": 4915,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4901,
											"end": 4915,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4901,
											"end": 4915,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4901,
											"end": 4915,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4901,
											"end": 4915,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4901,
											"end": 4915,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4925,
											"end": 4940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4925,
											"end": 4959,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 4925,
											"end": 4959,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4925,
											"end": 4959,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 4983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 4969,
											"end": 5001,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5001,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5001,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5011,
											"end": 5023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 5011,
											"end": 5041,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 5011,
											"end": 5041,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5011,
											"end": 5041,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5092,
											"end": 5104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5092,
											"end": 5135,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5092,
											"end": 5135,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5092,
											"end": 5135,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5092,
											"end": 5135,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 5092,
											"end": 5135,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5092,
											"end": 5135,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5092,
											"end": 5135,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5092,
											"end": 5135,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5092,
											"end": 5135,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5092,
											"end": 5135,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5092,
											"end": 5135,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5092,
											"end": 5135,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5092,
											"end": 5135,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 5092,
											"end": 5135,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5092,
											"end": 5135,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 9142,
											"end": 9192,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9142,
											"end": 9192,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9130,
											"end": 9132,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9115,
											"end": 9133,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 5142,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4652,
											"end": 5142,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4652,
											"end": 5142,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4652,
											"end": 5142,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4652,
											"end": 5142,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4652,
											"end": 5142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9565,
											"end": 9740,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 9565,
											"end": 9740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9626,
											"end": 9634,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 9626,
											"end": 9641,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9609,
											"end": 9623,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9651,
											"end": 9734,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 9651,
											"end": 9734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9679,
											"end": 9685,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9673,
											"end": 9676,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9673,
											"end": 9685,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9651,
											"end": 9734,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9651,
											"end": 9734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 9651,
											"end": 9734,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9708,
											"end": 9723,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 9719,
											"end": 9722,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9708,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 9708,
											"end": 9723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9708,
											"end": 9723,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 9708,
											"end": 9723,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9687,
											"end": 9692,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9687,
											"end": 9692,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9651,
											"end": 9734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 9651,
											"end": 9734,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9651,
											"end": 9734,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 9651,
											"end": 9734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9651,
											"end": 9734,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9599,
											"end": 9740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9565,
											"end": 9740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7084,
											"end": 7382,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 7084,
											"end": 7382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7181,
											"end": 7192,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7177,
											"end": 7236,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7177,
											"end": 7236,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 7177,
											"end": 7236,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7208,
											"end": 7225,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 7208,
											"end": 7223,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 7208,
											"end": 7225,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7208,
											"end": 7225,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 7208,
											"end": 7225,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7263,
											"end": 7326,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 7314,
											"end": 7325,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7263,
											"end": 7309,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 7283,
											"end": 7291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7292,
											"end": 7296,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7283,
											"end": 7297,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7283,
											"end": 7297,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7283,
											"end": 7297,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7283,
											"end": 7297,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7283,
											"end": 7297,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 7283,
											"end": 7297,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7283,
											"end": 7297,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 7283,
											"end": 7297,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 7283,
											"end": 7297,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7283,
											"end": 7297,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 7283,
											"end": 7297,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7283,
											"end": 7297,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7283,
											"end": 7297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7283,
											"end": 7297,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7283,
											"end": 7297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7283,
											"end": 7297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7283,
											"end": 7297,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7283,
											"end": 7297,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7283,
											"end": 7297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7283,
											"end": 7297,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 7283,
											"end": 7297,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7283,
											"end": 7308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7283,
											"end": 7308,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7283,
											"end": 7308,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7263,
											"end": 7278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7263,
											"end": 7278,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7263,
											"end": 7282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 7263,
											"end": 7282,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7263,
											"end": 7309,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7263,
											"end": 7309,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7263,
											"end": 7309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7263,
											"end": 7309,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7263,
											"end": 7309,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7263,
											"end": 7309,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 7263,
											"end": 7309,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7263,
											"end": 7313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7263,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 7263,
											"end": 7326,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7263,
											"end": 7326,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 7263,
											"end": 7326,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7245,
											"end": 7260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7245,
											"end": 7326,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7245,
											"end": 7326,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7245,
											"end": 7326,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7245,
											"end": 7326,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7375,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7345,
											"end": 7349,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7350,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7350,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7350,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7350,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7350,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 7336,
											"end": 7350,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7350,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 7336,
											"end": 7350,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 7336,
											"end": 7350,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7350,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 7336,
											"end": 7350,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7350,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7336,
											"end": 7350,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7336,
											"end": 7350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7336,
											"end": 7350,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7350,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7336,
											"end": 7350,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7350,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7336,
											"end": 7361,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7375,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7375,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7375,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7375,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7084,
											"end": 7382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7084,
											"end": 7382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7084,
											"end": 7382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7084,
											"end": 7382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7441,
											"end": 7609,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 7441,
											"end": 7609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7510,
											"end": 7517,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7567,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7553,
											"end": 7567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7553,
											"end": 7567,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7553,
											"end": 7561,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 7553,
											"end": 7567,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7553,
											"end": 7567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7553,
											"end": 7567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7553,
											"end": 7567,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7553,
											"end": 7567,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7553,
											"end": 7567,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7553,
											"end": 7567,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7553,
											"end": 7574,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7553,
											"end": 7574,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7553,
											"end": 7574,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7553,
											"end": 7574,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7553,
											"end": 7574,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7553,
											"end": 7574,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7553,
											"end": 7574,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7553,
											"end": 7574,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7553,
											"end": 7574,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7591,
											"end": 7602,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7441,
											"end": 7609,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 7441,
											"end": 7609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7441,
											"end": 7609,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7441,
											"end": 7609,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7441,
											"end": 7609,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7441,
											"end": 7609,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7441,
											"end": 7609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13907,
											"end": 14654,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 13907,
											"end": 14654,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13956,
											"end": 13977,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13980,
											"end": 13988,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 13989,
											"end": 13993,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13980,
											"end": 13994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13980,
											"end": 13994,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13980,
											"end": 13994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13980,
											"end": 13994,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 13980,
											"end": 13994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 13980,
											"end": 13994,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13980,
											"end": 13994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 13980,
											"end": 13994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 13980,
											"end": 13994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13980,
											"end": 13994,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 13980,
											"end": 13994,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13980,
											"end": 13994,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13980,
											"end": 13994,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13980,
											"end": 13994,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13980,
											"end": 13994,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13980,
											"end": 13994,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13980,
											"end": 13994,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13980,
											"end": 13994,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13980,
											"end": 13994,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 14028,
											"end": 14042,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14028,
											"end": 14042,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14028,
											"end": 14042,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14028,
											"end": 14036,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 14028,
											"end": 14042,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14028,
											"end": 14042,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14028,
											"end": 14042,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14028,
											"end": 14042,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14028,
											"end": 14042,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14028,
											"end": 14042,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 14043,
											"end": 14053,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 14028,
											"end": 14054,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 14028,
											"end": 14054,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14028,
											"end": 14054,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14028,
											"end": 14054,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14028,
											"end": 14054,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14028,
											"end": 14054,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14028,
											"end": 14054,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 13980,
											"end": 13994,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 13980,
											"end": 13994,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13980,
											"end": 13994,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13980,
											"end": 13994,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 13980,
											"end": 13994,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13980,
											"end": 13994,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13980,
											"end": 13994,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13980,
											"end": 13994,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14163,
											"end": 14179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 14174,
											"end": 14178,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14163,
											"end": 14173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 14163,
											"end": 14179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14163,
											"end": 14179,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 14163,
											"end": 14179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14190,
											"end": 14211,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14214,
											"end": 14283,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 14267,
											"end": 14271,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14267,
											"end": 14282,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 14267,
											"end": 14282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14267,
											"end": 14282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14214,
											"end": 14262,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C097CE7BC90715B34B9F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14214,
											"end": 14252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 14230,
											"end": 14234,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 14230,
											"end": 14251,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 14230,
											"end": 14251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14230,
											"end": 14251,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14214,
											"end": 14218,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 14214,
											"end": 14225,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14214,
											"end": 14225,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14214,
											"end": 14225,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14214,
											"end": 14229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 14214,
											"end": 14229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14214,
											"end": 14252,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14214,
											"end": 14252,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14214,
											"end": 14252,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14214,
											"end": 14252,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 14214,
											"end": 14252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14214,
											"end": 14283,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 14214,
											"end": 14283,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14351,
											"end": 14362,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14351,
											"end": 14362,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14190,
											"end": 14283,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14190,
											"end": 14283,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14351,
											"end": 14381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 14351,
											"end": 14381,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14190,
											"end": 14283,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14351,
											"end": 14366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 14351,
											"end": 14381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14351,
											"end": 14381,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 14351,
											"end": 14381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14337,
											"end": 14381,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14337,
											"end": 14381,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14337,
											"end": 14381,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 14425,
											"end": 14446,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 14425,
											"end": 14446,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14425,
											"end": 14446,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14425,
											"end": 14446,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14409,
											"end": 14457,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 14409,
											"end": 14457,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C097CE7BC90715B34B9F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14452,
											"end": 14456,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14409,
											"end": 14447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 14409,
											"end": 14447,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14337,
											"end": 14381,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14409,
											"end": 14424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 14409,
											"end": 14447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14409,
											"end": 14457,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 14409,
											"end": 14457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14391,
											"end": 14406,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 14391,
											"end": 14406,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14391,
											"end": 14406,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14391,
											"end": 14457,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 14531,
											"end": 14549,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 14531,
											"end": 14549,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14531,
											"end": 14549,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14531,
											"end": 14549,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14531,
											"end": 14568,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 14531,
											"end": 14568,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14554,
											"end": 14567,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14531,
											"end": 14553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 14531,
											"end": 14568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14531,
											"end": 14568,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 14531,
											"end": 14568,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14510,
											"end": 14568,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 14635,
											"end": 14646,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14635,
											"end": 14646,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14583,
											"end": 14647,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14583,
											"end": 14647,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14583,
											"end": 14647,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9781,
											"end": 9806,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9781,
											"end": 9806,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9781,
											"end": 9806,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9837,
											"end": 9839,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9822,
											"end": 9840,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9822,
											"end": 9840,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9815,
											"end": 9849,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9815,
											"end": 9849,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9815,
											"end": 9849,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9815,
											"end": 9849,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14614,
											"end": 14618,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14614,
											"end": 14618,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14602,
											"end": 14612,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 14602,
											"end": 14612,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14583,
											"end": 14647,
											"name": "PUSH",
											"source": 7,
											"value": "92F0BDF80F3916A4279540865E94EF327CF48639092106CCA4BDDC9BB1DE4A86"
										},
										{
											"begin": 14583,
											"end": 14647,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9754,
											"end": 9772,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14583,
											"end": 14647,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14583,
											"end": 14647,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 14583,
											"end": 14647,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14583,
											"end": 14647,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14583,
											"end": 14647,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14583,
											"end": 14647,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14583,
											"end": 14647,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 13946,
											"end": 14654,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13946,
											"end": 14654,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13946,
											"end": 14654,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13907,
											"end": 14654,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13907,
											"end": 14654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5706,
											"end": 6019,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 5706,
											"end": 6019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5780,
											"end": 5792,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 5780,
											"end": 5792,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5762,
											"end": 5777,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 5762,
											"end": 5792,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5754,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 5754,
											"end": 5831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5754,
											"end": 5831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5754,
											"end": 5831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5754,
											"end": 5831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5754,
											"end": 5831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10062,
											"end": 10064,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5754,
											"end": 5831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5754,
											"end": 5831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5754,
											"end": 5831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10044,
											"end": 10065,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10101,
											"end": 10103,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 10081,
											"end": 10099,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10081,
											"end": 10099,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10081,
											"end": 10099,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10074,
											"end": 10104,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10140,
											"end": 10174,
											"name": "PUSH",
											"source": 10,
											"value": "66756E643A20746F6F206C6174652C20746865206661726D20697320636C6F73"
										},
										{
											"begin": 10120,
											"end": 10138,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10120,
											"end": 10138,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10120,
											"end": 10138,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10113,
											"end": 10175,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10191,
											"end": 10209,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10191,
											"end": 10209,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10191,
											"end": 10209,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10184,
											"end": 10216,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10233,
											"end": 10252,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10233,
											"end": 10252,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5754,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 9860,
											"end": 10258,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5754,
											"end": 5831,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 5754,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5841,
											"end": 5846,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5841,
											"end": 5846,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5841,
											"end": 5908,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 5841,
											"end": 5908,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5841,
											"end": 5846,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 5882,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5893,
											"end": 5897,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 5900,
											"end": 5907,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5841,
											"end": 5863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 5841,
											"end": 5908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5841,
											"end": 5908,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 5841,
											"end": 5908,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5946,
											"end": 5961,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5946,
											"end": 5961,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 5934,
											"end": 5962,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5941,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5941,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5945,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 5934,
											"end": 5962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5962,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 5934,
											"end": 5962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5918,
											"end": 5930,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 5918,
											"end": 5930,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5918,
											"end": 5962,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5918,
											"end": 5962,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5918,
											"end": 5962,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5918,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 5918,
											"end": 5962,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5918,
											"end": 5962,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5918,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 5918,
											"end": 5962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5918,
											"end": 5962,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 5918,
											"end": 5962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5918,
											"end": 5962,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5918,
											"end": 5962,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5918,
											"end": 5962,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5987,
											"end": 5999,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5987,
											"end": 5999,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5987,
											"end": 6012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 5987,
											"end": 6012,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6004,
											"end": 6011,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5987,
											"end": 6003,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 5987,
											"end": 6012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5987,
											"end": 6012,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 5987,
											"end": 6012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5972,
											"end": 5984,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5972,
											"end": 6012,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5706,
											"end": 6019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11427,
											"end": 12567,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 11427,
											"end": 12567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11492,
											"end": 11513,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11516,
											"end": 11524,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 11525,
											"end": 11529,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11516,
											"end": 11530,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11516,
											"end": 11530,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11516,
											"end": 11530,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11516,
											"end": 11530,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 11516,
											"end": 11530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 11516,
											"end": 11530,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11516,
											"end": 11530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 11516,
											"end": 11530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 11516,
											"end": 11530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11516,
											"end": 11530,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 11516,
											"end": 11530,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11516,
											"end": 11530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11516,
											"end": 11530,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11516,
											"end": 11530,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11516,
											"end": 11530,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11516,
											"end": 11530,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11516,
											"end": 11530,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11516,
											"end": 11530,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11516,
											"end": 11530,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 11564,
											"end": 11578,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11564,
											"end": 11578,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11564,
											"end": 11578,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11564,
											"end": 11572,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 11564,
											"end": 11578,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11564,
											"end": 11578,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11564,
											"end": 11578,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11564,
											"end": 11578,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11564,
											"end": 11578,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11564,
											"end": 11578,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 11579,
											"end": 11589,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 11564,
											"end": 11590,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11564,
											"end": 11590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11564,
											"end": 11590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11564,
											"end": 11590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11564,
											"end": 11590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11564,
											"end": 11590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11564,
											"end": 11590,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 11516,
											"end": 11530,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 11516,
											"end": 11530,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11516,
											"end": 11530,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11516,
											"end": 11530,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 11516,
											"end": 11530,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11516,
											"end": 11530,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11516,
											"end": 11530,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11516,
											"end": 11530,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11625,
											"end": 11632,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11666,
											"end": 11682,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 11573,
											"end": 11577,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11666,
											"end": 11676,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 11666,
											"end": 11682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11666,
											"end": 11682,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 11666,
											"end": 11682,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11816,
											"end": 11827,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11816,
											"end": 11827,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11816,
											"end": 11831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11812,
											"end": 12005,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 11812,
											"end": 12005,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11847,
											"end": 11868,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11871,
											"end": 11940,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 11924,
											"end": 11928,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11924,
											"end": 11939,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11924,
											"end": 11939,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11924,
											"end": 11939,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11871,
											"end": 11919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C097CE7BC90715B34B9F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11871,
											"end": 11909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 11887,
											"end": 11891,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 11887,
											"end": 11908,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 11887,
											"end": 11908,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11887,
											"end": 11908,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11871,
											"end": 11875,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 11871,
											"end": 11882,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11871,
											"end": 11882,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11871,
											"end": 11882,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11871,
											"end": 11886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 11871,
											"end": 11886,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11871,
											"end": 11909,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11871,
											"end": 11909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11871,
											"end": 11909,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11871,
											"end": 11909,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11871,
											"end": 11909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11871,
											"end": 11940,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 11871,
											"end": 11940,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11847,
											"end": 11940,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11847,
											"end": 11940,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11954,
											"end": 11994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 11968,
											"end": 11978,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 11980,
											"end": 11993,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11954,
											"end": 11967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 11954,
											"end": 11994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11954,
											"end": 11994,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 11954,
											"end": 11994,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11833,
											"end": 12005,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11812,
											"end": 12005,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 11812,
											"end": 12005,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12090,
											"end": 12102,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12090,
											"end": 12102,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 12090,
											"end": 12164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 12090,
											"end": 12164,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12090,
											"end": 12102,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 12128,
											"end": 12138,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 12149,
											"end": 12153,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 12156,
											"end": 12163,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 12090,
											"end": 12119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 12090,
											"end": 12164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12090,
											"end": 12164,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 12090,
											"end": 12164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12236,
											"end": 12254,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 12236,
											"end": 12254,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12236,
											"end": 12254,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12236,
											"end": 12254,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 12236,
											"end": 12273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 12236,
											"end": 12273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12259,
											"end": 12272,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12236,
											"end": 12258,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 12236,
											"end": 12273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12236,
											"end": 12273,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 12236,
											"end": 12273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12215,
											"end": 12233,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 12215,
											"end": 12233,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12215,
											"end": 12233,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12215,
											"end": 12273,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 12337,
											"end": 12348,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12337,
											"end": 12348,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 12337,
											"end": 12367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 12337,
											"end": 12367,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12353,
											"end": 12366,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12337,
											"end": 12352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 12337,
											"end": 12367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12337,
											"end": 12367,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 12337,
											"end": 12367,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12323,
											"end": 12367,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12323,
											"end": 12367,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12323,
											"end": 12367,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 12442,
											"end": 12463,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 12442,
											"end": 12463,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12442,
											"end": 12463,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12442,
											"end": 12463,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 12426,
											"end": 12474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 12426,
											"end": 12474,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C097CE7BC90715B34B9F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12469,
											"end": 12473,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12426,
											"end": 12464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 12426,
											"end": 12464,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12323,
											"end": 12367,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12426,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 12426,
											"end": 12464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12426,
											"end": 12474,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 12426,
											"end": 12474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12408,
											"end": 12423,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 12408,
											"end": 12423,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12408,
											"end": 12423,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12408,
											"end": 12474,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 12520,
											"end": 12560,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12520,
											"end": 12560,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12540,
											"end": 12544,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12540,
											"end": 12544,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12528,
											"end": 12538,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 12528,
											"end": 12538,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12520,
											"end": 12560,
											"name": "PUSH",
											"source": 7,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 12520,
											"end": 12560,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12520,
											"end": 12560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7701,
											"end": 8574,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 7701,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7768,
											"end": 7775,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7787,
											"end": 7808,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7811,
											"end": 7819,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7820,
											"end": 7824,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7811,
											"end": 7825,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7811,
											"end": 7825,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7811,
											"end": 7825,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7811,
											"end": 7825,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7811,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 7811,
											"end": 7825,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7811,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 7811,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 7811,
											"end": 7825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7811,
											"end": 7825,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 7811,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7811,
											"end": 7825,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7811,
											"end": 7825,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7811,
											"end": 7825,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7811,
											"end": 7825,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7811,
											"end": 7825,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7825,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7811,
											"end": 7825,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7811,
											"end": 7825,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7873,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7873,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7873,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7867,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 7859,
											"end": 7873,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7873,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7873,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7859,
											"end": 7873,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7873,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7873,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7859,
											"end": 7880,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7880,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7880,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7880,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7880,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7880,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7880,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7880,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7880,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7917,
											"end": 7938,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7811,
											"end": 7825,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7811,
											"end": 7825,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7811,
											"end": 7825,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7811,
											"end": 7825,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 7811,
											"end": 7825,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7811,
											"end": 7825,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7811,
											"end": 7825,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7917,
											"end": 7938,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7917,
											"end": 7938,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7917,
											"end": 7938,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7917,
											"end": 7938,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8053,
											"end": 8077,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 8053,
											"end": 8077,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8053,
											"end": 8077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8053,
											"end": 8077,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7811,
											"end": 7825,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7811,
											"end": 7825,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7917,
											"end": 7938,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7917,
											"end": 7938,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8035,
											"end": 8050,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 8035,
											"end": 8077,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8035,
											"end": 8094,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8035,
											"end": 8094,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8035,
											"end": 8094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 8035,
											"end": 8094,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8081,
											"end": 8094,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8081,
											"end": 8094,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8081,
											"end": 8094,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8035,
											"end": 8094,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 8035,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8031,
											"end": 8487,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8031,
											"end": 8487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 8031,
											"end": 8487,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8110,
											"end": 8131,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8152,
											"end": 8164,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 8152,
											"end": 8164,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8134,
											"end": 8149,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 8134,
											"end": 8164,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8134,
											"end": 8197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 8134,
											"end": 8197,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8134,
											"end": 8197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 8134,
											"end": 8197,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8134,
											"end": 8197,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 8134,
											"end": 8197,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8167,
											"end": 8182,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 8134,
											"end": 8197,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 8134,
											"end": 8197,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8110,
											"end": 8197,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8110,
											"end": 8197,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8211,
											"end": 8230,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 8251,
											"end": 8255,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8251,
											"end": 8275,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 8251,
											"end": 8275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8251,
											"end": 8275,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8233,
											"end": 8246,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8233,
											"end": 8250,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 8233,
											"end": 8250,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8233,
											"end": 8276,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8233,
											"end": 8276,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8233,
											"end": 8276,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8233,
											"end": 8276,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8233,
											"end": 8276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8233,
											"end": 8276,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 8233,
											"end": 8276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8211,
											"end": 8276,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8211,
											"end": 8276,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8290,
											"end": 8309,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8312,
											"end": 8386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 8370,
											"end": 8385,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 8370,
											"end": 8385,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8312,
											"end": 8365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 8349,
											"end": 8353,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8364,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8349,
											"end": 8364,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8364,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8312,
											"end": 8344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 8328,
											"end": 8343,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 8328,
											"end": 8343,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8312,
											"end": 8323,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 8312,
											"end": 8327,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 8312,
											"end": 8327,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8312,
											"end": 8344,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8312,
											"end": 8344,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8312,
											"end": 8344,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8312,
											"end": 8344,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8312,
											"end": 8344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8312,
											"end": 8386,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 8312,
											"end": 8386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8290,
											"end": 8386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8419,
											"end": 8476,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 8440,
											"end": 8475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 8466,
											"end": 8474,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8440,
											"end": 8461,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 8290,
											"end": 8386,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C097CE7BC90715B34B9F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8440,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 8440,
											"end": 8461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8440,
											"end": 8475,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 8440,
											"end": 8475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8419,
											"end": 8435,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8419,
											"end": 8435,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8419,
											"end": 8439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 8419,
											"end": 8476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8419,
											"end": 8476,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 8419,
											"end": 8476,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8400,
											"end": 8476,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 8400,
											"end": 8476,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8096,
											"end": 8487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8096,
											"end": 8487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8096,
											"end": 8487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8031,
											"end": 8487,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 8031,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8503,
											"end": 8567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 8551,
											"end": 8555,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8551,
											"end": 8566,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8551,
											"end": 8566,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8551,
											"end": 8566,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8503,
											"end": 8546,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C097CE7BC90715B34B9F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8503,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 8519,
											"end": 8535,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8503,
											"end": 8507,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 8503,
											"end": 8514,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8503,
											"end": 8514,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8503,
											"end": 8514,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8503,
											"end": 8518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 8503,
											"end": 8518,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8503,
											"end": 8536,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8503,
											"end": 8536,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8503,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8503,
											"end": 8536,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8503,
											"end": 8536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8503,
											"end": 8567,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 8503,
											"end": 8567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8496,
											"end": 8567,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 7701,
											"end": 8574,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7701,
											"end": 8574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9746,
											"end": 10282,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 9746,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4550,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4538,
											"end": 4550,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4550,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1400493D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4579,
											"end": 4589,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 3596,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3545,
											"end": 3596,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3545,
											"end": 3596,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3545,
											"end": 3596,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4538,
											"end": 4550,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4550,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4578,
											"name": "PUSH",
											"source": 7,
											"value": "A00249E8"
										},
										{
											"begin": 4538,
											"end": 4578,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3518,
											"end": 3536,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3518,
											"end": 3536,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 4538,
											"end": 4590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4530,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 4530,
											"end": 4628,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4530,
											"end": 4628,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4530,
											"end": 4628,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4530,
											"end": 4628,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4530,
											"end": 4628,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10845,
											"end": 10847,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4530,
											"end": 4628,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4530,
											"end": 4628,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4530,
											"end": 4628,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10827,
											"end": 10848,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10884,
											"end": 10886,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 10864,
											"end": 10882,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10864,
											"end": 10882,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10864,
											"end": 10882,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10857,
											"end": 10887,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10923,
											"end": 10957,
											"name": "PUSH",
											"source": 10,
											"value": "53616C65206E6F742063726561746564207468726F75676820666163746F7279"
										},
										{
											"begin": 10903,
											"end": 10921,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10903,
											"end": 10921,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10903,
											"end": 10921,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10958,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10974,
											"end": 10992,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10974,
											"end": 10992,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10974,
											"end": 10992,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10967,
											"end": 10998,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11015,
											"end": 11034,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 11015,
											"end": 11034,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4530,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 10643,
											"end": 11040,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4530,
											"end": 4628,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 4530,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9868,
											"end": 9889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9906,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9892,
											"end": 9906,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9892,
											"end": 9906,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9892,
											"end": 9900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 9892,
											"end": 9906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9892,
											"end": 9906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9892,
											"end": 9906,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9892,
											"end": 9906,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9892,
											"end": 9906,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9892,
											"end": 9906,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9892,
											"end": 9906,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9892,
											"end": 9906,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9892,
											"end": 9913,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 10022,
											"end": 10043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 10022,
											"end": 10043,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10022,
											"end": 10043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10022,
											"end": 10043,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10047,
											"end": 10062,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 10022,
											"end": 10062,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10014,
											"end": 10063,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 10014,
											"end": 10063,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10014,
											"end": 10063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10014,
											"end": 10063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10014,
											"end": 10063,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10014,
											"end": 10063,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 10014,
											"end": 10063,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10073,
											"end": 10094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 10073,
											"end": 10094,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10073,
											"end": 10094,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10073,
											"end": 10114,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10073,
											"end": 10114,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10073,
											"end": 10114,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10073,
											"end": 10114,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 10238,
											"end": 10258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 10238,
											"end": 10258,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10238,
											"end": 10275,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10238,
											"end": 10275,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10238,
											"end": 10275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 10238,
											"end": 10275,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10238,
											"end": 10275,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10238,
											"end": 10275,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10238,
											"end": 10275,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10238,
											"end": 10275,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10238,
											"end": 10275,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10238,
											"end": 10275,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10238,
											"end": 10275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10238,
											"end": 10275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10238,
											"end": 10275,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10238,
											"end": 10275,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 10238,
											"end": 10275,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10238,
											"end": 10275,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10238,
											"end": 10275,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10238,
											"end": 10275,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10264,
											"end": 10274,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 10238,
											"end": 10275,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 10238,
											"end": 10275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10238,
											"end": 10275,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9746,
											"end": 10282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3596,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3518,
											"end": 3536,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3518,
											"end": 3536,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3385,
											"end": 3602,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15820,
											"end": 16368,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 15820,
											"end": 16368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15930,
											"end": 15947,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 15949,
											"end": 15966,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15982,
											"end": 16008,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16025,
											"end": 16030,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16025,
											"end": 16037,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 16011,
											"end": 16038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15982,
											"end": 16038,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15982,
											"end": 16038,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16048,
											"end": 16074,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16091,
											"end": 16096,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 16091,
											"end": 16103,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 16077,
											"end": 16104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16104,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16048,
											"end": 16104,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16048,
											"end": 16104,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16176,
											"end": 16182,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16171,
											"end": 16324,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 16171,
											"end": 16324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16192,
											"end": 16197,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 16192,
											"end": 16204,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 16188,
											"end": 16189,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16188,
											"end": 16204,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 16171,
											"end": 16324,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16171,
											"end": 16324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 16171,
											"end": 16324,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16239,
											"end": 16263,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 16249,
											"end": 16252,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 16254,
											"end": 16259,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 16260,
											"end": 16261,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16254,
											"end": 16262,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16254,
											"end": 16262,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 16254,
											"end": 16262,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16254,
											"end": 16262,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 16254,
											"end": 16262,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 16254,
											"end": 16262,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16254,
											"end": 16262,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 16254,
											"end": 16262,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 16254,
											"end": 16262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16254,
											"end": 16262,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 16254,
											"end": 16262,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16254,
											"end": 16262,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16254,
											"end": 16262,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 16254,
											"end": 16262,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16254,
											"end": 16262,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16254,
											"end": 16262,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16254,
											"end": 16262,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 16239,
											"end": 16248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 16239,
											"end": 16263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16239,
											"end": 16263,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 16239,
											"end": 16263,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16225,
											"end": 16233,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16234,
											"end": 16235,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16225,
											"end": 16236,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16225,
											"end": 16236,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 16225,
											"end": 16236,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16225,
											"end": 16236,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 16225,
											"end": 16236,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 16225,
											"end": 16236,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16225,
											"end": 16236,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 16225,
											"end": 16236,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 16225,
											"end": 16236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16225,
											"end": 16236,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 16225,
											"end": 16236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16225,
											"end": 16236,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16225,
											"end": 16236,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 16225,
											"end": 16236,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16225,
											"end": 16236,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16225,
											"end": 16236,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16225,
											"end": 16263,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16225,
											"end": 16263,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16225,
											"end": 16263,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16225,
											"end": 16263,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16225,
											"end": 16263,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16291,
											"end": 16313,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 16299,
											"end": 16302,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 16304,
											"end": 16309,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 16310,
											"end": 16311,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16304,
											"end": 16312,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16304,
											"end": 16312,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 16304,
											"end": 16312,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16304,
											"end": 16312,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 16304,
											"end": 16312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 16304,
											"end": 16312,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16304,
											"end": 16312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 16304,
											"end": 16312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 16304,
											"end": 16312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16304,
											"end": 16312,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 16304,
											"end": 16312,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16304,
											"end": 16312,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16304,
											"end": 16312,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 16304,
											"end": 16312,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16304,
											"end": 16312,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16304,
											"end": 16312,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16304,
											"end": 16312,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 16291,
											"end": 16298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 16291,
											"end": 16313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16291,
											"end": 16313,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 16291,
											"end": 16313,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16277,
											"end": 16285,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16286,
											"end": 16287,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16277,
											"end": 16288,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16277,
											"end": 16288,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 16277,
											"end": 16288,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16277,
											"end": 16288,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 16277,
											"end": 16288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 16277,
											"end": 16288,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16277,
											"end": 16288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 16277,
											"end": 16288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 16277,
											"end": 16288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16277,
											"end": 16288,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 16277,
											"end": 16288,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16277,
											"end": 16288,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16277,
											"end": 16288,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16277,
											"end": 16288,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16277,
											"end": 16288,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 16277,
											"end": 16288,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16277,
											"end": 16288,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16277,
											"end": 16288,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16277,
											"end": 16288,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16277,
											"end": 16288,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16277,
											"end": 16313,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16206,
											"end": 16209,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 16206,
											"end": 16209,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16171,
											"end": 16324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 16171,
											"end": 16324,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16171,
											"end": 16324,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 16171,
											"end": 16324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16342,
											"end": 16350,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16342,
											"end": 16350,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 16342,
											"end": 16350,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16342,
											"end": 16350,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15820,
											"end": 16368,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15820,
											"end": 16368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3596,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3518,
											"end": 3536,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3518,
											"end": 3536,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3385,
											"end": 3602,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2689,
											"end": 2864,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 2689,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2754,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2747,
											"end": 2754,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 2782,
											"end": 2783,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2779,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 2778,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2783,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 2778,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2766,
											"end": 2783,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2766,
											"end": 2783,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2807,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2801,
											"end": 2802,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2801,
											"end": 2807,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2801,
											"end": 2807,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2793,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 2793,
											"end": 2839,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2793,
											"end": 2839,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2793,
											"end": 2839,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2793,
											"end": 2839,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2793,
											"end": 2839,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11249,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2793,
											"end": 2839,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2793,
											"end": 2839,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2793,
											"end": 2839,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11229,
											"end": 11250,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11286,
											"end": 11288,
											"name": "PUSH",
											"source": 10,
											"value": "1B"
										},
										{
											"begin": 11266,
											"end": 11284,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11266,
											"end": 11284,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11266,
											"end": 11284,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11259,
											"end": 11289,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11325,
											"end": 11354,
											"name": "PUSH",
											"source": 10,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 11305,
											"end": 11323,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 11305,
											"end": 11323,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11305,
											"end": 11323,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11298,
											"end": 11355,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11372,
											"end": 11390,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 11372,
											"end": 11390,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2793,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 11045,
											"end": 11396,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2793,
											"end": 2839,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 2793,
											"end": 2839,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2856,
											"end": 2857,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2689,
											"end": 2864,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2689,
											"end": 2864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3537,
											"end": 3752,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 3537,
											"end": 3752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3595,
											"end": 3602,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3618,
											"end": 3619,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3624,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3618,
											"end": 3624,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3614,
											"end": 3634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 3614,
											"end": 3634,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3633,
											"end": 3634,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3626,
											"end": 3634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 3626,
											"end": 3634,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3614,
											"end": 3634,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 3614,
											"end": 3634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3653,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3656,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 3660,
											"end": 3661,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3656,
											"end": 3657,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3656,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 3656,
											"end": 3661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3656,
											"end": 3661,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 3656,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3688,
											"end": 3689,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3679,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 3683,
											"end": 3684,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3661,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3679,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 3679,
											"end": 3684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3679,
											"end": 3684,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 3679,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3679,
											"end": 3689,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3671,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 3671,
											"end": 3727,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3671,
											"end": 3727,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3671,
											"end": 3727,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3671,
											"end": 3727,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3671,
											"end": 3727,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11998,
											"end": 12000,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3671,
											"end": 3727,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3671,
											"end": 3727,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3671,
											"end": 3727,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11980,
											"end": 12001,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12037,
											"end": 12039,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 12017,
											"end": 12035,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12017,
											"end": 12035,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12017,
											"end": 12035,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12010,
											"end": 12040,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12076,
											"end": 12110,
											"name": "PUSH",
											"source": 10,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 12056,
											"end": 12074,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12056,
											"end": 12074,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12056,
											"end": 12074,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12049,
											"end": 12111,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12127,
											"end": 12145,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12127,
											"end": 12145,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12127,
											"end": 12145,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12120,
											"end": 12151,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12168,
											"end": 12187,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 12168,
											"end": 12187,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3671,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 11796,
											"end": 12193,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3290,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 3135,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3200,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3225,
											"end": 3226,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3220,
											"end": 3221,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3220,
											"end": 3226,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3220,
											"end": 3226,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 3212,
											"end": 3261,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3261,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3212,
											"end": 3261,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3212,
											"end": 3261,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3261,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12400,
											"end": 12402,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3212,
											"end": 3261,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3212,
											"end": 3261,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3261,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12382,
											"end": 12403,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12439,
											"end": 12441,
											"name": "PUSH",
											"source": 10,
											"value": "1E"
										},
										{
											"begin": 12419,
											"end": 12437,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12419,
											"end": 12437,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12419,
											"end": 12437,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12412,
											"end": 12442,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12478,
											"end": 12510,
											"name": "PUSH",
											"source": 10,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 12458,
											"end": 12476,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12458,
											"end": 12476,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12458,
											"end": 12476,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12451,
											"end": 12511,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12528,
											"end": 12546,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12528,
											"end": 12546,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3212,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 12198,
											"end": 12552,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3212,
											"end": 3261,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 3212,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3278,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 3282,
											"end": 3283,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3278,
											"end": 3279,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3278,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 3278,
											"end": 3283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4216,
											"end": 4366,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 4216,
											"end": 4366,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4274,
											"end": 4281,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4305,
											"end": 4306,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4301,
											"end": 4302,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4301,
											"end": 4306,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4293,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 4293,
											"end": 4337,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4293,
											"end": 4337,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4337,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4293,
											"end": 4337,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4293,
											"end": 4337,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12759,
											"end": 12761,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4293,
											"end": 4337,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4337,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4293,
											"end": 4337,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12741,
											"end": 12762,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12798,
											"end": 12800,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 12778,
											"end": 12796,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12778,
											"end": 12796,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12778,
											"end": 12796,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12771,
											"end": 12801,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12837,
											"end": 12865,
											"name": "PUSH",
											"source": 10,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 12817,
											"end": 12835,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12817,
											"end": 12835,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12817,
											"end": 12835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12810,
											"end": 12866,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12883,
											"end": 12901,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12883,
											"end": 12901,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4293,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 12557,
											"end": 12907,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4293,
											"end": 4337,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 4293,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4354,
											"end": 4359,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 4358,
											"end": 4359,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4354,
											"end": 4355,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4354,
											"end": 4359,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 4354,
											"end": 4359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15581,
											"end": 15716,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 15581,
											"end": 15716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15658,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15653,
											"end": 15658,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13104,
											"end": 13136,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13104,
											"end": 13136,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13104,
											"end": 13136,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13086,
											"end": 13137,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13146,
											"end": 13180,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13146,
											"end": 13180,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13146,
											"end": 13180,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15653,
											"end": 15658,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15658,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15658,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15658,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15667,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 15653,
											"end": 15667,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13059,
											"end": 13077,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13059,
											"end": 13077,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 15653,
											"end": 15681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15653,
											"end": 15681,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15702,
											"end": 15709,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15691,
											"end": 15698,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 15691,
											"end": 15698,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15691,
											"end": 15709,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15691,
											"end": 15709,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15691,
											"end": 15709,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 15691,
											"end": 15709,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 15691,
											"end": 15709,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15691,
											"end": 15709,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15691,
											"end": 15709,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 15691,
											"end": 15709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15691,
											"end": 15709,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 15691,
											"end": 15709,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15691,
											"end": 15709,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15691,
											"end": 15709,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15691,
											"end": 15709,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15581,
											"end": 15716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13104,
											"end": 13136,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13104,
											"end": 13136,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13104,
											"end": 13136,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13086,
											"end": 13137,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13146,
											"end": 13180,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13146,
											"end": 13180,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13146,
											"end": 13180,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "408"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13059,
											"end": 13077,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13059,
											"end": 13077,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "tag",
											"source": 5,
											"value": "409"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 5,
											"value": "408"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13449,
											"end": 13464,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13449,
											"end": 13464,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13449,
											"end": 13464,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13431,
											"end": 13465,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13501,
											"end": 13516,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13501,
											"end": 13516,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13501,
											"end": 13516,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13481,
											"end": 13499,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13481,
											"end": 13499,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13481,
											"end": 13499,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13474,
											"end": 13517,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13533,
											"end": 13551,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13533,
											"end": 13551,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13533,
											"end": 13551,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13526,
											"end": 13560,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13526,
											"end": 13560,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13526,
											"end": 13560,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "422"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13366,
											"end": 13384,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 13366,
											"end": 13384,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "409"
										},
										{
											"begin": 13191,
											"end": 13566,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "tag",
											"source": 5,
											"value": "422"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "427"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "428"
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 5,
											"value": "427"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "430"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 5,
											"value": "430"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "408"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3563,
											"end": 3595,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3563,
											"end": 3595,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3545,
											"end": 3596,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3518,
											"end": 3536,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3518,
											"end": 3536,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 3385,
											"end": 3602,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AFCD79F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 6,
											"value": "428"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "452"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "456"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "457"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 6,
											"value": "456"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 6,
											"value": "457"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "459"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "461"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 6,
											"value": "459"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "463"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 6,
											"value": "463"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3563,
											"end": 3595,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3563,
											"end": 3595,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3545,
											"end": 3596,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3518,
											"end": 3536,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3518,
											"end": 3536,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3385,
											"end": 3602,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 6,
											"value": "461"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "467"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 6,
											"value": "467"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A12F521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 196,
											"end": 376,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 196,
											"end": 376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 255,
											"end": 261,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 310,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 296,
											"end": 305,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 287,
											"end": 294,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 283,
											"end": 306,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 279,
											"end": 311,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 276,
											"end": 328,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 276,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 324,
											"end": 325,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 322,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 314,
											"end": 326,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 276,
											"end": 328,
											"name": "tag",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 347,
											"end": 370,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 347,
											"end": 370,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 196,
											"end": 376,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 196,
											"end": 376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 889,
											"end": 1028,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 889,
											"end": 1028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 972,
											"end": 1003,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 972,
											"end": 1003,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 962,
											"end": 1004,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 962,
											"end": 1004,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 952,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 952,
											"end": 1022,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1018,
											"end": 1019,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1015,
											"end": 1016,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1008,
											"end": 1020,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 1151,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 1033,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1119,
											"end": 1124,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1125,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1126,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1127,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1085,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 1085,
											"end": 1145,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1141,
											"end": 1142,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1139,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1131,
											"end": 1143,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1628,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 1156,
											"end": 1628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1260,
											"end": 1266,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1315,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1301,
											"end": 1310,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1292,
											"end": 1299,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1288,
											"end": 1311,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1284,
											"end": 1316,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1281,
											"end": 1333,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1281,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 1281,
											"end": 1333,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1330,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1326,
											"end": 1327,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1319,
											"end": 1331,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1281,
											"end": 1333,
											"name": "tag",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 1281,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1365,
											"end": 1374,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1352,
											"end": 1375,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1342,
											"end": 1375,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1342,
											"end": 1375,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1425,
											"end": 1427,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1423,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1428,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1397,
											"end": 1429,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 1471,
											"end": 1476,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 1438,
											"end": 1477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1477,
											"name": "tag",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 1438,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1496,
											"end": 1501,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1553,
											"end": 1555,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1538,
											"end": 1556,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1538,
											"end": 1556,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1557,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 1525,
											"end": 1557,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 1566,
											"end": 1596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1596,
											"name": "tag",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 1566,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1615,
											"end": 1622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1605,
											"end": 1622,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1605,
											"end": 1622,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1605,
											"end": 1622,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1628,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1628,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1628,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1628,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1628,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1775,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 1633,
											"end": 1775,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1721,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1721,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 1701,
											"end": 1721,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 1730,
											"end": 1769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "tag",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1775,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1775,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1775,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1780,
											"end": 2035,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 1780,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1839,
											"end": 1845,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1894,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1880,
											"end": 1889,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1871,
											"end": 1878,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1890,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1863,
											"end": 1895,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1912,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 1860,
											"end": 1912,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1908,
											"end": 1909,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1906,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1898,
											"end": 1910,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1912,
											"name": "tag",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 1860,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1947,
											"end": 1956,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1934,
											"end": 1957,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 1999,
											"end": 2004,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 1966,
											"end": 2005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2040,
											"end": 2288,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 2040,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2114,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2116,
											"end": 2122,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2169,
											"end": 2171,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2157,
											"end": 2166,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2148,
											"end": 2155,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2144,
											"end": 2167,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2140,
											"end": 2172,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2189,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 2137,
											"end": 2189,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2185,
											"end": 2186,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2183,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2175,
											"end": 2187,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2189,
											"name": "tag",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 2137,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2208,
											"end": 2231,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2208,
											"end": 2231,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2208,
											"end": 2231,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2280,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2263,
											"end": 2281,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2263,
											"end": 2281,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2263,
											"end": 2281,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2250,
											"end": 2282,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2250,
											"end": 2282,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2040,
											"end": 2288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2998,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 2293,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2402,
											"end": 2408,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2410,
											"end": 2416,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2418,
											"end": 2424,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2434,
											"end": 2440,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2487,
											"end": 2490,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 2475,
											"end": 2484,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2466,
											"end": 2473,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2485,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2491,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2508,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 2455,
											"end": 2508,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2504,
											"end": 2505,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2501,
											"end": 2502,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2494,
											"end": 2506,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2508,
											"name": "tag",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 2455,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2552,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2553,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2562,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2562,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 2562,
											"end": 2601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2562,
											"end": 2601,
											"name": "tag",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 2562,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2620,
											"end": 2625,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2677,
											"end": 2679,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2662,
											"end": 2680,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2662,
											"end": 2680,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2649,
											"end": 2681,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2690,
											"end": 2731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 2649,
											"end": 2681,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2690,
											"end": 2731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 2690,
											"end": 2731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2690,
											"end": 2731,
											"name": "tag",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 2690,
											"end": 2731,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2750,
											"end": 2757,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2804,
											"end": 2806,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2789,
											"end": 2807,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2789,
											"end": 2807,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2776,
											"end": 2808,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2776,
											"end": 2808,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2855,
											"end": 2857,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2840,
											"end": 2858,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2840,
											"end": 2858,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2827,
											"end": 2859,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2827,
											"end": 2859,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2911,
											"end": 2914,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2896,
											"end": 2915,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2896,
											"end": 2915,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2883,
											"end": 2916,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2925,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 2883,
											"end": 2916,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2925,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 2925,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2925,
											"end": 2966,
											"name": "tag",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 2925,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2985,
											"end": 2992,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2975,
											"end": 2992,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2975,
											"end": 2992,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2975,
											"end": 2992,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2998,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2998,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2998,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2998,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2998,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2998,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2998,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2998,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3380,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 3003,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3077,
											"end": 3083,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3091,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3093,
											"end": 3099,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3146,
											"end": 3148,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3134,
											"end": 3143,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3125,
											"end": 3132,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3121,
											"end": 3144,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3117,
											"end": 3149,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3114,
											"end": 3166,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3114,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 3114,
											"end": 3166,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3162,
											"end": 3163,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3160,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3152,
											"end": 3164,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3114,
											"end": 3166,
											"name": "tag",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 3114,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3198,
											"end": 3207,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3185,
											"end": 3208,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3175,
											"end": 3208,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3175,
											"end": 3208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3255,
											"end": 3257,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3244,
											"end": 3253,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3240,
											"end": 3258,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3227,
											"end": 3259,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3217,
											"end": 3259,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3217,
											"end": 3259,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3309,
											"end": 3311,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3298,
											"end": 3307,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3312,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3281,
											"end": 3313,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3322,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 3344,
											"end": 3349,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3322,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 3322,
											"end": 3350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 4138,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 3815,
											"end": 4138,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3944,
											"end": 3946,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3932,
											"end": 3941,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3923,
											"end": 3930,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3919,
											"end": 3942,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3947,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 3964,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 3912,
											"end": 3964,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3960,
											"end": 3961,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3957,
											"end": 3958,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3950,
											"end": 3962,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 3964,
											"name": "tag",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 3912,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3996,
											"end": 4005,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3983,
											"end": 4006,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 4006,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 4006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4056,
											"end": 4058,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4045,
											"end": 4054,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4041,
											"end": 4059,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4028,
											"end": 4060,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4069,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 4102,
											"end": 4107,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4069,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 4069,
											"end": 4108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4069,
											"end": 4108,
											"name": "tag",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 4069,
											"end": 4108,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4127,
											"end": 4132,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4117,
											"end": 4132,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4117,
											"end": 4132,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4117,
											"end": 4132,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 4138,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 4138,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 4138,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 4138,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 4138,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 4138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4467,
											"end": 4858,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 4467,
											"end": 4858,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4544,
											"end": 4550,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4552,
											"end": 4558,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4560,
											"end": 4566,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4613,
											"end": 4615,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4601,
											"end": 4610,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4592,
											"end": 4599,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4588,
											"end": 4611,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4616,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4581,
											"end": 4633,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4581,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 4581,
											"end": 4633,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4629,
											"end": 4630,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4626,
											"end": 4627,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4631,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4581,
											"end": 4633,
											"name": "tag",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 4581,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4665,
											"end": 4674,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4675,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4675,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4725,
											"end": 4727,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4714,
											"end": 4723,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4710,
											"end": 4728,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4697,
											"end": 4729,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4738,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 4771,
											"end": 4776,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4738,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 4738,
											"end": 4777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4738,
											"end": 4777,
											"name": "tag",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 4738,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4467,
											"end": 4858,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4467,
											"end": 4858,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4801,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4801,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4848,
											"end": 4850,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4852,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4852,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4467,
											"end": 4858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5093,
											"end": 5220,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 5093,
											"end": 5220,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5154,
											"end": 5164,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 5149,
											"end": 5152,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5145,
											"end": 5165,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5142,
											"end": 5143,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5135,
											"end": 5166,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5185,
											"end": 5189,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 5182,
											"end": 5183,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5175,
											"end": 5190,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5209,
											"end": 5213,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5206,
											"end": 5207,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5199,
											"end": 5214,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5225,
											"end": 6416,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 5225,
											"end": 6416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5318,
											"end": 5324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5326,
											"end": 5332,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5379,
											"end": 5381,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5367,
											"end": 5376,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5358,
											"end": 5365,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5354,
											"end": 5377,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5350,
											"end": 5382,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5347,
											"end": 5399,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5347,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 5347,
											"end": 5399,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5395,
											"end": 5396,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 5393,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5385,
											"end": 5397,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5347,
											"end": 5399,
											"name": "tag",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 5347,
											"end": 5399,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5435,
											"end": 5444,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5422,
											"end": 5445,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5464,
											"end": 5482,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5505,
											"end": 5507,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5497,
											"end": 5503,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5494,
											"end": 5508,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5491,
											"end": 5525,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5491,
											"end": 5525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 5491,
											"end": 5525,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5521,
											"end": 5522,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5518,
											"end": 5519,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5511,
											"end": 5523,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5491,
											"end": 5525,
											"name": "tag",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 5491,
											"end": 5525,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5559,
											"end": 5565,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5548,
											"end": 5557,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5544,
											"end": 5566,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5534,
											"end": 5566,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5534,
											"end": 5566,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5604,
											"end": 5611,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5597,
											"end": 5601,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5593,
											"end": 5595,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5602,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5585,
											"end": 5612,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5575,
											"end": 5630,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 5575,
											"end": 5630,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5627,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5623,
											"end": 5624,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5616,
											"end": 5628,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5575,
											"end": 5630,
											"name": "tag",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 5575,
											"end": 5630,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5662,
											"end": 5664,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5649,
											"end": 5665,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5684,
											"end": 5688,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5707,
											"end": 5709,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5703,
											"end": 5705,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5700,
											"end": 5710,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5697,
											"end": 5733,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5697,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 5697,
											"end": 5733,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5713,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 5713,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 5713,
											"end": 5731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5713,
											"end": 5731,
											"name": "tag",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 5713,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5759,
											"end": 5761,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5756,
											"end": 5757,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5752,
											"end": 5762,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5791,
											"end": 5793,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5785,
											"end": 5794,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5854,
											"end": 5856,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5850,
											"end": 5857,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5845,
											"end": 5847,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 5841,
											"end": 5843,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5837,
											"end": 5848,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5833,
											"end": 5858,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5825,
											"end": 5831,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5821,
											"end": 5859,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5909,
											"end": 5915,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5897,
											"end": 5907,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5894,
											"end": 5916,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5889,
											"end": 5891,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5877,
											"end": 5887,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5874,
											"end": 5892,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5871,
											"end": 5917,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 5868,
											"end": 5940,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5868,
											"end": 5940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 5868,
											"end": 5940,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5920,
											"end": 5938,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 5920,
											"end": 5938,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 5920,
											"end": 5938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5920,
											"end": 5938,
											"name": "tag",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 5920,
											"end": 5938,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5956,
											"end": 5958,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5949,
											"end": 5971,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6006,
											"end": 6024,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6006,
											"end": 6024,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6006,
											"end": 6024,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6040,
											"end": 6055,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6040,
											"end": 6055,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6040,
											"end": 6055,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6040,
											"end": 6055,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6082,
											"end": 6093,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6082,
											"end": 6093,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6082,
											"end": 6093,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6078,
											"end": 6098,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6078,
											"end": 6098,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6078,
											"end": 6098,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6110,
											"end": 6129,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 6110,
											"end": 6129,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6110,
											"end": 6129,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6107,
											"end": 6146,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6107,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 6107,
											"end": 6146,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6142,
											"end": 6143,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6139,
											"end": 6140,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6132,
											"end": 6144,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6107,
											"end": 6146,
											"name": "tag",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 6107,
											"end": 6146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6166,
											"end": 6177,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6166,
											"end": 6177,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6166,
											"end": 6177,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6166,
											"end": 6177,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6186,
											"end": 6334,
											"name": "tag",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 6186,
											"end": 6334,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6202,
											"end": 6208,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6197,
											"end": 6200,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6194,
											"end": 6209,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6186,
											"end": 6334,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6186,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 6186,
											"end": 6334,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6268,
											"end": 6291,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 6287,
											"end": 6290,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6268,
											"end": 6291,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 6268,
											"end": 6291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6268,
											"end": 6291,
											"name": "tag",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 6268,
											"end": 6291,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6256,
											"end": 6292,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6256,
											"end": 6292,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6219,
											"end": 6231,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6219,
											"end": 6231,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6219,
											"end": 6231,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6219,
											"end": 6231,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6312,
											"end": 6324,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6312,
											"end": 6324,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6312,
											"end": 6324,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6312,
											"end": 6324,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6186,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 6186,
											"end": 6334,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6186,
											"end": 6334,
											"name": "tag",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 6186,
											"end": 6334,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6353,
											"end": 6359,
											"name": "SWAP10",
											"source": 10
										},
										{
											"begin": 6391,
											"end": 6409,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 6391,
											"end": 6409,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6391,
											"end": 6409,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6391,
											"end": 6409,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6378,
											"end": 6410,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6378,
											"end": 6410,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5225,
											"end": 6416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6421,
											"end": 6860,
											"name": "tag",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 6421,
											"end": 6860,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6474,
											"end": 6477,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6506,
											"end": 6518,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6539,
											"end": 6545,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6534,
											"end": 6537,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6527,
											"end": 6546,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6565,
											"end": 6569,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6594,
											"end": 6598,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6589,
											"end": 6592,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6599,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6599,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6599,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6633,
											"end": 6637,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6626,
											"end": 6631,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6622,
											"end": 6638,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6656,
											"end": 6657,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6666,
											"end": 6835,
											"name": "tag",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 6666,
											"end": 6835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6680,
											"end": 6686,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6677,
											"end": 6678,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6674,
											"end": 6687,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6666,
											"end": 6835,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6666,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 6666,
											"end": 6835,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6741,
											"end": 6754,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6741,
											"end": 6754,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6729,
											"end": 6755,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6729,
											"end": 6755,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6775,
											"end": 6787,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6775,
											"end": 6787,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6775,
											"end": 6787,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6775,
											"end": 6787,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6810,
											"end": 6825,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6810,
											"end": 6825,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6810,
											"end": 6825,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6810,
											"end": 6825,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6702,
											"end": 6703,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6695,
											"end": 6704,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6666,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 6666,
											"end": 6835,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6666,
											"end": 6835,
											"name": "tag",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 6666,
											"end": 6835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6851,
											"end": 6854,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6851,
											"end": 6854,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6421,
											"end": 6860,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6421,
											"end": 6860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 7330,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 6865,
											"end": 7330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7122,
											"end": 7124,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7111,
											"end": 7120,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7104,
											"end": 7125,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7085,
											"end": 7089,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7148,
											"end": 7204,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 7200,
											"end": 7202,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7198,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7185,
											"end": 7203,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7177,
											"end": 7183,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7148,
											"end": 7204,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 7148,
											"end": 7204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7148,
											"end": 7204,
											"name": "tag",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 7148,
											"end": 7204,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7252,
											"end": 7261,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7244,
											"end": 7250,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7240,
											"end": 7262,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7235,
											"end": 7237,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7224,
											"end": 7233,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7220,
											"end": 7238,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7213,
											"end": 7263,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7280,
											"end": 7324,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 7317,
											"end": 7323,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7309,
											"end": 7315,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7280,
											"end": 7324,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 7280,
											"end": 7324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7280,
											"end": 7324,
											"name": "tag",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 7280,
											"end": 7324,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7272,
											"end": 7324,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 7330,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6865,
											"end": 7330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7335,
											"end": 7462,
											"name": "tag",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 7335,
											"end": 7462,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7396,
											"end": 7406,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 7391,
											"end": 7394,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 7387,
											"end": 7407,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 7384,
											"end": 7385,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7377,
											"end": 7408,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7427,
											"end": 7431,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 7424,
											"end": 7425,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7417,
											"end": 7432,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7451,
											"end": 7455,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7448,
											"end": 7449,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7441,
											"end": 7456,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7467,
											"end": 7595,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 7467,
											"end": 7595,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7534,
											"end": 7543,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7534,
											"end": 7543,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7534,
											"end": 7543,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7555,
											"end": 7566,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7555,
											"end": 7566,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7555,
											"end": 7566,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7552,
											"end": 7589,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7552,
											"end": 7589,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 7552,
											"end": 7589,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7569,
											"end": 7587,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 7569,
											"end": 7587,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 7569,
											"end": 7587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7600,
											"end": 7727,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 7600,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7661,
											"end": 7671,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 7656,
											"end": 7659,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 7652,
											"end": 7672,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7650,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7642,
											"end": 7673,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7692,
											"end": 7696,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 7689,
											"end": 7690,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7682,
											"end": 7697,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7716,
											"end": 7720,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7713,
											"end": 7714,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7706,
											"end": 7721,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10263,
											"end": 10388,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 10263,
											"end": 10388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10328,
											"end": 10337,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10328,
											"end": 10337,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10328,
											"end": 10337,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10349,
											"end": 10359,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10349,
											"end": 10359,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10349,
											"end": 10359,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10346,
											"end": 10382,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10346,
											"end": 10382,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 10346,
											"end": 10382,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10380,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 10362,
											"end": 10380,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 10362,
											"end": 10380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10393,
											"end": 10638,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 10393,
											"end": 10638,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10460,
											"end": 10466,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10513,
											"end": 10515,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10501,
											"end": 10510,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10492,
											"end": 10499,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10488,
											"end": 10511,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10484,
											"end": 10516,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 10481,
											"end": 10533,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10481,
											"end": 10533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 10481,
											"end": 10533,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10529,
											"end": 10530,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10526,
											"end": 10527,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10519,
											"end": 10531,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10481,
											"end": 10533,
											"name": "tag",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 10481,
											"end": 10533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10561,
											"end": 10570,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10555,
											"end": 10571,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10580,
											"end": 10608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 10602,
											"end": 10607,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10580,
											"end": 10608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 10580,
											"end": 10608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11401,
											"end": 11569,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 11401,
											"end": 11569,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11474,
											"end": 11483,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11474,
											"end": 11483,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11474,
											"end": 11483,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 11505,
											"end": 11514,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11505,
											"end": 11514,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11522,
											"end": 11537,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11522,
											"end": 11537,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11522,
											"end": 11537,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 11516,
											"end": 11538,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11516,
											"end": 11538,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 11502,
											"end": 11539,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 11492,
											"end": 11563,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 11492,
											"end": 11563,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11543,
											"end": 11561,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 11543,
											"end": 11561,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 11543,
											"end": 11561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11574,
											"end": 11791,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 11574,
											"end": 11791,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11614,
											"end": 11615,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11640,
											"end": 11641,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11630,
											"end": 11762,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 11630,
											"end": 11762,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11684,
											"end": 11694,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 11679,
											"end": 11682,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 11675,
											"end": 11695,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 11672,
											"end": 11673,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11665,
											"end": 11696,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11719,
											"end": 11723,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 11716,
											"end": 11717,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11709,
											"end": 11724,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11747,
											"end": 11751,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11744,
											"end": 11745,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11737,
											"end": 11752,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 11630,
											"end": 11762,
											"name": "tag",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 11630,
											"end": 11762,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11776,
											"end": 11785,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 11776,
											"end": 11785,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11574,
											"end": 11791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13571,
											"end": 13983,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 13571,
											"end": 13983,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13700,
											"end": 13703,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13738,
											"end": 13744,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13732,
											"end": 13745,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13763,
											"end": 13764,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13773,
											"end": 13902,
											"name": "tag",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 13773,
											"end": 13902,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13787,
											"end": 13793,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13784,
											"end": 13785,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13781,
											"end": 13794,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 13773,
											"end": 13902,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13773,
											"end": 13902,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 13773,
											"end": 13902,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13885,
											"end": 13889,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13869,
											"end": 13883,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13869,
											"end": 13883,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13869,
											"end": 13883,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13865,
											"end": 13890,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13865,
											"end": 13890,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13859,
											"end": 13891,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13846,
											"end": 13857,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13846,
											"end": 13857,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13846,
											"end": 13857,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13839,
											"end": 13892,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13802,
											"end": 13814,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13773,
											"end": 13902,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 13773,
											"end": 13902,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13773,
											"end": 13902,
											"name": "tag",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 13773,
											"end": 13902,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13957,
											"end": 13958,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13921,
											"end": 13937,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13921,
											"end": 13937,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13946,
											"end": 13959,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13946,
											"end": 13959,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13946,
											"end": 13959,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13921,
											"end": 13937,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13571,
											"end": 13983,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13571,
											"end": 13983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"contracts/AllocationStaking.sol",
								"contracts/interfaces/ISalesFactory.sol",
								"contracts/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"add(uint256,address,bool)": "1eaaa045",
							"compound(uint256)": "aa5f7e26",
							"deposit(uint256,uint256)": "e2bbb158",
							"deposited(uint256,address)": "a2383106",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"endTimestamp()": "a85adeab",
							"erc20()": "785e9e86",
							"fund(uint256)": "ca1d209d",
							"getPendingAndDepositedForUsers(address[],uint256)": "fcfc1b14",
							"initialize(address,address,uint256,uint256,address)": "57fb25cc",
							"massUpdatePools()": "630b5ba1",
							"owner()": "8da5cb5b",
							"paidOut()": "5c76ca2d",
							"pending(uint256,address)": "e4c75c27",
							"poolInfo(uint256)": "1526fe27",
							"poolLength()": "081e3eda",
							"renounceOwnership()": "715018a6",
							"rewardPerSecond()": "8f10369a",
							"salesFactory()": "ed95f07f",
							"set(uint256,uint256,bool)": "64482f79",
							"setSalesFactory(address)": "3dfcb861",
							"setTokensUnlockTime(uint256,address,uint256)": "e6f04acc",
							"startTimestamp()": "e6fd48bc",
							"totalAllocPoint()": "17caf6f1",
							"totalPending()": "3f90916a",
							"totalRewards()": "0e15561a",
							"transferOwnership(address)": "f2fde38b",
							"updatePool(uint256)": "51eb05a6",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountAdded\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposited\",\"type\":\"uint256\"}],\"name\":\"CompoundedEarnings\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"compound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"deposited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getPendingAndDepositedForUsers\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ownable\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_erc20\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardPerSecond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_salesFactory\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paidOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pending\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accERC20PerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDeposits\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"salesFactory\",\"outputs\":[{\"internalType\":\"contract ISalesFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_salesFactory\",\"type\":\"address\"}],\"name\":\"setSalesFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokensUnlockTime\",\"type\":\"uint256\"}],\"name\":\"setTokensUnlockTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPending\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensUnlockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AllocationStaking.sol\":\"AllocationStaking\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"contracts/AllocationStaking.sol\":{\"keccak256\":\"0x801a6f788e4e11258e50a02aae6f03b6757fbcf23905c8d94d007731f40035eb\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2a53986720056183b547a80cdd9a469105dcfb9422a3df6a53919e2204b30ba9\",\"dweb:/ipfs/QmYaSh9GrMKx9W3RmkooqTjbfzWRjvxvxocCKsHcnscULN\"]},\"contracts/interfaces/ISalesFactory.sol\":{\"keccak256\":\"0xe444263341122cf6ec5e92667c6ac7e1e36a4d3c6409e8764f25416db47116ff\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f2eec745c558f52ce7571866a2eb513974af3cba367e1457943bf996a9fd7012\",\"dweb:/ipfs/QmWXGvD8XWZaMhETkuVwSg5DMDyJyKbGTATQBAhBKSZ6Zo\"]},\"contracts/math/SafeMath.sol\":{\"keccak256\":\"0x028bf9fba78200f0d7b204c49377fa639df791041972b8f17d4bd737a54b7b74\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1e961511612106ad024ab7d0759e0e52012bf94678e540d01349a1cd2e87f06a\",\"dweb:/ipfs/QmW2FeuabAbeQG7eHDiXmtYwm6WgaDLSiA3GeDxsfjoYDf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1192,
								"contract": "contracts/AllocationStaking.sol:AllocationStaking",
								"label": "erc20",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)572"
							},
							{
								"astId": 1194,
								"contract": "contracts/AllocationStaking.sol:AllocationStaking",
								"label": "paidOut",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1196,
								"contract": "contracts/AllocationStaking.sol:AllocationStaking",
								"label": "rewardPerSecond",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1198,
								"contract": "contracts/AllocationStaking.sol:AllocationStaking",
								"label": "totalRewards",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1201,
								"contract": "contracts/AllocationStaking.sol:AllocationStaking",
								"label": "salesFactory",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(ISalesFactory)2342"
							},
							{
								"astId": 1205,
								"contract": "contracts/AllocationStaking.sol:AllocationStaking",
								"label": "poolInfo",
								"offset": 0,
								"slot": "5",
								"type": "t_array(t_struct(PoolInfo)1189_storage)dyn_storage"
							},
							{
								"astId": 1212,
								"contract": "contracts/AllocationStaking.sol:AllocationStaking",
								"label": "userInfo",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1177_storage))"
							},
							{
								"astId": 1214,
								"contract": "contracts/AllocationStaking.sol:AllocationStaking",
								"label": "totalAllocPoint",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1216,
								"contract": "contracts/AllocationStaking.sol:AllocationStaking",
								"label": "startTimestamp",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1218,
								"contract": "contracts/AllocationStaking.sol:AllocationStaking",
								"label": "endTimestamp",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(PoolInfo)1189_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)1189_storage",
								"encoding": "dynamic_array",
								"label": "struct AllocationStaking.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)572": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(ISalesFactory)2342": {
								"encoding": "inplace",
								"label": "contract ISalesFactory",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)1177_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct AllocationStaking.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)1177_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1177_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct AllocationStaking.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)1177_storage)"
							},
							"t_struct(PoolInfo)1189_storage": {
								"encoding": "inplace",
								"label": "struct AllocationStaking.PoolInfo",
								"members": [
									{
										"astId": 1180,
										"contract": "contracts/AllocationStaking.sol:AllocationStaking",
										"label": "lpToken",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC20)572"
									},
									{
										"astId": 1182,
										"contract": "contracts/AllocationStaking.sol:AllocationStaking",
										"label": "allocPoint",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1184,
										"contract": "contracts/AllocationStaking.sol:AllocationStaking",
										"label": "lastRewardTimestamp",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1186,
										"contract": "contracts/AllocationStaking.sol:AllocationStaking",
										"label": "accERC20PerShare",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1188,
										"contract": "contracts/AllocationStaking.sol:AllocationStaking",
										"label": "totalDeposits",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserInfo)1177_storage": {
								"encoding": "inplace",
								"label": "struct AllocationStaking.UserInfo",
								"members": [
									{
										"astId": 1169,
										"contract": "contracts/AllocationStaking.sol:AllocationStaking",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1171,
										"contract": "contracts/AllocationStaking.sol:AllocationStaking",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1173,
										"contract": "contracts/AllocationStaking.sol:AllocationStaking",
										"label": "tokensUnlockTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1176,
										"contract": "contracts/AllocationStaking.sol:AllocationStaking",
										"label": "salesRegistered",
										"offset": 0,
										"slot": "3",
										"type": "t_array(t_address)dyn_storage"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/ISalesFactory.sol": {
				"ISalesFactory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sale",
									"type": "address"
								}
							],
							"name": "isSaleCreatedThroughFactory",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "saleOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "saleToken",
									"type": "address"
								}
							],
							"name": "setSaleOwnerAndToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isSaleCreatedThroughFactory(address)": "a00249e8",
							"setSaleOwnerAndToken(address,address)": "4c0ec736"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sale\",\"type\":\"address\"}],\"name\":\"isSaleCreatedThroughFactory\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"saleOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"saleToken\",\"type\":\"address\"}],\"name\":\"setSaleOwnerAndToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISalesFactory.sol\":\"ISalesFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISalesFactory.sol\":{\"keccak256\":\"0xe444263341122cf6ec5e92667c6ac7e1e36a4d3c6409e8764f25416db47116ff\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f2eec745c558f52ce7571866a2eb513974af3cba367e1457943bf996a9fd7012\",\"dweb:/ipfs/QmWXGvD8XWZaMhETkuVwSg5DMDyJyKbGTATQBAhBKSZ6Zo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/math/SafeMath.sol\":629:7223  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/math/SafeMath.sol\":629:7223  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208814a7dc6a88544d74c3e3bdb14393435f4376358c322a65053d518a1bde196164736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208814a7dc6a88544d74c3e3bdb14393435f4376358c322a65053d518a1bde196164736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 EQ 0xA7 0xDC PUSH11 0x88544D74C3E3BDB1439343 PUSH0 NUMBER PUSH23 0x358C322A65053D518A1BDE196164736F6C634300081800 CALLER ",
							"sourceMap": "629:6594:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;629:6594:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208814a7dc6a88544d74c3e3bdb14393435f4376358c322a65053d518a1bde196164736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 EQ 0xA7 0xDC PUSH11 0x88544D74C3E3BDB1439343 PUSH0 NUMBER PUSH23 0x358C322A65053D518A1BDE196164736F6C634300081800 CALLER ",
							"sourceMap": "629:6594:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 629,
									"end": 7223,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 629,
									"end": 7223,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208814a7dc6a88544d74c3e3bdb14393435f4376358c322a65053d518a1bde196164736f6c63430008180033",
									".code": [
										{
											"begin": 629,
											"end": 7223,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 629,
											"end": 7223,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 629,
											"end": 7223,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 629,
											"end": 7223,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 629,
											"end": 7223,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 7223,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 629,
											"end": 7223,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 7223,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 629,
											"end": 7223,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"contracts/AllocationStaking.sol",
								"contracts/interfaces/ISalesFactory.sol",
								"contracts/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/math/SafeMath.sol\":{\"keccak256\":\"0x028bf9fba78200f0d7b204c49377fa639df791041972b8f17d4bd737a54b7b74\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1e961511612106ad024ab7d0759e0e52012bf94678e540d01349a1cd2e87f06a\",\"dweb:/ipfs/QmW2FeuabAbeQG7eHDiXmtYwm6WgaDLSiA3GeDxsfjoYDf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							494
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 495,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 494,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 449,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 494,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								494,
								448
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 476,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 448,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 448,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 448,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 448,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 448,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 208,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 205,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 448,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 449,
							"src": "2349:6560:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							494
						],
						"Initializable": [
							448
						]
					},
					"id": 495,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 495,
							"sourceUnit": 449,
							"src": "126:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 451,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "134:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 454,
										"name": "Initializable",
										"nameLocations": [
											"728:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "728:13:2"
									},
									"id": 455,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:2"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 453,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 494,
							"linearizedBaseContracts": [
								494,
								448
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "800:7:2",
										"statements": []
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 458,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 457,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:2"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:2"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:2"
									},
									"scope": 494,
									"src": "748:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "875:7:2",
										"statements": []
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 464,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 463,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:2"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:2"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:2"
									},
									"scope": 494,
									"src": "813:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "949:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 472,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 471,
												"id": 474,
												"nodeType": "Return",
												"src": "959:17:2"
											}
										]
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:2"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "940:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:2"
									},
									"scope": 494,
									"src": "887:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "1056:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 481,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 480,
												"id": 483,
												"nodeType": "Return",
												"src": "1066:15:2"
											}
										]
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:2"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1040:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 478,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:2"
									},
									"scope": 494,
									"src": "989:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "1166:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 489,
												"id": 491,
												"nodeType": "Return",
												"src": "1176:8:2"
											}
										]
									},
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:2"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1157:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:2"
									},
									"scope": 494,
									"src": "1094:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 495,
							"src": "688:505:2",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							572
						]
					},
					"id": 573,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 496,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 497,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 572,
							"linearizedBaseContracts": [
								572
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 506,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 515,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 572,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 529,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 572,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 539,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 536,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 572,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 540,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 549,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 572,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 556,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 572,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 571,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 568,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 572,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 573,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								506,
								515
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							608
						]
					},
					"id": 609,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 574,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 575,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:4",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 608,
							"linearizedBaseContracts": [
								608
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:4",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 593,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "3022:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "3045:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "3070:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "3093:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "3119:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 585,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "3136:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 587,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "3155:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 589,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:4"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:4"
									},
									"scope": 608,
									"src": "2997:183:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:4",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 601,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "3501:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:4"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "3539:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:4"
									},
									"scope": 608,
									"src": "3485:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:4",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 607,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:4"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "3791:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 604,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:4"
									},
									"scope": 608,
									"src": "3740:60:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 609,
							"src": "2113:1689:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1151
						],
						"IERC20": [
							572
						],
						"IERC20Permit": [
							608
						],
						"SafeERC20": [
							898
						]
					},
					"id": 899,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 610,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 612,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 899,
							"sourceUnit": 573,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 611,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 572,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 614,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 899,
							"sourceUnit": 609,
							"src": "179:60:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 613,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 608,
										"src": "187:12:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 616,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 899,
							"sourceUnit": 1152,
							"src": "240:51:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 615,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1151,
										"src": "248:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 617,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 898,
							"linearizedBaseContracts": [
								898
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 620,
									"libraryName": {
										"id": 618,
										"name": "Address",
										"nameLocations": [
											"781:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1151,
										"src": "781:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:5",
									"typeName": {
										"id": 619,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:5",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 625,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "907:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:5"
									},
									"src": "876:46:5"
								},
								{
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 634,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "1043:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "1060:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "1086:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:5"
									},
									"src": "1004:109:5"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "1375:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 646,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "1405:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$572",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 649,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 638,
																		"src": "1427:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$572",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 539,
																	"src": "1427:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 651,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 640,
																			"src": "1444:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 652,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 642,
																			"src": "1448:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 653,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 647,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$572",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 645,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "1385:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$572_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:5"
											}
										]
									},
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "1325:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$572",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 637,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 636,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 572,
														"src": "1325:6:5"
													},
													"referencedDeclaration": 572,
													"src": "1325:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$572",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "1339:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "1351:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:5"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:5"
									},
									"scope": 898,
									"src": "1303:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "1792:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 672,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "1822:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$572",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 675,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 662,
																		"src": "1844:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$572",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 571,
																	"src": "1844:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 677,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 664,
																			"src": "1865:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 678,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 666,
																			"src": "1871:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 679,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 668,
																			"src": "1875:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 680,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 673,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$572",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 671,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "1802:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$572_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:5"
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "1728:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$572",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 661,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 660,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 572,
														"src": "1728:6:5"
													},
													"referencedDeclaration": 572,
													"src": "1728:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$572",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "1742:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "1756:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "1768:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:5"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:5"
									},
									"scope": 898,
									"src": "1702:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "2167:139:5",
										"statements": [
											{
												"assignments": [
													697
												],
												"declarations": [
													{
														"constant": false,
														"id": 697,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 715,
														"src": "2177:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 696,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 706,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 702,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$898",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$898",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 700,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 704,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "2231:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 698,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "2200:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$572",
																"typeString": "contract IERC20"
															}
														},
														"id": 699,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 549,
														"src": "2200:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 708,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "2262:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$572",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 709,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "2269:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 710,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 697,
																"src": "2278:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 711,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "2293:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$572",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 707,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "2249:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$572_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 714,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:5"
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2112:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$572",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 688,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 687,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 572,
														"src": "2112:6:5"
													},
													"referencedDeclaration": 572,
													"src": "2112:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$572",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2126:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2143:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:5"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:5"
									},
									"scope": 898,
									"src": "2081:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "2607:370:5",
										"statements": [
											{
												"id": 757,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:5",
												"statements": [
													{
														"assignments": [
															728
														],
														"declarations": [
															{
																"constant": false,
																"id": 728,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 757,
																"src": "2641:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 727,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 737,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 733,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$898",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$898",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 731,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 735,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "2699:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 729,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "2668:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$572",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 549,
																"src": "2668:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 738,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "2725:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 739,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "2744:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 748,
														"nodeType": "IfStatement",
														"src": "2721:160:5",
														"trueBody": {
															"id": 747,
															"nodeType": "Block",
															"src": "2763:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 742,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 722,
																				"src": "2821:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 743,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 728,
																				"src": "2830:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 744,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 724,
																				"src": "2848:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 741,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 634,
																			"src": "2788:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 746,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 750,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "2907:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$572",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 751,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "2914:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 752,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 728,
																		"src": "2923:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 753,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "2942:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$572",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 749,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "2894:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$572_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 756,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "2540:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$572",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 719,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 718,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 572,
														"src": "2540:6:5"
													},
													"referencedDeclaration": 572,
													"src": "2540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$572",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "2554:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "2571:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:5"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:5"
									},
									"scope": 898,
									"src": "2509:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "3373:303:5",
										"statements": [
											{
												"assignments": [
													771
												],
												"declarations": [
													{
														"constant": false,
														"id": 771,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 805,
														"src": "3383:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 770,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 780,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 774,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "3426:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$572",
																	"typeString": "contract IERC20"
																}
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 559,
															"src": "3426:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 776,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 765,
																	"src": "3442:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 777,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "3451:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 778,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 772,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:5"
											},
											{
												"condition": {
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 782,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "3498:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$572",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 783,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 771,
																"src": "3505:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$572",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 781,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "3474:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$572_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 804,
												"nodeType": "IfStatement",
												"src": "3469:201:5",
												"trueBody": {
													"id": 803,
													"nodeType": "Block",
													"src": "3520:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 787,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 763,
																		"src": "3554:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$572",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 790,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 763,
																					"src": "3576:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$572",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 559,
																				"src": "3576:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 792,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 765,
																						"src": "3592:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 793,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 794,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 788,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$572",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 786,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 848,
																	"src": "3534:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$572_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 797,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 799,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 763,
																		"src": "3639:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$572",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 800,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 771,
																		"src": "3646:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$572",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 798,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 848,
																	"src": "3619:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$572_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 802,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "3318:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$572",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 762,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 761,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 572,
														"src": "3318:6:5"
													},
													"referencedDeclaration": 572,
													"src": "3318:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$572",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "3332:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "3349:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:5"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:5"
									},
									"scope": 898,
									"src": "3296:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "4129:559:5",
										"statements": [
											{
												"assignments": [
													816
												],
												"declarations": [
													{
														"constant": false,
														"id": 816,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 847,
														"src": "4478:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 815,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 824,
												"initialValue": {
													"arguments": [
														{
															"id": 822,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "4532:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 819,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "4512:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$572",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$572",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 817,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 821,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:5",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 972,
														"src": "4504:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 825,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 816,
																"src": "4551:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 836,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 831,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 816,
																	"src": "4589:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 832,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:5",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 834,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 829,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:5",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 846,
												"nodeType": "IfStatement",
												"src": "4547:135:5",
												"trueBody": {
													"id": 845,
													"nodeType": "Block",
													"src": "4610:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 841,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 810,
																				"src": "4664:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$572",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$572",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 839,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 838,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 625,
																	"src": "4631:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 844,
															"nodeType": "RevertStatement",
															"src": "4624:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 807,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "4088:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$572",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 809,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 808,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 572,
														"src": "4088:6:5"
													},
													"referencedDeclaration": 572,
													"src": "4088:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$572",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "4102:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 811,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:5"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:5"
									},
									"scope": 898,
									"src": "4059:629:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "5278:489:5",
										"statements": [
											{
												"assignments": [
													860,
													862
												],
												"declarations": [
													{
														"constant": false,
														"id": 860,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 896,
														"src": "5574:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 859,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 862,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 896,
														"src": "5588:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 861,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 870,
												"initialValue": {
													"arguments": [
														{
															"id": 868,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "5635:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 865,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 852,
																	"src": "5623:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$572",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$572",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 863,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 867,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:5",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 885,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 871,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "5657:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 872,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 862,
																				"src": "5669:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:5",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 874,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 878,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 862,
																				"src": "5706:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 880,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 879,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:5",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 881,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 876,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 877,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:5",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 884,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 888,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 852,
																			"src": "5738:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$572",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$572",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 886,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 858,
												"id": 895,
												"nodeType": "Return",
												"src": "5650:110:5"
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "5222:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$572",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 851,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 850,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 572,
														"src": "5222:6:5"
													},
													"referencedDeclaration": 572,
													"src": "5222:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$572",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "5236:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 853,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:5"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "5272:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 856,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:5"
									},
									"scope": 898,
									"src": "5189:578:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 899,
							"src": "751:5018:5",
							"usedErrors": [
								625,
								634
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1151
						]
					},
					"id": 1152,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 900,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 901,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1151,
							"linearizedBaseContracts": [
								1151
							],
							"name": "Address",
							"nameLocation": "203:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:6",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 906,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "349:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:6"
									},
									"src": "316:50:6"
								},
								{
									"documentation": {
										"id": 907,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:6",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 911,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "475:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:6"
									},
									"src": "452:39:6"
								},
								{
									"documentation": {
										"id": 912,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:6",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 914,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:6"
									},
									"src": "591:24:6"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "1602:260:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 924,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1151",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1151",
																		"typeString": "library Address"
																	}
																],
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 922,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:6",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 927,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "1640:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 937,
												"nodeType": "IfStatement",
												"src": "1612:109:6",
												"trueBody": {
													"id": 936,
													"nodeType": "Block",
													"src": "1648:73:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 932,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1151",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1151",
																					"typeString": "library Address"
																				}
																			],
																			"id": 931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 930,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 929,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 906,
																	"src": "1669:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 935,
															"nodeType": "RevertStatement",
															"src": "1662:48:6"
														}
													]
												}
											},
											{
												"assignments": [
													939,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 939,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 954,
														"src": "1732:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 938,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 946,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 940,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 917,
																"src": "1750:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 942,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 919,
																"src": "1772:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:6"
											},
											{
												"condition": {
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:6",
													"subExpression": {
														"id": 947,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "1798:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 953,
												"nodeType": "IfStatement",
												"src": "1793:63:6",
												"trueBody": {
													"id": 952,
													"nodeType": "Block",
													"src": "1807:49:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 949,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 914,
																	"src": "1828:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 951,
															"nodeType": "RevertStatement",
															"src": "1821:24:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 915,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "1550:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "1577:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:6"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:6"
									},
									"scope": 1151,
									"src": "1531:331:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "2794:62:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 966,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "2833:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 967,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "2841:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 965,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "2811:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 964,
												"id": 970,
												"nodeType": "Return",
												"src": "2804:45:6"
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2727:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2743:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 959,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:6"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2780:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 962,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:6"
									},
									"scope": 1151,
									"src": "2705:151:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "3293:279:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 986,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1151",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1151",
																		"typeString": "library Address"
																	}
																],
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 984,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:6",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 989,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "3331:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 999,
												"nodeType": "IfStatement",
												"src": "3303:108:6",
												"trueBody": {
													"id": 998,
													"nodeType": "Block",
													"src": "3338:73:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 994,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1151",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1151",
																					"typeString": "library Address"
																				}
																			],
																			"id": 993,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 992,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 991,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 906,
																	"src": "3359:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 997,
															"nodeType": "RevertStatement",
															"src": "3352:48:6"
														}
													]
												}
											},
											{
												"assignments": [
													1001,
													1003
												],
												"declarations": [
													{
														"constant": false,
														"id": 1001,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1017,
														"src": "3421:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1000,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1003,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1017,
														"src": "3435:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1002,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1010,
												"initialValue": {
													"arguments": [
														{
															"id": 1008,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "3488:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1004,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "3462:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1006,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "3481:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1012,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "3537:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1013,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "3545:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1014,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "3554:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1011,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "3510:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 983,
												"id": 1016,
												"nodeType": "Return",
												"src": "3503:62:6"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "3211:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "3227:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 976,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "3246:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:6"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "3279:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 981,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:6"
									},
									"scope": 1151,
									"src": "3180:392:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1043,
										"nodeType": "Block",
										"src": "3811:154:6",
										"statements": [
											{
												"assignments": [
													1029,
													1031
												],
												"declarations": [
													{
														"constant": false,
														"id": 1029,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1043,
														"src": "3822:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1028,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1031,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1043,
														"src": "3836:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1030,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1036,
												"initialValue": {
													"arguments": [
														{
															"id": 1034,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "3881:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1032,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "3863:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1038,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "3930:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1039,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "3938:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1040,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "3947:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1037,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "3903:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1027,
												"id": 1042,
												"nodeType": "Return",
												"src": "3896:62:6"
											}
										]
									},
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "3739:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "3755:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1022,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:6"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "3797:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1025,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:6"
									},
									"scope": 1151,
									"src": "3711:254:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "4203:156:6",
										"statements": [
											{
												"assignments": [
													1055,
													1057
												],
												"declarations": [
													{
														"constant": false,
														"id": 1055,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1069,
														"src": "4214:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1054,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1057,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1069,
														"src": "4228:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1056,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1062,
												"initialValue": {
													"arguments": [
														{
															"id": 1060,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "4275:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1058,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "4255:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1059,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1064,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "4324:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1065,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "4332:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1066,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "4341:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1063,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "4297:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1053,
												"id": 1068,
												"nodeType": "Return",
												"src": "4290:62:6"
											}
										]
									},
									"documentation": {
										"id": 1045,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "4136:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "4152:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1048,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:6"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "4189:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1051,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:6"
									},
									"scope": 1151,
									"src": "4106:253:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "4783:424:6",
										"statements": [
											{
												"condition": {
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:6",
													"subExpression": {
														"id": 1082,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1075,
														"src": "4798:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1107,
													"nodeType": "Block",
													"src": "4857:344:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1089,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1077,
																			"src": "5045:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1093,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1073,
																				"src": "5071:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1094,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1104,
															"nodeType": "IfStatement",
															"src": "5041:119:6",
															"trueBody": {
																"id": 1103,
																"nodeType": "Block",
																"src": "5096:64:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1100,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1073,
																					"src": "5138:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1099,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 911,
																				"src": "5121:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1102,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1105,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1077,
																"src": "5180:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1081,
															"id": 1106,
															"nodeType": "Return",
															"src": "5173:17:6"
														}
													]
												},
												"id": 1108,
												"nodeType": "IfStatement",
												"src": "4793:408:6",
												"trueBody": {
													"id": 1088,
													"nodeType": "Block",
													"src": "4807:44:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1085,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1077,
																		"src": "4829:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1084,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1150,
																	"src": "4821:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1087,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:6",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "4670:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "4694:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1074,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "4716:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1076,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:6"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "4769:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1079,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:6"
									},
									"scope": 1151,
									"src": "4625:582:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1131,
										"nodeType": "Block",
										"src": "5509:122:6",
										"statements": [
											{
												"condition": {
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:6",
													"subExpression": {
														"id": 1120,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "5524:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1129,
													"nodeType": "Block",
													"src": "5583:42:6",
													"statements": [
														{
															"expression": {
																"id": 1127,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1115,
																"src": "5604:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1119,
															"id": 1128,
															"nodeType": "Return",
															"src": "5597:17:6"
														}
													]
												},
												"id": 1130,
												"nodeType": "IfStatement",
												"src": "5519:106:6",
												"trueBody": {
													"id": 1126,
													"nodeType": "Block",
													"src": "5533:44:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1123,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "5555:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1122,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1150,
																	"src": "5547:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1125,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:6",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "5433:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1112,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "5447:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:6"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "5495:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1117,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:6"
									},
									"scope": 1151,
									"src": "5407:224:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "5798:461:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1138,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "5874:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1140,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1147,
													"nodeType": "Block",
													"src": "6204:49:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1144,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 914,
																	"src": "6225:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1146,
															"nodeType": "RevertStatement",
															"src": "6218:24:6"
														}
													]
												},
												"id": 1148,
												"nodeType": "IfStatement",
												"src": "5870:383:6",
												"trueBody": {
													"id": 1143,
													"nodeType": "Block",
													"src": "5897:301:6",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:6",
																"nodeType": "YulBlock",
																"src": "6055:133:6",
																"statements": [
																	{
																		"nativeSrc": "6073:40:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:6"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:6"
																			},
																			"nativeSrc": "6096:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:6"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:6",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:6",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:6",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:6"
																					},
																					"nativeSrc": "6137:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:6"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:6",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:6"
																			},
																			"nativeSrc": "6130:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:6"
																		},
																		"nativeSrc": "6130:44:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:6"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 1135,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:6",
																	"valueSize": 1
																},
																{
																	"declaration": 1135,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:6",
																	"valueSize": 1
																}
															],
															"id": 1142,
															"nodeType": "InlineAssembly",
															"src": "6046:142:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1133,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:6",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "5760:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1134,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:6"
									},
									"returnParameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:6"
									},
									"scope": 1151,
									"src": "5743:516:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1152,
							"src": "195:6066:6",
							"usedErrors": [
								906,
								911,
								914
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:6"
				},
				"id": 6
			},
			"contracts/AllocationStaking.sol": {
				"ast": {
					"absolutePath": "contracts/AllocationStaking.sol",
					"exportedSymbols": {
						"Address": [
							1151
						],
						"AllocationStaking": [
							2325
						],
						"ContextUpgradeable": [
							494
						],
						"IERC20": [
							572
						],
						"IERC20Permit": [
							608
						],
						"ISalesFactory": [
							2342
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						],
						"SafeERC20": [
							898
						],
						"SafeMath": [
							2697
						]
					},
					"id": 2326,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1153,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "39:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1154,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2326,
							"sourceUnit": 573,
							"src": "65:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2326,
							"sourceUnit": 899,
							"src": "122:65:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/math/SafeMath.sol",
							"file": "./math/SafeMath.sol",
							"id": 1156,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2326,
							"sourceUnit": 2698,
							"src": "188:29:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1157,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2326,
							"sourceUnit": 195,
							"src": "218:75:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/ISalesFactory.sol",
							"file": "./interfaces/ISalesFactory.sol",
							"id": 1158,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2326,
							"sourceUnit": 2343,
							"src": "294:40:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1159,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"366:18:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "366:18:7"
									},
									"id": 1160,
									"nodeType": "InheritanceSpecifier",
									"src": "366:18:7"
								}
							],
							"canonicalName": "AllocationStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2325,
							"linearizedBaseContracts": [
								2325,
								194,
								494,
								448
							],
							"name": "AllocationStaking",
							"nameLocation": "345:17:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1163,
									"libraryName": {
										"id": 1161,
										"name": "SafeMath",
										"nameLocations": [
											"398:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2697,
										"src": "398:8:7"
									},
									"nodeType": "UsingForDirective",
									"src": "392:27:7",
									"typeName": {
										"id": 1162,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "411:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 1167,
									"libraryName": {
										"id": 1164,
										"name": "SafeERC20",
										"nameLocations": [
											"430:9:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 898,
										"src": "430:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "424:27:7",
									"typeName": {
										"id": 1166,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1165,
											"name": "IERC20",
											"nameLocations": [
												"444:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 572,
											"src": "444:6:7"
										},
										"referencedDeclaration": 572,
										"src": "444:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$572",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "AllocationStaking.UserInfo",
									"id": 1177,
									"members": [
										{
											"constant": false,
											"id": 1169,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "538:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 1177,
											"src": "530:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1168,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "530:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1171,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nameLocation": "645:10:7",
											"nodeType": "VariableDeclaration",
											"scope": 1177,
											"src": "637:18:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1170,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "637:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1173,
											"mutability": "mutable",
											"name": "tokensUnlockTime",
											"nameLocation": "1877:16:7",
											"nodeType": "VariableDeclaration",
											"scope": 1177,
											"src": "1869:24:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1172,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1869:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1176,
											"mutability": "mutable",
											"name": "salesRegistered",
											"nameLocation": "2044:15:7",
											"nodeType": "VariableDeclaration",
											"scope": 1177,
											"src": "2033:26:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2033:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1175,
												"nodeType": "ArrayTypeName",
												"src": "2033:10:7",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "511:8:7",
									"nodeType": "StructDefinition",
									"scope": 2325,
									"src": "504:1562:7",
									"visibility": "public"
								},
								{
									"canonicalName": "AllocationStaking.PoolInfo",
									"id": 1189,
									"members": [
										{
											"constant": false,
											"id": 1180,
											"mutability": "mutable",
											"name": "lpToken",
											"nameLocation": "2149:7:7",
											"nodeType": "VariableDeclaration",
											"scope": 1189,
											"src": "2142:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$572",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 1179,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1178,
													"name": "IERC20",
													"nameLocations": [
														"2142:6:7"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 572,
													"src": "2142:6:7"
												},
												"referencedDeclaration": 572,
												"src": "2142:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$572",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1182,
											"mutability": "mutable",
											"name": "allocPoint",
											"nameLocation": "2246:10:7",
											"nodeType": "VariableDeclaration",
											"scope": 1189,
											"src": "2238:18:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1181,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2238:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1184,
											"mutability": "mutable",
											"name": "lastRewardTimestamp",
											"nameLocation": "2430:19:7",
											"nodeType": "VariableDeclaration",
											"scope": 1189,
											"src": "2422:27:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1183,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2422:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1186,
											"mutability": "mutable",
											"name": "accERC20PerShare",
											"nameLocation": "2559:16:7",
											"nodeType": "VariableDeclaration",
											"scope": 1189,
											"src": "2551:24:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1185,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2551:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1188,
											"mutability": "mutable",
											"name": "totalDeposits",
											"nameLocation": "2675:13:7",
											"nodeType": "VariableDeclaration",
											"scope": 1189,
											"src": "2667:21:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1187,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2667:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nameLocation": "2123:8:7",
									"nodeType": "StructDefinition",
									"scope": 2325,
									"src": "2116:680:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "785e9e86",
									"id": 1192,
									"mutability": "mutable",
									"name": "erc20",
									"nameLocation": "2891:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 2325,
									"src": "2877:19:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$572",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1191,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1190,
											"name": "IERC20",
											"nameLocations": [
												"2877:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 572,
											"src": "2877:6:7"
										},
										"referencedDeclaration": 572,
										"src": "2877:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$572",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5c76ca2d",
									"id": 1194,
									"mutability": "mutable",
									"name": "paidOut",
									"nameLocation": "3014:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 2325,
									"src": "2999:22:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1193,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2999:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8f10369a",
									"id": 1196,
									"mutability": "mutable",
									"name": "rewardPerSecond",
									"nameLocation": "3114:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 2325,
									"src": "3099:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1195,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3099:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0e15561a",
									"id": 1198,
									"mutability": "mutable",
									"name": "totalRewards",
									"nameLocation": "3215:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 2325,
									"src": "3200:27:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1197,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3200:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ed95f07f",
									"id": 1201,
									"mutability": "mutable",
									"name": "salesFactory",
									"nameLocation": "3325:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 2325,
									"src": "3304:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISalesFactory_$2342",
										"typeString": "contract ISalesFactory"
									},
									"typeName": {
										"id": 1200,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1199,
											"name": "ISalesFactory",
											"nameLocations": [
												"3304:13:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2342,
											"src": "3304:13:7"
										},
										"referencedDeclaration": 2342,
										"src": "3304:13:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISalesFactory_$2342",
											"typeString": "contract ISalesFactory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1526fe27",
									"id": 1205,
									"mutability": "mutable",
									"name": "poolInfo",
									"nameLocation": "3408:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 2325,
									"src": "3390:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1189_storage_$dyn_storage",
										"typeString": "struct AllocationStaking.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 1203,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1202,
												"name": "PoolInfo",
												"nameLocations": [
													"3390:8:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1189,
												"src": "3390:8:7"
											},
											"referencedDeclaration": 1189,
											"src": "3390:8:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
												"typeString": "struct AllocationStaking.PoolInfo"
											}
										},
										"id": 1204,
										"nodeType": "ArrayTypeName",
										"src": "3390:10:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1189_storage_$dyn_storage_ptr",
											"typeString": "struct AllocationStaking.PoolInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "93f1a40b",
									"id": 1212,
									"mutability": "mutable",
									"name": "userInfo",
									"nameLocation": "3569:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 2325,
									"src": "3513:64:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1177_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct AllocationStaking.UserInfo))"
									},
									"typeName": {
										"id": 1211,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1206,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3521:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3513:48:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1177_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct AllocationStaking.UserInfo))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1210,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1207,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3540:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "3532:28:7",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1177_storage_$",
												"typeString": "mapping(address => struct AllocationStaking.UserInfo)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1209,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1208,
													"name": "UserInfo",
													"nameLocations": [
														"3551:8:7"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1177,
													"src": "3551:8:7"
												},
												"referencedDeclaration": 1177,
												"src": "3551:8:7",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
													"typeString": "struct AllocationStaking.UserInfo"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "17caf6f1",
									"id": 1214,
									"mutability": "mutable",
									"name": "totalAllocPoint",
									"nameLocation": "3748:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 2325,
									"src": "3733:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1213,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3733:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e6fd48bc",
									"id": 1216,
									"mutability": "mutable",
									"name": "startTimestamp",
									"nameLocation": "3854:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 2325,
									"src": "3839:29:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1215,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3839:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a85adeab",
									"id": 1218,
									"mutability": "mutable",
									"name": "endTimestamp",
									"nameLocation": "3956:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 2325,
									"src": "3941:27:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1217,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3941:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15",
									"id": 1226,
									"name": "Deposit",
									"nameLocation": "3995:7:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4019:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "4003:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4003:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "4041:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "4025:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4025:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4054:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "4046:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4046:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4002:59:7"
									},
									"src": "3989:73:7"
								},
								{
									"anonymous": false,
									"eventSelector": "f279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568",
									"id": 1234,
									"name": "Withdraw",
									"nameLocation": "4081:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4106:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "4090:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4090:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1230,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "4128:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "4112:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4112:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4141:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "4133:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4133:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4089:59:7"
									},
									"src": "4075:74:7"
								},
								{
									"anonymous": false,
									"eventSelector": "bb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595",
									"id": 1242,
									"name": "EmergencyWithdraw",
									"nameLocation": "4168:17:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4202:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "4186:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4186:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "4224:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "4208:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4208:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4237:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "4229:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4229:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4185:59:7"
									},
									"src": "4162:83:7"
								},
								{
									"anonymous": false,
									"eventSelector": "92f0bdf80f3916a4279540865e94ef327cf48639092106cca4bddc9bb1de4a86",
									"id": 1252,
									"name": "CompoundedEarnings",
									"nameLocation": "4270:18:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4305:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "4289:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4289:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "4327:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "4311:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4311:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountAdded",
												"nameLocation": "4340:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "4332:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4332:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalDeposited",
												"nameLocation": "4361:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "4353:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4353:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4288:88:7"
									},
									"src": "4264:113:7"
								},
								{
									"body": {
										"id": 1264,
										"nodeType": "Block",
										"src": "4520:126:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1257,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4579:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4583:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4579:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1255,
																	"name": "salesFactory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1201,
																	"src": "4538:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISalesFactory_$2342",
																		"typeString": "contract ISalesFactory"
																	}
																},
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4551:27:7",
																"memberName": "isSaleCreatedThroughFactory",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2341,
																"src": "4538:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view external returns (bool)"
																}
															},
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4538:52:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c65206e6f742063726561746564207468726f75676820666163746f72792e",
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4592:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f95e2b94b64afe2d9116800b91afd89844f4c614e9be6f53796fc62d9ae9798e",
																"typeString": "literal_string \"Sale not created through factory.\""
															},
															"value": "Sale not created through factory."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f95e2b94b64afe2d9116800b91afd89844f4c614e9be6f53796fc62d9ae9798e",
																"typeString": "literal_string \"Sale not created through factory.\""
															}
														],
														"id": 1254,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4530:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4530:98:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1262,
												"nodeType": "ExpressionStatement",
												"src": "4530:98:7"
											},
											{
												"id": 1263,
												"nodeType": "PlaceholderStatement",
												"src": "4638:1:7"
											}
										]
									},
									"id": 1265,
									"name": "onlyVerifiedSales",
									"nameLocation": "4502:17:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4520:0:7"
									},
									"src": "4493:153:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1307,
										"nodeType": "Block",
										"src": "4856:286:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1282,
															"name": "_ownable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "4881:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1281,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "4866:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4866:24:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1284,
												"nodeType": "ExpressionStatement",
												"src": "4866:24:7"
											},
											{
												"expression": {
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1285,
														"name": "erc20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "4901:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$572",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1286,
														"name": "_erc20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1270,
														"src": "4909:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$572",
															"typeString": "contract IERC20"
														}
													},
													"src": "4901:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$572",
														"typeString": "contract IERC20"
													}
												},
												"id": 1288,
												"nodeType": "ExpressionStatement",
												"src": "4901:14:7"
											},
											{
												"expression": {
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1289,
														"name": "rewardPerSecond",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1196,
														"src": "4925:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1290,
														"name": "_rewardPerSecond",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "4943:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4925:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1292,
												"nodeType": "ExpressionStatement",
												"src": "4925:34:7"
											},
											{
												"expression": {
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1293,
														"name": "startTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "4969:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1294,
														"name": "_startTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1274,
														"src": "4986:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4969:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1296,
												"nodeType": "ExpressionStatement",
												"src": "4969:32:7"
											},
											{
												"expression": {
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1297,
														"name": "endTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1218,
														"src": "5011:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1298,
														"name": "_startTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1274,
														"src": "5026:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5011:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1300,
												"nodeType": "ExpressionStatement",
												"src": "5011:30:7"
											},
											{
												"expression": {
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1301,
														"name": "salesFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "5092:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISalesFactory_$2342",
															"typeString": "contract ISalesFactory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1303,
																"name": "_salesFactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1276,
																"src": "5121:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1302,
															"name": "ISalesFactory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2342,
															"src": "5107:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISalesFactory_$2342_$",
																"typeString": "type(contract ISalesFactory)"
															}
														},
														"id": 1304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5107:28:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISalesFactory_$2342",
															"typeString": "contract ISalesFactory"
														}
													},
													"src": "5092:43:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISalesFactory_$2342",
														"typeString": "contract ISalesFactory"
													}
												},
												"id": 1306,
												"nodeType": "ExpressionStatement",
												"src": "5092:43:7"
											}
										]
									},
									"functionSelector": "57fb25cc",
									"id": 1308,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1279,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1278,
												"name": "initializer",
												"nameLocations": [
													"4829:11:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "4829:11:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4829:11:7"
										}
									],
									"name": "initialize",
									"nameLocation": "4661:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "_ownable",
												"nameLocation": "4689:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "4681:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4681:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "_erc20",
												"nameLocation": "4714:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "4707:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$572",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1269,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1268,
														"name": "IERC20",
														"nameLocations": [
															"4707:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 572,
														"src": "4707:6:7"
													},
													"referencedDeclaration": 572,
													"src": "4707:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$572",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "_rewardPerSecond",
												"nameLocation": "4738:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "4730:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4730:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "_startTimestamp",
												"nameLocation": "4772:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "4764:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4764:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "_salesFactory",
												"nameLocation": "4805:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "4797:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4797:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4671:153:7"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4856:0:7"
									},
									"scope": 2325,
									"src": "4652:490:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "5389:106:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1316,
																"name": "_salesFactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1310,
																"src": "5407:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5432:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5424:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1317,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5424:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5424:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5407:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5399:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5399:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1323,
												"nodeType": "ExpressionStatement",
												"src": "5399:36:7"
											},
											{
												"expression": {
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1324,
														"name": "salesFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "5445:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISalesFactory_$2342",
															"typeString": "contract ISalesFactory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1326,
																"name": "_salesFactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1310,
																"src": "5474:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1325,
															"name": "ISalesFactory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2342,
															"src": "5460:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISalesFactory_$2342_$",
																"typeString": "type(contract ISalesFactory)"
															}
														},
														"id": 1327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5460:28:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISalesFactory_$2342",
															"typeString": "contract ISalesFactory"
														}
													},
													"src": "5445:43:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISalesFactory_$2342",
														"typeString": "contract ISalesFactory"
													}
												},
												"id": 1329,
												"nodeType": "ExpressionStatement",
												"src": "5445:43:7"
											}
										]
									},
									"functionSelector": "3dfcb861",
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1313,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1312,
												"name": "onlyOwner",
												"nameLocations": [
													"5379:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "5379:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5379:9:7"
										}
									],
									"name": "setSalesFactory",
									"nameLocation": "5331:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "_salesFactory",
												"nameLocation": "5355:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "5347:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5347:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5346:23:7"
									},
									"returnParameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5389:0:7"
									},
									"scope": 2325,
									"src": "5322:173:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1339,
										"nodeType": "Block",
										"src": "5581:39:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1336,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "5598:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1189_storage_$dyn_storage",
															"typeString": "struct AllocationStaking.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5607:6:7",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "5598:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1335,
												"id": 1338,
												"nodeType": "Return",
												"src": "5591:22:7"
											}
										]
									},
									"functionSelector": "081e3eda",
									"id": 1340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "poolLength",
									"nameLocation": "5536:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5546:2:7"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "5572:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5572:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5571:9:7"
									},
									"scope": 2325,
									"src": "5527:93:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1382,
										"nodeType": "Block",
										"src": "5744:275:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1346,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5762:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5768:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "5762:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1348,
																"name": "endTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1218,
																"src": "5780:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5762:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "66756e643a20746f6f206c6174652c20746865206661726d20697320636c6f736564",
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5794:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0",
																"typeString": "literal_string \"fund: too late, the farm is closed\""
															},
															"value": "fund: too late, the farm is closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0",
																"typeString": "literal_string \"fund: too late, the farm is closed\""
															}
														],
														"id": 1345,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5754:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5754:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1352,
												"nodeType": "ExpressionStatement",
												"src": "5754:77:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1358,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5872:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5876:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5872:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5864:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1356,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5864:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5864:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1363,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5893:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AllocationStaking_$2325",
																		"typeString": "contract AllocationStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AllocationStaking_$2325",
																		"typeString": "contract AllocationStaking"
																	}
																],
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5885:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1361,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5885:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5885:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1365,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "5900:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1353,
															"name": "erc20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "5841:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$572",
																"typeString": "contract IERC20"
															}
														},
														"id": 1355,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5847:16:7",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 685,
														"src": "5841:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$572_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$572_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5841:67:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1367,
												"nodeType": "ExpressionStatement",
												"src": "5841:67:7"
											},
											{
												"expression": {
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1368,
														"name": "endTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1218,
														"src": "5918:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1371,
																"name": "rewardPerSecond",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "5946:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1369,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1342,
																"src": "5934:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5942:3:7",
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2602,
															"src": "5934:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5934:28:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5918:44:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1374,
												"nodeType": "ExpressionStatement",
												"src": "5918:44:7"
											},
											{
												"expression": {
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1375,
														"name": "totalRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "5972:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1378,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1342,
																"src": "6004:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1376,
																"name": "totalRewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1198,
																"src": "5987:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6000:3:7",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2524,
															"src": "5987:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5987:25:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5972:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1381,
												"nodeType": "ExpressionStatement",
												"src": "5972:40:7"
											}
										]
									},
									"functionSelector": "ca1d209d",
									"id": 1383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fund",
									"nameLocation": "5715:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5728:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "5720:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5720:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5719:17:7"
									},
									"returnParameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5744:0:7"
									},
									"scope": 2325,
									"src": "5706:313:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1431,
										"nodeType": "Block",
										"src": "6411:508:7",
										"statements": [
											{
												"condition": {
													"id": 1395,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1390,
													"src": "6425:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1400,
												"nodeType": "IfStatement",
												"src": "6421:59:7",
												"trueBody": {
													"id": 1399,
													"nodeType": "Block",
													"src": "6438:42:7",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1396,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1658,
																	"src": "6452:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6452:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1398,
															"nodeType": "ExpressionStatement",
															"src": "6452:17:7"
														}
													]
												}
											},
											{
												"assignments": [
													1402
												],
												"declarations": [
													{
														"constant": false,
														"id": 1402,
														"mutability": "mutable",
														"name": "lastRewardTimestamp",
														"nameLocation": "6497:19:7",
														"nodeType": "VariableDeclaration",
														"scope": 1431,
														"src": "6489:27:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1401,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6489:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1411,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1403,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6519:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6525:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6519:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1405,
															"name": "startTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "6537:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6519:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1409,
														"name": "startTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "6572:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6519:67:7",
													"trueExpression": {
														"expression": {
															"id": 1407,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6554:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6560:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "6554:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6489:97:7"
											},
											{
												"expression": {
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1412,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "6596:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1415,
																"name": "_allocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1385,
																"src": "6634:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1413,
																"name": "totalAllocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1214,
																"src": "6614:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6630:3:7",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2524,
															"src": "6614:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6614:32:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6596:50:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1418,
												"nodeType": "ExpressionStatement",
												"src": "6596:50:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1423,
																	"name": "_lpToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1388,
																	"src": "6741:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$572",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1424,
																	"name": "_allocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "6772:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1425,
																	"name": "lastRewardTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1402,
																	"src": "6815:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6863:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"hexValue": "30",
																	"id": 1427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6890:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$572",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1422,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1189,
																"src": "6712:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$1189_storage_ptr_$",
																	"typeString": "type(struct AllocationStaking.PoolInfo storage pointer)"
																}
															},
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"6731:7:7",
																"6759:10:7",
																"6793:19:7",
																"6844:16:7",
																"6874:13:7"
															],
															"names": [
																"lpToken",
																"allocPoint",
																"lastRewardTimestamp",
																"accERC20PerShare",
																"totalDeposits"
															],
															"nodeType": "FunctionCall",
															"src": "6712:190:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1189_memory_ptr",
																"typeString": "struct AllocationStaking.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$1189_memory_ptr",
																"typeString": "struct AllocationStaking.PoolInfo memory"
															}
														],
														"expression": {
															"id": 1419,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "6685:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1189_storage_$dyn_storage",
																"typeString": "struct AllocationStaking.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6694:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "6685:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$1189_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$1189_storage_$returns$__$attached_to$_t_array$_t_struct$_PoolInfo_$1189_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct AllocationStaking.PoolInfo storage ref[] storage pointer,struct AllocationStaking.PoolInfo storage ref)"
														}
													},
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6685:227:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1430,
												"nodeType": "ExpressionStatement",
												"src": "6685:227:7"
											}
										]
									},
									"functionSelector": "1eaaa045",
									"id": 1432,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1393,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1392,
												"name": "onlyOwner",
												"nameLocations": [
													"6401:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "6401:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6401:9:7"
										}
									],
									"name": "add",
									"nameLocation": "6334:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "6346:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "6338:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "_lpToken",
												"nameLocation": "6366:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "6359:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$572",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1387,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1386,
														"name": "IERC20",
														"nameLocations": [
															"6359:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 572,
														"src": "6359:6:7"
													},
													"referencedDeclaration": 572,
													"src": "6359:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$572",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "6381:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "6376:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1389,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6376:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6337:56:7"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6411:0:7"
									},
									"scope": 2325,
									"src": "6325:594:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1469,
										"nodeType": "Block",
										"src": "7167:215:7",
										"statements": [
											{
												"condition": {
													"id": 1443,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1438,
													"src": "7181:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1448,
												"nodeType": "IfStatement",
												"src": "7177:59:7",
												"trueBody": {
													"id": 1447,
													"nodeType": "Block",
													"src": "7194:42:7",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1444,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1658,
																	"src": "7208:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7208:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1446,
															"nodeType": "ExpressionStatement",
															"src": "7208:17:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1449,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "7245:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1458,
																"name": "_allocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1436,
																"src": "7314:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1452,
																				"name": "poolInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1205,
																				"src": "7283:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1189_storage_$dyn_storage",
																					"typeString": "struct AllocationStaking.PoolInfo storage ref[] storage ref"
																				}
																			},
																			"id": 1454,
																			"indexExpression": {
																				"id": 1453,
																				"name": "_pid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1434,
																				"src": "7292:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7283:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1189_storage",
																				"typeString": "struct AllocationStaking.PoolInfo storage ref"
																			}
																		},
																		"id": 1455,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7298:10:7",
																		"memberName": "allocPoint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1182,
																		"src": "7283:25:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1450,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1214,
																		"src": "7263:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7279:3:7",
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2546,
																	"src": "7263:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7263:46:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7310:3:7",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2524,
															"src": "7263:50:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1459,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7263:63:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7245:81:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1461,
												"nodeType": "ExpressionStatement",
												"src": "7245:81:7"
											},
											{
												"expression": {
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1462,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1205,
																"src": "7336:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1189_storage_$dyn_storage",
																	"typeString": "struct AllocationStaking.PoolInfo storage ref[] storage ref"
																}
															},
															"id": 1464,
															"indexExpression": {
																"id": 1463,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1434,
																"src": "7345:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7336:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1189_storage",
																"typeString": "struct AllocationStaking.PoolInfo storage ref"
															}
														},
														"id": 1465,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7351:10:7",
														"memberName": "allocPoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1182,
														"src": "7336:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1466,
														"name": "_allocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1436,
														"src": "7364:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7336:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1468,
												"nodeType": "ExpressionStatement",
												"src": "7336:39:7"
											}
										]
									},
									"functionSelector": "64482f79",
									"id": 1470,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1441,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1440,
												"name": "onlyOwner",
												"nameLocations": [
													"7157:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "7157:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "7157:9:7"
										}
									],
									"name": "set",
									"nameLocation": "7093:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "7105:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "7097:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "7119:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "7111:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7111:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "7137:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "7132:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1437,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7132:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7096:53:7"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7167:0:7"
									},
									"scope": 2325,
									"src": "7084:298:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1491,
										"nodeType": "Block",
										"src": "7519:90:7",
										"statements": [
											{
												"assignments": [
													1481
												],
												"declarations": [
													{
														"constant": false,
														"id": 1481,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "7546:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1491,
														"src": "7529:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
															"typeString": "struct AllocationStaking.UserInfo"
														},
														"typeName": {
															"id": 1480,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1479,
																"name": "UserInfo",
																"nameLocations": [
																	"7529:8:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1177,
																"src": "7529:8:7"
															},
															"referencedDeclaration": 1177,
															"src": "7529:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																"typeString": "struct AllocationStaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1487,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1482,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "7553:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1177_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct AllocationStaking.UserInfo storage ref))"
															}
														},
														"id": 1484,
														"indexExpression": {
															"id": 1483,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "7562:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7553:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1177_storage_$",
															"typeString": "mapping(address => struct AllocationStaking.UserInfo storage ref)"
														}
													},
													"id": 1486,
													"indexExpression": {
														"id": 1485,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1474,
														"src": "7568:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7553:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1177_storage",
														"typeString": "struct AllocationStaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7529:45:7"
											},
											{
												"expression": {
													"expression": {
														"id": 1488,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1481,
														"src": "7591:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
															"typeString": "struct AllocationStaking.UserInfo storage pointer"
														}
													},
													"id": 1489,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7596:6:7",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1169,
													"src": "7591:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1478,
												"id": 1490,
												"nodeType": "Return",
												"src": "7584:18:7"
											}
										]
									},
									"functionSelector": "a2383106",
									"id": 1492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposited",
									"nameLocation": "7450:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "7468:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "7460:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7460:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "7482:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "7474:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7474:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7459:29:7"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "7510:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7510:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7509:9:7"
									},
									"scope": 2325,
									"src": "7441:168:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1597,
										"nodeType": "Block",
										"src": "7777:797:7",
										"statements": [
											{
												"assignments": [
													1503
												],
												"declarations": [
													{
														"constant": false,
														"id": 1503,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "7804:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1597,
														"src": "7787:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
															"typeString": "struct AllocationStaking.PoolInfo"
														},
														"typeName": {
															"id": 1502,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1501,
																"name": "PoolInfo",
																"nameLocations": [
																	"7787:8:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1189,
																"src": "7787:8:7"
															},
															"referencedDeclaration": 1189,
															"src": "7787:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																"typeString": "struct AllocationStaking.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1507,
												"initialValue": {
													"baseExpression": {
														"id": 1504,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "7811:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1189_storage_$dyn_storage",
															"typeString": "struct AllocationStaking.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1506,
													"indexExpression": {
														"id": 1505,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "7820:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7811:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1189_storage",
														"typeString": "struct AllocationStaking.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7787:38:7"
											},
											{
												"assignments": [
													1510
												],
												"declarations": [
													{
														"constant": false,
														"id": 1510,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "7852:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1597,
														"src": "7835:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
															"typeString": "struct AllocationStaking.UserInfo"
														},
														"typeName": {
															"id": 1509,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1508,
																"name": "UserInfo",
																"nameLocations": [
																	"7835:8:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1177,
																"src": "7835:8:7"
															},
															"referencedDeclaration": 1177,
															"src": "7835:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																"typeString": "struct AllocationStaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1516,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1511,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "7859:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1177_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct AllocationStaking.UserInfo storage ref))"
															}
														},
														"id": 1513,
														"indexExpression": {
															"id": 1512,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "7868:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7859:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1177_storage_$",
															"typeString": "mapping(address => struct AllocationStaking.UserInfo storage ref)"
														}
													},
													"id": 1515,
													"indexExpression": {
														"id": 1514,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1496,
														"src": "7874:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7859:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1177_storage",
														"typeString": "struct AllocationStaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7835:45:7"
											},
											{
												"assignments": [
													1518
												],
												"declarations": [
													{
														"constant": false,
														"id": 1518,
														"mutability": "mutable",
														"name": "accERC20PerShare",
														"nameLocation": "7898:16:7",
														"nodeType": "VariableDeclaration",
														"scope": 1597,
														"src": "7890:24:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1517,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7890:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1521,
												"initialValue": {
													"expression": {
														"id": 1519,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1503,
														"src": "7917:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
															"typeString": "struct AllocationStaking.PoolInfo storage pointer"
														}
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7922:16:7",
													"memberName": "accERC20PerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1186,
													"src": "7917:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7890:48:7"
											},
											{
												"assignments": [
													1523
												],
												"declarations": [
													{
														"constant": false,
														"id": 1523,
														"mutability": "mutable",
														"name": "lpSupply",
														"nameLocation": "7957:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1597,
														"src": "7949:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1522,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7949:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1526,
												"initialValue": {
													"expression": {
														"id": 1524,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1503,
														"src": "7968:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
															"typeString": "struct AllocationStaking.PoolInfo storage pointer"
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7973:13:7",
													"memberName": "totalDeposits",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1188,
													"src": "7968:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7949:37:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1527,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "8035:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8041:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "8035:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 1529,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1503,
																"src": "8053:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																	"typeString": "struct AllocationStaking.PoolInfo storage pointer"
																}
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8058:19:7",
															"memberName": "lastRewardTimestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1184,
															"src": "8053:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8035:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1532,
															"name": "lpSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "8081:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8093:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8081:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8035:59:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1583,
												"nodeType": "IfStatement",
												"src": "8031:456:7",
												"trueBody": {
													"id": 1582,
													"nodeType": "Block",
													"src": "8096:391:7",
													"statements": [
														{
															"assignments": [
																1537
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1537,
																	"mutability": "mutable",
																	"name": "lastTimestamp",
																	"nameLocation": "8118:13:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1582,
																	"src": "8110:21:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1536,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8110:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1546,
															"initialValue": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1538,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "8134:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8140:9:7",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "8134:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"id": 1540,
																		"name": "endTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1218,
																		"src": "8152:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8134:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"id": 1544,
																	"name": "endTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1218,
																	"src": "8185:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "8134:63:7",
																"trueExpression": {
																	"expression": {
																		"id": 1542,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "8167:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8173:9:7",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "8167:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8110:87:7"
														},
														{
															"assignments": [
																1548
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1548,
																	"mutability": "mutable",
																	"name": "nrOfSeconds",
																	"nameLocation": "8219:11:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1582,
																	"src": "8211:19:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1547,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8211:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1554,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1551,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1503,
																			"src": "8251:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																				"typeString": "struct AllocationStaking.PoolInfo storage pointer"
																			}
																		},
																		"id": 1552,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8256:19:7",
																		"memberName": "lastRewardTimestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1184,
																		"src": "8251:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1549,
																		"name": "lastTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1537,
																		"src": "8233:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8247:3:7",
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2546,
																	"src": "8233:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8233:43:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8211:65:7"
														},
														{
															"assignments": [
																1556
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1556,
																	"mutability": "mutable",
																	"name": "erc20Reward",
																	"nameLocation": "8298:11:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1582,
																	"src": "8290:19:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1555,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8290:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1568,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1566,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1214,
																		"src": "8370:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1562,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1503,
																					"src": "8349:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																						"typeString": "struct AllocationStaking.PoolInfo storage pointer"
																					}
																				},
																				"id": 1563,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8354:10:7",
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1182,
																				"src": "8349:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1559,
																						"name": "rewardPerSecond",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1196,
																						"src": "8328:15:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1557,
																						"name": "nrOfSeconds",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1548,
																						"src": "8312:11:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1558,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "8324:3:7",
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2580,
																					"src": "8312:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1560,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8312:32:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8345:3:7",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2580,
																			"src": "8312:36:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8312:53:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8366:3:7",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2602,
																	"src": "8312:57:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8312:74:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8290:96:7"
														},
														{
															"expression": {
																"id": 1580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1569,
																	"name": "accERC20PerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1518,
																	"src": "8400:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1577,
																					"name": "lpSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1523,
																					"src": "8466:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653336",
																							"id": 1574,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8456:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
																								"typeString": "int_const 1000...(29 digits omitted)...0000"
																							},
																							"value": "1e36"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
																								"typeString": "int_const 1000...(29 digits omitted)...0000"
																							}
																						],
																						"expression": {
																							"id": 1572,
																							"name": "erc20Reward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1556,
																							"src": "8440:11:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1573,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "8452:3:7",
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2580,
																						"src": "8440:15:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1575,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8440:21:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1576,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8462:3:7",
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2602,
																				"src": "8440:25:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8440:35:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1570,
																			"name": "accERC20PerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1518,
																			"src": "8419:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8436:3:7",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2524,
																		"src": "8419:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8419:57:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8400:76:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1581,
															"nodeType": "ExpressionStatement",
															"src": "8400:76:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1593,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1510,
																"src": "8551:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																	"typeString": "struct AllocationStaking.UserInfo storage pointer"
																}
															},
															"id": 1594,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8556:10:7",
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1171,
															"src": "8551:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653336",
																	"id": 1590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8541:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
																		"typeString": "int_const 1000...(29 digits omitted)...0000"
																	},
																	"value": "1e36"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
																		"typeString": "int_const 1000...(29 digits omitted)...0000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1587,
																			"name": "accERC20PerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1518,
																			"src": "8519:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1584,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1510,
																				"src": "8503:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																					"typeString": "struct AllocationStaking.UserInfo storage pointer"
																				}
																			},
																			"id": 1585,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8508:6:7",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1169,
																			"src": "8503:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8515:3:7",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2580,
																		"src": "8503:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8503:33:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8537:3:7",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2602,
																"src": "8503:37:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8503:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1592,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8547:3:7",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2546,
														"src": "8503:47:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8503:64:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1500,
												"id": 1596,
												"nodeType": "Return",
												"src": "8496:71:7"
											}
										]
									},
									"functionSelector": "e4c75c27",
									"id": 1598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pending",
									"nameLocation": "7710:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "7726:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "7718:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7718:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "7740:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "7732:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7732:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7717:29:7"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "7768:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7768:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7767:9:7"
									},
									"scope": 2325,
									"src": "7701:873:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1632,
										"nodeType": "Block",
										"src": "9158:267:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1603,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "9172:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1604,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9178:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "9172:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1605,
														"name": "startTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "9191:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9172:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1610,
												"nodeType": "IfStatement",
												"src": "9168:72:7",
												"trueBody": {
													"id": 1609,
													"nodeType": "Block",
													"src": "9207:33:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9228:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1602,
															"id": 1608,
															"nodeType": "Return",
															"src": "9221:8:7"
														}
													]
												}
											},
											{
												"assignments": [
													1612
												],
												"declarations": [
													{
														"constant": false,
														"id": 1612,
														"mutability": "mutable",
														"name": "lastTimestamp",
														"nameLocation": "9258:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1632,
														"src": "9250:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1611,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9250:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1621,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1616,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1613,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "9274:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9280:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "9274:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1615,
															"name": "endTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "9292:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9274:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1619,
														"name": "endTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1218,
														"src": "9325:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "9274:63:7",
													"trueExpression": {
														"expression": {
															"id": 1617,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "9307:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9313:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "9307:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9250:87:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1629,
															"name": "paidOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1194,
															"src": "9410:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1624,
																		"name": "lastTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1612,
																		"src": "9374:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1625,
																		"name": "startTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1216,
																		"src": "9390:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9374:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1622,
																	"name": "rewardPerSecond",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "9354:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9370:3:7",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2580,
																"src": "9354:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9354:51:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9406:3:7",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2546,
														"src": "9354:55:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9354:64:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1602,
												"id": 1631,
												"nodeType": "Return",
												"src": "9347:71:7"
											}
										]
									},
									"functionSelector": "3f90916a",
									"id": 1633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalPending",
									"nameLocation": "9111:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9123:2:7"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "9149:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9149:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9148:9:7"
									},
									"scope": 2325,
									"src": "9102:323:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1657,
										"nodeType": "Block",
										"src": "9599:141:7",
										"statements": [
											{
												"assignments": [
													1637
												],
												"declarations": [
													{
														"constant": false,
														"id": 1637,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "9617:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1657,
														"src": "9609:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1636,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9609:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1640,
												"initialValue": {
													"expression": {
														"id": 1638,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "9626:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1189_storage_$dyn_storage",
															"typeString": "struct AllocationStaking.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "9635:6:7",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "9626:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9609:32:7"
											},
											{
												"body": {
													"id": 1655,
													"nodeType": "Block",
													"src": "9694:40:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1652,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1642,
																		"src": "9719:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1651,
																	"name": "updatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1798,
																	"src": "9708:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9708:15:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1654,
															"nodeType": "ExpressionStatement",
															"src": "9708:15:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1645,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1642,
														"src": "9673:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1646,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1637,
														"src": "9679:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9673:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1656,
												"initializationExpression": {
													"assignments": [
														1642
													],
													"declarations": [
														{
															"constant": false,
															"id": 1642,
															"mutability": "mutable",
															"name": "pid",
															"nameLocation": "9664:3:7",
															"nodeType": "VariableDeclaration",
															"scope": 1656,
															"src": "9656:11:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1641,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9656:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1644,
													"initialValue": {
														"hexValue": "30",
														"id": 1643,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9670:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9656:15:7"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "9687:5:7",
														"subExpression": {
															"id": 1648,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "9689:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1650,
													"nodeType": "ExpressionStatement",
													"src": "9687:5:7"
												},
												"nodeType": "ForStatement",
												"src": "9651:83:7"
											}
										]
									},
									"functionSelector": "630b5ba1",
									"id": 1658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "massUpdatePools",
									"nameLocation": "9574:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9589:2:7"
									},
									"returnParameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9599:0:7"
									},
									"scope": 2325,
									"src": "9565:175:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1701,
										"nodeType": "Block",
										"src": "9858:424:7",
										"statements": [
											{
												"assignments": [
													1671
												],
												"declarations": [
													{
														"constant": false,
														"id": 1671,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "9885:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1701,
														"src": "9868:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
															"typeString": "struct AllocationStaking.UserInfo"
														},
														"typeName": {
															"id": 1670,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1669,
																"name": "UserInfo",
																"nameLocations": [
																	"9868:8:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1177,
																"src": "9868:8:7"
															},
															"referencedDeclaration": 1177,
															"src": "9868:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																"typeString": "struct AllocationStaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1677,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1672,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "9892:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1177_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct AllocationStaking.UserInfo storage ref))"
															}
														},
														"id": 1674,
														"indexExpression": {
															"id": 1673,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "9901:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9892:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1177_storage_$",
															"typeString": "mapping(address => struct AllocationStaking.UserInfo storage ref)"
														}
													},
													"id": 1676,
													"indexExpression": {
														"id": 1675,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1662,
														"src": "9907:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9892:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1177_storage",
														"typeString": "struct AllocationStaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9868:45:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1679,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1671,
																	"src": "10022:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																		"typeString": "struct AllocationStaking.UserInfo storage pointer"
																	}
																},
																"id": 1680,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10027:16:7",
																"memberName": "tokensUnlockTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1173,
																"src": "10022:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1681,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "10047:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10053:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "10047:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10022:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1678,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10014:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10014:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1685,
												"nodeType": "ExpressionStatement",
												"src": "10014:49:7"
											},
											{
												"expression": {
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1686,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "10073:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																"typeString": "struct AllocationStaking.UserInfo storage pointer"
															}
														},
														"id": 1688,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10078:16:7",
														"memberName": "tokensUnlockTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1173,
														"src": "10073:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1689,
														"name": "_tokensUnlockTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "10097:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10073:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1691,
												"nodeType": "ExpressionStatement",
												"src": "10073:41:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1697,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10264:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10268:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10264:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1692,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1671,
																"src": "10238:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																	"typeString": "struct AllocationStaking.UserInfo storage pointer"
																}
															},
															"id": 1695,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10243:15:7",
															"memberName": "salesRegistered",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1176,
															"src": "10238:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10259:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "10238:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10238:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1700,
												"nodeType": "ExpressionStatement",
												"src": "10238:37:7"
											}
										]
									},
									"functionSelector": "e6f04acc",
									"id": 1702,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1667,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1666,
												"name": "onlyVerifiedSales",
												"nameLocations": [
													"9840:17:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1265,
												"src": "9840:17:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "9840:17:7"
										}
									],
									"name": "setTokensUnlockTime",
									"nameLocation": "9755:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "9783:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "9775:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9775:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "9797:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "9789:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9789:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "_tokensUnlockTime",
												"nameLocation": "9812:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "9804:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9804:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9774:56:7"
									},
									"returnParameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9858:0:7"
									},
									"scope": 2325,
									"src": "9746:536:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1797,
										"nodeType": "Block",
										"src": "10466:850:7",
										"statements": [
											{
												"assignments": [
													1709
												],
												"declarations": [
													{
														"constant": false,
														"id": 1709,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "10493:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1797,
														"src": "10476:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
															"typeString": "struct AllocationStaking.PoolInfo"
														},
														"typeName": {
															"id": 1708,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1707,
																"name": "PoolInfo",
																"nameLocations": [
																	"10476:8:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1189,
																"src": "10476:8:7"
															},
															"referencedDeclaration": 1189,
															"src": "10476:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																"typeString": "struct AllocationStaking.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1713,
												"initialValue": {
													"baseExpression": {
														"id": 1710,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "10500:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1189_storage_$dyn_storage",
															"typeString": "struct AllocationStaking.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1712,
													"indexExpression": {
														"id": 1711,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1704,
														"src": "10509:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10500:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1189_storage",
														"typeString": "struct AllocationStaking.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10476:38:7"
											},
											{
												"assignments": [
													1715
												],
												"declarations": [
													{
														"constant": false,
														"id": 1715,
														"mutability": "mutable",
														"name": "lastTimestamp",
														"nameLocation": "10533:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1797,
														"src": "10525:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1714,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10525:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1724,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1716,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "10549:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10555:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "10549:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1718,
															"name": "endTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "10567:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10549:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1722,
														"name": "endTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1218,
														"src": "10600:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "10549:63:7",
													"trueExpression": {
														"expression": {
															"id": 1720,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "10582:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10588:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "10582:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10525:87:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1725,
														"name": "lastTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1715,
														"src": "10627:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 1726,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1709,
															"src": "10644:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																"typeString": "struct AllocationStaking.PoolInfo storage pointer"
															}
														},
														"id": 1727,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10649:19:7",
														"memberName": "lastRewardTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1184,
														"src": "10644:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10627:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1735,
												"nodeType": "IfStatement",
												"src": "10623:112:7",
												"trueBody": {
													"id": 1734,
													"nodeType": "Block",
													"src": "10670:65:7",
													"statements": [
														{
															"expression": {
																"id": 1732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1729,
																	"name": "lastTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1715,
																	"src": "10684:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1730,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1709,
																		"src": "10700:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																			"typeString": "struct AllocationStaking.PoolInfo storage pointer"
																		}
																	},
																	"id": 1731,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10705:19:7",
																	"memberName": "lastRewardTimestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1184,
																	"src": "10700:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10684:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1733,
															"nodeType": "ExpressionStatement",
															"src": "10684:40:7"
														}
													]
												}
											},
											{
												"assignments": [
													1737
												],
												"declarations": [
													{
														"constant": false,
														"id": 1737,
														"mutability": "mutable",
														"name": "lpSupply",
														"nameLocation": "10753:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1797,
														"src": "10745:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1736,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10745:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1740,
												"initialValue": {
													"expression": {
														"id": 1738,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1709,
														"src": "10764:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
															"typeString": "struct AllocationStaking.PoolInfo storage pointer"
														}
													},
													"id": 1739,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "10769:13:7",
													"memberName": "totalDeposits",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1188,
													"src": "10764:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10745:37:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1741,
														"name": "lpSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1737,
														"src": "10797:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10809:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10797:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1752,
												"nodeType": "IfStatement",
												"src": "10793:104:7",
												"trueBody": {
													"id": 1751,
													"nodeType": "Block",
													"src": "10812:85:7",
													"statements": [
														{
															"expression": {
																"id": 1748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1744,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1709,
																		"src": "10826:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																			"typeString": "struct AllocationStaking.PoolInfo storage pointer"
																		}
																	},
																	"id": 1746,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "10831:19:7",
																	"memberName": "lastRewardTimestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1184,
																	"src": "10826:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1747,
																	"name": "lastTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1715,
																	"src": "10853:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10826:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1749,
															"nodeType": "ExpressionStatement",
															"src": "10826:40:7"
														},
														{
															"functionReturnParameters": 1706,
															"id": 1750,
															"nodeType": "Return",
															"src": "10880:7:7"
														}
													]
												}
											},
											{
												"assignments": [
													1754
												],
												"declarations": [
													{
														"constant": false,
														"id": 1754,
														"mutability": "mutable",
														"name": "nrOfSeconds",
														"nameLocation": "10915:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1797,
														"src": "10907:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1753,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10907:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1760,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1757,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1709,
																"src": "10947:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																	"typeString": "struct AllocationStaking.PoolInfo storage pointer"
																}
															},
															"id": 1758,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10952:19:7",
															"memberName": "lastRewardTimestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1184,
															"src": "10947:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1755,
															"name": "lastTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1715,
															"src": "10929:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1756,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10943:3:7",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2546,
														"src": "10929:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10929:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10907:65:7"
											},
											{
												"assignments": [
													1762
												],
												"declarations": [
													{
														"constant": false,
														"id": 1762,
														"mutability": "mutable",
														"name": "erc20Reward",
														"nameLocation": "10990:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1797,
														"src": "10982:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1761,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10982:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1774,
												"initialValue": {
													"arguments": [
														{
															"id": 1772,
															"name": "totalAllocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "11062:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1768,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1709,
																		"src": "11041:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																			"typeString": "struct AllocationStaking.PoolInfo storage pointer"
																		}
																	},
																	"id": 1769,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11046:10:7",
																	"memberName": "allocPoint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1182,
																	"src": "11041:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1765,
																			"name": "rewardPerSecond",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1196,
																			"src": "11020:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1763,
																			"name": "nrOfSeconds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1754,
																			"src": "11004:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11016:3:7",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2580,
																		"src": "11004:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11004:32:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11037:3:7",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2580,
																"src": "11004:36:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11004:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11058:3:7",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2602,
														"src": "11004:57:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11004:74:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10982:96:7"
											},
											{
												"expression": {
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1775,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1709,
															"src": "11129:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																"typeString": "struct AllocationStaking.PoolInfo storage pointer"
															}
														},
														"id": 1777,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11134:16:7",
														"memberName": "accERC20PerShare",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1186,
														"src": "11129:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1786,
																		"name": "lpSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1737,
																		"src": "11205:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653336",
																				"id": 1783,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11195:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
																					"typeString": "int_const 1000...(29 digits omitted)...0000"
																				},
																				"value": "1e36"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
																					"typeString": "int_const 1000...(29 digits omitted)...0000"
																				}
																			],
																			"expression": {
																				"id": 1781,
																				"name": "erc20Reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1762,
																				"src": "11179:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1782,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "11191:3:7",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2580,
																			"src": "11179:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11179:21:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11201:3:7",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2602,
																	"src": "11179:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11179:35:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1778,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1709,
																	"src": "11153:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																		"typeString": "struct AllocationStaking.PoolInfo storage pointer"
																	}
																},
																"id": 1779,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11158:16:7",
																"memberName": "accERC20PerShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1186,
																"src": "11153:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11175:3:7",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2524,
															"src": "11153:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11153:62:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11129:86:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1790,
												"nodeType": "ExpressionStatement",
												"src": "11129:86:7"
											},
											{
												"expression": {
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1791,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1709,
															"src": "11269:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																"typeString": "struct AllocationStaking.PoolInfo storage pointer"
															}
														},
														"id": 1793,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11274:19:7",
														"memberName": "lastRewardTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1184,
														"src": "11269:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1794,
														"name": "lastTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1715,
														"src": "11296:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11269:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1796,
												"nodeType": "ExpressionStatement",
												"src": "11269:40:7"
											}
										]
									},
									"functionSelector": "51eb05a6",
									"id": 1798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nameLocation": "10434:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "10453:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "10445:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10445:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10444:14:7"
									},
									"returnParameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10466:0:7"
									},
									"scope": 2325,
									"src": "10425:891:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1916,
										"nodeType": "Block",
										"src": "11482:1085:7",
										"statements": [
											{
												"assignments": [
													1807
												],
												"declarations": [
													{
														"constant": false,
														"id": 1807,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "11509:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1916,
														"src": "11492:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
															"typeString": "struct AllocationStaking.PoolInfo"
														},
														"typeName": {
															"id": 1806,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1805,
																"name": "PoolInfo",
																"nameLocations": [
																	"11492:8:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1189,
																"src": "11492:8:7"
															},
															"referencedDeclaration": 1189,
															"src": "11492:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																"typeString": "struct AllocationStaking.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1811,
												"initialValue": {
													"baseExpression": {
														"id": 1808,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "11516:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1189_storage_$dyn_storage",
															"typeString": "struct AllocationStaking.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1810,
													"indexExpression": {
														"id": 1809,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1800,
														"src": "11525:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11516:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1189_storage",
														"typeString": "struct AllocationStaking.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11492:38:7"
											},
											{
												"assignments": [
													1814
												],
												"declarations": [
													{
														"constant": false,
														"id": 1814,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "11557:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1916,
														"src": "11540:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
															"typeString": "struct AllocationStaking.UserInfo"
														},
														"typeName": {
															"id": 1813,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1812,
																"name": "UserInfo",
																"nameLocations": [
																	"11540:8:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1177,
																"src": "11540:8:7"
															},
															"referencedDeclaration": 1177,
															"src": "11540:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																"typeString": "struct AllocationStaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1821,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1815,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "11564:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1177_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct AllocationStaking.UserInfo storage ref))"
															}
														},
														"id": 1817,
														"indexExpression": {
															"id": 1816,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1800,
															"src": "11573:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11564:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1177_storage_$",
															"typeString": "mapping(address => struct AllocationStaking.UserInfo storage ref)"
														}
													},
													"id": 1820,
													"indexExpression": {
														"expression": {
															"id": 1818,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "11579:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11583:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "11579:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11564:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1177_storage",
														"typeString": "struct AllocationStaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11540:50:7"
											},
											{
												"assignments": [
													1823
												],
												"declarations": [
													{
														"constant": false,
														"id": 1823,
														"mutability": "mutable",
														"name": "depositAmount",
														"nameLocation": "11609:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1916,
														"src": "11601:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1822,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11601:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1825,
												"initialValue": {
													"id": 1824,
													"name": "_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1802,
													"src": "11625:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11601:31:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1827,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1800,
															"src": "11677:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1826,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1798,
														"src": "11666:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11666:16:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1829,
												"nodeType": "ExpressionStatement",
												"src": "11666:16:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1830,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1814,
															"src": "11816:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																"typeString": "struct AllocationStaking.UserInfo storage pointer"
															}
														},
														"id": 1831,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11821:6:7",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1169,
														"src": "11816:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1832,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11830:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11816:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1857,
												"nodeType": "IfStatement",
												"src": "11812:193:7",
												"trueBody": {
													"id": 1856,
													"nodeType": "Block",
													"src": "11833:172:7",
													"statements": [
														{
															"assignments": [
																1835
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1835,
																	"mutability": "mutable",
																	"name": "pendingAmount",
																	"nameLocation": "11855:13:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1856,
																	"src": "11847:21:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1834,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11847:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1849,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1846,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1814,
																			"src": "11924:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																				"typeString": "struct AllocationStaking.UserInfo storage pointer"
																			}
																		},
																		"id": 1847,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11929:10:7",
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1171,
																		"src": "11924:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653336",
																				"id": 1843,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11914:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
																					"typeString": "int_const 1000...(29 digits omitted)...0000"
																				},
																				"value": "1e36"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
																					"typeString": "int_const 1000...(29 digits omitted)...0000"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1839,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1807,
																							"src": "11887:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																								"typeString": "struct AllocationStaking.PoolInfo storage pointer"
																							}
																						},
																						"id": 1840,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "11892:16:7",
																						"memberName": "accERC20PerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1186,
																						"src": "11887:21:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 1836,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1814,
																							"src": "11871:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																								"typeString": "struct AllocationStaking.UserInfo storage pointer"
																							}
																						},
																						"id": 1837,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "11876:6:7",
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1169,
																						"src": "11871:11:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1838,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "11883:3:7",
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2580,
																					"src": "11871:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1841,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11871:38:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "11910:3:7",
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2602,
																			"src": "11871:42:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11871:48:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11920:3:7",
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2546,
																	"src": "11871:52:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11871:69:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11847:93:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1851,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "11968:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11972:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "11968:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1853,
																		"name": "pendingAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1835,
																		"src": "11980:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1850,
																	"name": "erc20Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2246,
																	"src": "11954:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11954:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1855,
															"nodeType": "ExpressionStatement",
															"src": "11954:40:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1865,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "12128:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12132:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "12128:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12120:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1863,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12120:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12120:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1870,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "12149:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AllocationStaking_$2325",
																		"typeString": "contract AllocationStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AllocationStaking_$2325",
																		"typeString": "contract AllocationStaking"
																	}
																],
																"id": 1869,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12141:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1868,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12141:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12141:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1872,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1802,
															"src": "12156:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1858,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1807,
																"src": "12090:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																	"typeString": "struct AllocationStaking.PoolInfo storage pointer"
																}
															},
															"id": 1861,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12095:7:7",
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1180,
															"src": "12090:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$572",
																"typeString": "contract IERC20"
															}
														},
														"id": 1862,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12103:16:7",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 685,
														"src": "12090:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$572_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$572_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12090:74:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1874,
												"nodeType": "ExpressionStatement",
												"src": "12090:74:7"
											},
											{
												"expression": {
													"id": 1883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1875,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "12215:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																"typeString": "struct AllocationStaking.PoolInfo storage pointer"
															}
														},
														"id": 1877,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "12220:13:7",
														"memberName": "totalDeposits",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1188,
														"src": "12215:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1881,
																"name": "depositAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1823,
																"src": "12259:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1878,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1807,
																	"src": "12236:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																		"typeString": "struct AllocationStaking.PoolInfo storage pointer"
																	}
																},
																"id": 1879,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12241:13:7",
																"memberName": "totalDeposits",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1188,
																"src": "12236:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12255:3:7",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2524,
															"src": "12236:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12236:37:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12215:58:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1884,
												"nodeType": "ExpressionStatement",
												"src": "12215:58:7"
											},
											{
												"expression": {
													"id": 1893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1885,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1814,
															"src": "12323:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																"typeString": "struct AllocationStaking.UserInfo storage pointer"
															}
														},
														"id": 1887,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "12328:6:7",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1169,
														"src": "12323:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1891,
																"name": "depositAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1823,
																"src": "12353:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1888,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1814,
																	"src": "12337:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																		"typeString": "struct AllocationStaking.UserInfo storage pointer"
																	}
																},
																"id": 1889,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12342:6:7",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1169,
																"src": "12337:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12349:3:7",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2524,
															"src": "12337:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1892,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12337:30:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12323:44:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1894,
												"nodeType": "ExpressionStatement",
												"src": "12323:44:7"
											},
											{
												"expression": {
													"id": 1907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1895,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1814,
															"src": "12408:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																"typeString": "struct AllocationStaking.UserInfo storage pointer"
															}
														},
														"id": 1897,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "12413:10:7",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1171,
														"src": "12408:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653336",
																"id": 1905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12469:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(29 digits omitted)...0000"
																},
																"value": "1e36"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(29 digits omitted)...0000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1901,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1807,
																			"src": "12442:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																				"typeString": "struct AllocationStaking.PoolInfo storage pointer"
																			}
																		},
																		"id": 1902,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "12447:16:7",
																		"memberName": "accERC20PerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1186,
																		"src": "12442:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1898,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1814,
																			"src": "12426:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																				"typeString": "struct AllocationStaking.UserInfo storage pointer"
																			}
																		},
																		"id": 1899,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "12431:6:7",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1169,
																		"src": "12426:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12438:3:7",
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2580,
																	"src": "12426:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1903,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12426:38:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12465:3:7",
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2602,
															"src": "12426:42:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1906,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12426:48:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12408:66:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1908,
												"nodeType": "ExpressionStatement",
												"src": "12408:66:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1910,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12528:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12532:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12528:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1912,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1800,
															"src": "12540:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1913,
															"name": "depositAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "12546:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1909,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1226,
														"src": "12520:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12520:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1915,
												"nodeType": "EmitStatement",
												"src": "12515:45:7"
											}
										]
									},
									"functionSelector": "e2bbb158",
									"id": 1917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "11436:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "11452:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "11444:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11444:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "11466:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "11458:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11458:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11443:31:7"
									},
									"returnParameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11482:0:7"
									},
									"scope": 2325,
									"src": "11427:1140:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2049,
										"nodeType": "Block",
										"src": "12666:1157:7",
										"statements": [
											{
												"assignments": [
													1926
												],
												"declarations": [
													{
														"constant": false,
														"id": 1926,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "12693:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 2049,
														"src": "12676:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
															"typeString": "struct AllocationStaking.PoolInfo"
														},
														"typeName": {
															"id": 1925,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1924,
																"name": "PoolInfo",
																"nameLocations": [
																	"12676:8:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1189,
																"src": "12676:8:7"
															},
															"referencedDeclaration": 1189,
															"src": "12676:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																"typeString": "struct AllocationStaking.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1930,
												"initialValue": {
													"baseExpression": {
														"id": 1927,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "12700:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1189_storage_$dyn_storage",
															"typeString": "struct AllocationStaking.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1929,
													"indexExpression": {
														"id": 1928,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1919,
														"src": "12709:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12700:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1189_storage",
														"typeString": "struct AllocationStaking.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12676:38:7"
											},
											{
												"assignments": [
													1933
												],
												"declarations": [
													{
														"constant": false,
														"id": 1933,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "12741:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 2049,
														"src": "12724:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
															"typeString": "struct AllocationStaking.UserInfo"
														},
														"typeName": {
															"id": 1932,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1931,
																"name": "UserInfo",
																"nameLocations": [
																	"12724:8:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1177,
																"src": "12724:8:7"
															},
															"referencedDeclaration": 1177,
															"src": "12724:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																"typeString": "struct AllocationStaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1940,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1934,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "12748:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1177_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct AllocationStaking.UserInfo storage ref))"
															}
														},
														"id": 1936,
														"indexExpression": {
															"id": 1935,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "12757:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12748:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1177_storage_$",
															"typeString": "mapping(address => struct AllocationStaking.UserInfo storage ref)"
														}
													},
													"id": 1939,
													"indexExpression": {
														"expression": {
															"id": 1937,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "12763:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1938,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12767:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "12763:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12748:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1177_storage",
														"typeString": "struct AllocationStaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12724:50:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1942,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1933,
																	"src": "12845:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																		"typeString": "struct AllocationStaking.UserInfo storage pointer"
																	}
																},
																"id": 1943,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12850:16:7",
																"memberName": "tokensUnlockTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1173,
																"src": "12845:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1944,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "12870:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12876:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "12870:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12845:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6173742073616c6520796f75207265676973746572656420666f72206973206e6f742066696e6973686564207965742e",
															"id": 1947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12887:51:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f13159535f66a78aff8e87048116728eebc9a6eadc436340bf8ddf945a670f5",
																"typeString": "literal_string \"Last sale you registered for is not finished yet.\""
															},
															"value": "Last sale you registered for is not finished yet."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f13159535f66a78aff8e87048116728eebc9a6eadc436340bf8ddf945a670f5",
																"typeString": "literal_string \"Last sale you registered for is not finished yet.\""
															}
														],
														"id": 1941,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12837:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12837:102:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1949,
												"nodeType": "ExpressionStatement",
												"src": "12837:102:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1951,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1933,
																	"src": "12957:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																		"typeString": "struct AllocationStaking.UserInfo storage pointer"
																	}
																},
																"id": 1952,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12962:6:7",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1169,
																"src": "12957:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1953,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1921,
																"src": "12972:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12957:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "77697468647261773a2063616e2774207769746864726177206d6f7265207468616e206465706f736974",
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12981:44:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2",
																"typeString": "literal_string \"withdraw: can't withdraw more than deposit\""
															},
															"value": "withdraw: can't withdraw more than deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2",
																"typeString": "literal_string \"withdraw: can't withdraw more than deposit\""
															}
														],
														"id": 1950,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12949:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12949:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1957,
												"nodeType": "ExpressionStatement",
												"src": "12949:77:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1959,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "13071:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1958,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1798,
														"src": "13060:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13060:16:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1961,
												"nodeType": "ExpressionStatement",
												"src": "13060:16:7"
											},
											{
												"assignments": [
													1963
												],
												"declarations": [
													{
														"constant": false,
														"id": 1963,
														"mutability": "mutable",
														"name": "pendingAmount",
														"nameLocation": "13136:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 2049,
														"src": "13128:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1962,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13128:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1977,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1974,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1933,
																"src": "13205:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																	"typeString": "struct AllocationStaking.UserInfo storage pointer"
																}
															},
															"id": 1975,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13210:10:7",
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1171,
															"src": "13205:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653336",
																	"id": 1971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13195:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
																		"typeString": "int_const 1000...(29 digits omitted)...0000"
																	},
																	"value": "1e36"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
																		"typeString": "int_const 1000...(29 digits omitted)...0000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1967,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1926,
																				"src": "13168:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																					"typeString": "struct AllocationStaking.PoolInfo storage pointer"
																				}
																			},
																			"id": 1968,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "13173:16:7",
																			"memberName": "accERC20PerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1186,
																			"src": "13168:21:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1964,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1933,
																				"src": "13152:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																					"typeString": "struct AllocationStaking.UserInfo storage pointer"
																				}
																			},
																			"id": 1965,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "13157:6:7",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1169,
																			"src": "13152:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "13164:3:7",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2580,
																		"src": "13152:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13152:38:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13191:3:7",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2602,
																"src": "13152:42:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13152:48:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13201:3:7",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2546,
														"src": "13152:52:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13152:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13128:93:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1979,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13289:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13293:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13289:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1981,
															"name": "pendingAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1963,
															"src": "13301:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1978,
														"name": "erc20Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2246,
														"src": "13275:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13275:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1983,
												"nodeType": "ExpressionStatement",
												"src": "13275:40:7"
											},
											{
												"expression": {
													"id": 1992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1984,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1933,
															"src": "13325:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																"typeString": "struct AllocationStaking.UserInfo storage pointer"
															}
														},
														"id": 1986,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13330:6:7",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1169,
														"src": "13325:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1990,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1921,
																"src": "13355:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1987,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1933,
																	"src": "13339:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																		"typeString": "struct AllocationStaking.UserInfo storage pointer"
																	}
																},
																"id": 1988,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13344:6:7",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1169,
																"src": "13339:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13351:3:7",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2546,
															"src": "13339:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1991,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13339:24:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13325:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1993,
												"nodeType": "ExpressionStatement",
												"src": "13325:38:7"
											},
											{
												"expression": {
													"id": 2006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1994,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1933,
															"src": "13373:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																"typeString": "struct AllocationStaking.UserInfo storage pointer"
															}
														},
														"id": 1996,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13378:10:7",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1171,
														"src": "13373:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653336",
																"id": 2004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13434:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(29 digits omitted)...0000"
																},
																"value": "1e36"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(29 digits omitted)...0000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2000,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1926,
																			"src": "13407:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																				"typeString": "struct AllocationStaking.PoolInfo storage pointer"
																			}
																		},
																		"id": 2001,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "13412:16:7",
																		"memberName": "accERC20PerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1186,
																		"src": "13407:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1997,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1933,
																			"src": "13391:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																				"typeString": "struct AllocationStaking.UserInfo storage pointer"
																			}
																		},
																		"id": 1998,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "13396:6:7",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1169,
																		"src": "13391:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13403:3:7",
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2580,
																	"src": "13391:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13391:38:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13430:3:7",
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2602,
															"src": "13391:42:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2005,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13391:48:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13373:66:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2007,
												"nodeType": "ExpressionStatement",
												"src": "13373:66:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2015,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "13530:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13534:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "13530:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2014,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13522:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2013,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13522:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13522:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2018,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1921,
															"src": "13543:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 2008,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1926,
																"src": "13496:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																	"typeString": "struct AllocationStaking.PoolInfo storage pointer"
																}
															},
															"id": 2011,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13501:7:7",
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1180,
															"src": "13496:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$572",
																"typeString": "contract IERC20"
															}
														},
														"id": 2012,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13509:12:7",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 658,
														"src": "13496:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$572_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$572_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13496:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2020,
												"nodeType": "ExpressionStatement",
												"src": "13496:55:7"
											},
											{
												"expression": {
													"id": 2029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2021,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1926,
															"src": "13561:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																"typeString": "struct AllocationStaking.PoolInfo storage pointer"
															}
														},
														"id": 2023,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13566:13:7",
														"memberName": "totalDeposits",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1188,
														"src": "13561:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2027,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1921,
																"src": "13605:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 2024,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1926,
																	"src": "13582:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																		"typeString": "struct AllocationStaking.PoolInfo storage pointer"
																	}
																},
																"id": 2025,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13587:13:7",
																"memberName": "totalDeposits",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1188,
																"src": "13582:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13601:3:7",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2546,
															"src": "13582:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2028,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13582:31:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13561:52:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2030,
												"nodeType": "ExpressionStatement",
												"src": "13561:52:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2031,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1921,
														"src": "13628:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2032,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13638:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13628:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2041,
												"nodeType": "IfStatement",
												"src": "13624:111:7",
												"trueBody": {
													"id": 2040,
													"nodeType": "Block",
													"src": "13641:94:7",
													"statements": [
														{
															"expression": {
																"id": 2038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2034,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1933,
																		"src": "13699:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																			"typeString": "struct AllocationStaking.UserInfo storage pointer"
																		}
																	},
																	"id": 2036,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "13704:16:7",
																	"memberName": "tokensUnlockTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1173,
																	"src": "13699:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 2037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13723:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "13699:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2039,
															"nodeType": "ExpressionStatement",
															"src": "13699:25:7"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2043,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13790:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13794:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13790:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2045,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "13802:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2046,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1921,
															"src": "13808:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2042,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1234,
														"src": "13781:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13781:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2048,
												"nodeType": "EmitStatement",
												"src": "13776:40:7"
											}
										]
									},
									"functionSelector": "441a3e70",
									"id": 2050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "12619:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "12636:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "12628:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12628:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "12650:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "12642:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12642:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12627:31:7"
									},
									"returnParameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12666:0:7"
									},
									"scope": 2325,
									"src": "12610:1213:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2143,
										"nodeType": "Block",
										"src": "13946:708:7",
										"statements": [
											{
												"assignments": [
													2057
												],
												"declarations": [
													{
														"constant": false,
														"id": 2057,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "13973:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 2143,
														"src": "13956:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
															"typeString": "struct AllocationStaking.PoolInfo"
														},
														"typeName": {
															"id": 2056,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2055,
																"name": "PoolInfo",
																"nameLocations": [
																	"13956:8:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1189,
																"src": "13956:8:7"
															},
															"referencedDeclaration": 1189,
															"src": "13956:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																"typeString": "struct AllocationStaking.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2061,
												"initialValue": {
													"baseExpression": {
														"id": 2058,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "13980:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1189_storage_$dyn_storage",
															"typeString": "struct AllocationStaking.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2060,
													"indexExpression": {
														"id": 2059,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2052,
														"src": "13989:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13980:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1189_storage",
														"typeString": "struct AllocationStaking.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13956:38:7"
											},
											{
												"assignments": [
													2064
												],
												"declarations": [
													{
														"constant": false,
														"id": 2064,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "14021:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 2143,
														"src": "14004:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
															"typeString": "struct AllocationStaking.UserInfo"
														},
														"typeName": {
															"id": 2063,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2062,
																"name": "UserInfo",
																"nameLocations": [
																	"14004:8:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1177,
																"src": "14004:8:7"
															},
															"referencedDeclaration": 1177,
															"src": "14004:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																"typeString": "struct AllocationStaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2071,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2065,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "14028:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1177_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct AllocationStaking.UserInfo storage ref))"
															}
														},
														"id": 2067,
														"indexExpression": {
															"id": 2066,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2052,
															"src": "14037:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14028:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1177_storage_$",
															"typeString": "mapping(address => struct AllocationStaking.UserInfo storage ref)"
														}
													},
													"id": 2070,
													"indexExpression": {
														"expression": {
															"id": 2068,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "14043:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2069,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14047:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "14043:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14028:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1177_storage",
														"typeString": "struct AllocationStaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14004:50:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2073,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2064,
																	"src": "14073:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																		"typeString": "struct AllocationStaking.UserInfo storage pointer"
																	}
																},
																"id": 2074,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14078:6:7",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1169,
																"src": "14073:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14088:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14073:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5573657220646f6573206e6f74206861766520616e797468696e67207374616b65642e",
															"id": 2077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14091:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ea8c4190832cfece80b3f2404c6211d113e3c15b0e1b7b1fbf8c07c9c81bca0e",
																"typeString": "literal_string \"User does not have anything staked.\""
															},
															"value": "User does not have anything staked."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ea8c4190832cfece80b3f2404c6211d113e3c15b0e1b7b1fbf8c07c9c81bca0e",
																"typeString": "literal_string \"User does not have anything staked.\""
															}
														],
														"id": 2072,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14065:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14065:64:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2079,
												"nodeType": "ExpressionStatement",
												"src": "14065:64:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2081,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2052,
															"src": "14174:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2080,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1798,
														"src": "14163:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14163:16:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2083,
												"nodeType": "ExpressionStatement",
												"src": "14163:16:7"
											},
											{
												"assignments": [
													2085
												],
												"declarations": [
													{
														"constant": false,
														"id": 2085,
														"mutability": "mutable",
														"name": "pendingAmount",
														"nameLocation": "14198:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 2143,
														"src": "14190:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2084,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14190:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2099,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2096,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2064,
																"src": "14267:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																	"typeString": "struct AllocationStaking.UserInfo storage pointer"
																}
															},
															"id": 2097,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14272:10:7",
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1171,
															"src": "14267:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653336",
																	"id": 2093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
																		"typeString": "int_const 1000...(29 digits omitted)...0000"
																	},
																	"value": "1e36"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
																		"typeString": "int_const 1000...(29 digits omitted)...0000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 2089,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2057,
																				"src": "14230:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																					"typeString": "struct AllocationStaking.PoolInfo storage pointer"
																				}
																			},
																			"id": 2090,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "14235:16:7",
																			"memberName": "accERC20PerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1186,
																			"src": "14230:21:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 2086,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2064,
																				"src": "14214:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																					"typeString": "struct AllocationStaking.UserInfo storage pointer"
																				}
																			},
																			"id": 2087,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "14219:6:7",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1169,
																			"src": "14214:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "14226:3:7",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2580,
																		"src": "14214:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14214:38:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14253:3:7",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2602,
																"src": "14214:42:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14214:48:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14263:3:7",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2546,
														"src": "14214:52:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14214:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14190:93:7"
											},
											{
												"expression": {
													"id": 2108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2100,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2064,
															"src": "14337:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																"typeString": "struct AllocationStaking.UserInfo storage pointer"
															}
														},
														"id": 2102,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14342:6:7",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1169,
														"src": "14337:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2106,
																"name": "pendingAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2085,
																"src": "14367:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 2103,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2064,
																	"src": "14351:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																		"typeString": "struct AllocationStaking.UserInfo storage pointer"
																	}
																},
																"id": 2104,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14356:6:7",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1169,
																"src": "14351:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14363:3:7",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2524,
															"src": "14351:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14351:30:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14337:44:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2109,
												"nodeType": "ExpressionStatement",
												"src": "14337:44:7"
											},
											{
												"expression": {
													"id": 2122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2110,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2064,
															"src": "14391:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																"typeString": "struct AllocationStaking.UserInfo storage pointer"
															}
														},
														"id": 2112,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14396:10:7",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1171,
														"src": "14391:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653336",
																"id": 2120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14452:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(29 digits omitted)...0000"
																},
																"value": "1e36"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(29 digits omitted)...0000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2116,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2057,
																			"src": "14425:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																				"typeString": "struct AllocationStaking.PoolInfo storage pointer"
																			}
																		},
																		"id": 2117,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "14430:16:7",
																		"memberName": "accERC20PerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1186,
																		"src": "14425:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2113,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2064,
																			"src": "14409:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																				"typeString": "struct AllocationStaking.UserInfo storage pointer"
																			}
																		},
																		"id": 2114,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "14414:6:7",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1169,
																		"src": "14409:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14421:3:7",
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2580,
																	"src": "14409:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14409:38:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14448:3:7",
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2602,
															"src": "14409:42:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14409:48:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14391:66:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2123,
												"nodeType": "ExpressionStatement",
												"src": "14391:66:7"
											},
											{
												"expression": {
													"id": 2132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2124,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2057,
															"src": "14510:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																"typeString": "struct AllocationStaking.PoolInfo storage pointer"
															}
														},
														"id": 2126,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14515:13:7",
														"memberName": "totalDeposits",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1188,
														"src": "14510:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2130,
																"name": "pendingAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2085,
																"src": "14554:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 2127,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2057,
																	"src": "14531:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																		"typeString": "struct AllocationStaking.PoolInfo storage pointer"
																	}
																},
																"id": 2128,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14536:13:7",
																"memberName": "totalDeposits",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1188,
																"src": "14531:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14550:3:7",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2524,
															"src": "14531:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14531:37:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14510:58:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2133,
												"nodeType": "ExpressionStatement",
												"src": "14510:58:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2135,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "14602:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14606:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "14602:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2137,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2052,
															"src": "14614:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2138,
															"name": "pendingAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2085,
															"src": "14620:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2139,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2064,
																"src": "14635:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																	"typeString": "struct AllocationStaking.UserInfo storage pointer"
																}
															},
															"id": 2140,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14640:6:7",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1169,
															"src": "14635:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2134,
														"name": "CompoundedEarnings",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "14583:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 2141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14583:64:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2142,
												"nodeType": "EmitStatement",
												"src": "14578:69:7"
											}
										]
									},
									"functionSelector": "aa5f7e26",
									"id": 2144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "compound",
									"nameLocation": "13916:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "13933:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2144,
												"src": "13925:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13925:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13924:14:7"
									},
									"returnParameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13946:0:7"
									},
									"scope": 2325,
									"src": "13907:747:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2226,
										"nodeType": "Block",
										"src": "14827:655:7",
										"statements": [
											{
												"assignments": [
													2151
												],
												"declarations": [
													{
														"constant": false,
														"id": 2151,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "14854:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 2226,
														"src": "14837:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
															"typeString": "struct AllocationStaking.PoolInfo"
														},
														"typeName": {
															"id": 2150,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2149,
																"name": "PoolInfo",
																"nameLocations": [
																	"14837:8:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1189,
																"src": "14837:8:7"
															},
															"referencedDeclaration": 1189,
															"src": "14837:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																"typeString": "struct AllocationStaking.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2155,
												"initialValue": {
													"baseExpression": {
														"id": 2152,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "14861:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1189_storage_$dyn_storage",
															"typeString": "struct AllocationStaking.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2154,
													"indexExpression": {
														"id": 2153,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2146,
														"src": "14870:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14861:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1189_storage",
														"typeString": "struct AllocationStaking.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14837:38:7"
											},
											{
												"assignments": [
													2158
												],
												"declarations": [
													{
														"constant": false,
														"id": 2158,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "14902:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 2226,
														"src": "14885:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
															"typeString": "struct AllocationStaking.UserInfo"
														},
														"typeName": {
															"id": 2157,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2156,
																"name": "UserInfo",
																"nameLocations": [
																	"14885:8:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1177,
																"src": "14885:8:7"
															},
															"referencedDeclaration": 1177,
															"src": "14885:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																"typeString": "struct AllocationStaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2165,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2159,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "14909:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1177_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct AllocationStaking.UserInfo storage ref))"
															}
														},
														"id": 2161,
														"indexExpression": {
															"id": 2160,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2146,
															"src": "14918:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14909:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1177_storage_$",
															"typeString": "mapping(address => struct AllocationStaking.UserInfo storage ref)"
														}
													},
													"id": 2164,
													"indexExpression": {
														"expression": {
															"id": 2162,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "14924:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14928:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "14924:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14909:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1177_storage",
														"typeString": "struct AllocationStaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14885:50:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2167,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2158,
																	"src": "15006:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																		"typeString": "struct AllocationStaking.UserInfo storage pointer"
																	}
																},
																"id": 2168,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15011:16:7",
																"memberName": "tokensUnlockTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1173,
																"src": "15006:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 2169,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "15031:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15037:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "15031:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15006:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456d657267656e637920776974686472617720626c6f636b656420647572696e672073616c6520616e6420636f6f6c646f776e20706572696f642e",
															"id": 2172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15060:61:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_56b9ca3553e1051f7fcbcaba90d07b4176d745112fcce0c7cc3b593a9da191ed",
																"typeString": "literal_string \"Emergency withdraw blocked during sale and cooldown period.\""
															},
															"value": "Emergency withdraw blocked during sale and cooldown period."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_56b9ca3553e1051f7fcbcaba90d07b4176d745112fcce0c7cc3b593a9da191ed",
																"typeString": "literal_string \"Emergency withdraw blocked during sale and cooldown period.\""
															}
														],
														"id": 2166,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14998:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14998:124:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2174,
												"nodeType": "ExpressionStatement",
												"src": "14998:124:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2182,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "15199:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15203:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "15199:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2181,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15191:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2180,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15191:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15191:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2185,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2158,
																"src": "15212:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																	"typeString": "struct AllocationStaking.UserInfo storage pointer"
																}
															},
															"id": 2186,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15217:6:7",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1169,
															"src": "15212:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 2175,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2151,
																"src": "15165:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																	"typeString": "struct AllocationStaking.PoolInfo storage pointer"
																}
															},
															"id": 2178,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15170:7:7",
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1180,
															"src": "15165:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$572",
																"typeString": "contract IERC20"
															}
														},
														"id": 2179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15178:12:7",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 658,
														"src": "15165:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$572_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$572_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15165:59:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2188,
												"nodeType": "ExpressionStatement",
												"src": "15165:59:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2190,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "15257:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15261:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "15257:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2192,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2146,
															"src": "15269:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2193,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2158,
																"src": "15275:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																	"typeString": "struct AllocationStaking.UserInfo storage pointer"
																}
															},
															"id": 2194,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15280:6:7",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1169,
															"src": "15275:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2189,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "15239:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15239:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2196,
												"nodeType": "EmitStatement",
												"src": "15234:53:7"
											},
											{
												"expression": {
													"id": 2206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2197,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2151,
															"src": "15330:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																"typeString": "struct AllocationStaking.PoolInfo storage pointer"
															}
														},
														"id": 2199,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "15335:13:7",
														"memberName": "totalDeposits",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1188,
														"src": "15330:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2203,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2158,
																	"src": "15374:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																		"typeString": "struct AllocationStaking.UserInfo storage pointer"
																	}
																},
																"id": 2204,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15379:6:7",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1169,
																"src": "15374:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 2200,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2151,
																	"src": "15351:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1189_storage_ptr",
																		"typeString": "struct AllocationStaking.PoolInfo storage pointer"
																	}
																},
																"id": 2201,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15356:13:7",
																"memberName": "totalDeposits",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1188,
																"src": "15351:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15370:3:7",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2546,
															"src": "15351:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15351:35:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15330:56:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2207,
												"nodeType": "ExpressionStatement",
												"src": "15330:56:7"
											},
											{
												"expression": {
													"id": 2212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2208,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2158,
															"src": "15396:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																"typeString": "struct AllocationStaking.UserInfo storage pointer"
															}
														},
														"id": 2210,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "15401:6:7",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1169,
														"src": "15396:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2211,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15410:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15396:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2213,
												"nodeType": "ExpressionStatement",
												"src": "15396:15:7"
											},
											{
												"expression": {
													"id": 2218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2214,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2158,
															"src": "15421:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																"typeString": "struct AllocationStaking.UserInfo storage pointer"
															}
														},
														"id": 2216,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "15426:10:7",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1171,
														"src": "15421:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15439:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15421:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2219,
												"nodeType": "ExpressionStatement",
												"src": "15421:19:7"
											},
											{
												"expression": {
													"id": 2224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2220,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2158,
															"src": "15450:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1177_storage_ptr",
																"typeString": "struct AllocationStaking.UserInfo storage pointer"
															}
														},
														"id": 2222,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "15455:16:7",
														"memberName": "tokensUnlockTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1173,
														"src": "15450:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2223,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15474:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15450:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2225,
												"nodeType": "ExpressionStatement",
												"src": "15450:25:7"
											}
										]
									},
									"functionSelector": "5312ea8e",
									"id": 2227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyWithdraw",
									"nameLocation": "14788:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2146,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "14814:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2227,
												"src": "14806:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14806:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14805:14:7"
									},
									"returnParameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14827:0:7"
									},
									"scope": 2325,
									"src": "14779:703:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2245,
										"nodeType": "Block",
										"src": "15643:73:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2237,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2229,
															"src": "15668:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2238,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2231,
															"src": "15673:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2234,
															"name": "erc20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "15653:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$572",
																"typeString": "contract IERC20"
															}
														},
														"id": 2236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15659:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 539,
														"src": "15653:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15653:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2240,
												"nodeType": "ExpressionStatement",
												"src": "15653:28:7"
											},
											{
												"expression": {
													"id": 2243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2241,
														"name": "paidOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1194,
														"src": "15691:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2242,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2231,
														"src": "15702:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15691:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2244,
												"nodeType": "ExpressionStatement",
												"src": "15691:18:7"
											}
										]
									},
									"id": 2246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "erc20Transfer",
									"nameLocation": "15590:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "15612:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "15604:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15604:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "15625:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "15617:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15617:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15603:30:7"
									},
									"returnParameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15643:0:7"
									},
									"scope": 2325,
									"src": "15581:135:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2323,
										"nodeType": "Block",
										"src": "15972:396:7",
										"statements": [
											{
												"assignments": [
													2264
												],
												"declarations": [
													{
														"constant": false,
														"id": 2264,
														"mutability": "mutable",
														"name": "deposits",
														"nameLocation": "16000:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 2323,
														"src": "15982:26:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2262,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15982:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2263,
															"nodeType": "ArrayTypeName",
															"src": "15982:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2271,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2268,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2249,
																"src": "16025:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 2269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16031:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "16025:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2267,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "16011:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2265,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "16015:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2266,
															"nodeType": "ArrayTypeName",
															"src": "16015:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 2270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16011:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15982:56:7"
											},
											{
												"assignments": [
													2276
												],
												"declarations": [
													{
														"constant": false,
														"id": 2276,
														"mutability": "mutable",
														"name": "earnings",
														"nameLocation": "16066:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 2323,
														"src": "16048:26:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2274,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "16048:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2275,
															"nodeType": "ArrayTypeName",
															"src": "16048:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2283,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2280,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2249,
																"src": "16091:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 2281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16097:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "16091:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "16077:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2277,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "16081:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2278,
															"nodeType": "ArrayTypeName",
															"src": "16081:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 2282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16077:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16048:56:7"
											},
											{
												"body": {
													"id": 2317,
													"nodeType": "Block",
													"src": "16211:113:7",
													"statements": [
														{
															"expression": {
																"id": 2304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2295,
																		"name": "deposits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2264,
																		"src": "16225:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2297,
																	"indexExpression": {
																		"id": 2296,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2285,
																		"src": "16234:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "16225:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2299,
																			"name": "pid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2251,
																			"src": "16249:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 2300,
																				"name": "users",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2249,
																				"src": "16254:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 2302,
																			"indexExpression": {
																				"id": 2301,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2285,
																				"src": "16260:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "16254:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2298,
																		"name": "deposited",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1492,
																		"src": "16239:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (uint256,address) view returns (uint256)"
																		}
																	},
																	"id": 2303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16239:24:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16225:38:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2305,
															"nodeType": "ExpressionStatement",
															"src": "16225:38:7"
														},
														{
															"expression": {
																"id": 2315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2306,
																		"name": "earnings",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2276,
																		"src": "16277:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2308,
																	"indexExpression": {
																		"id": 2307,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2285,
																		"src": "16286:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "16277:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2310,
																			"name": "pid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2251,
																			"src": "16299:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 2311,
																				"name": "users",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2249,
																				"src": "16304:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 2313,
																			"indexExpression": {
																				"id": 2312,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2285,
																				"src": "16310:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "16304:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2309,
																		"name": "pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1598,
																		"src": "16291:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (uint256,address) view returns (uint256)"
																		}
																	},
																	"id": 2314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16291:22:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16277:36:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2316,
															"nodeType": "ExpressionStatement",
															"src": "16277:36:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2288,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2285,
														"src": "16188:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2289,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2249,
															"src": "16192:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16198:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "16192:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16188:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2318,
												"initializationExpression": {
													"assignments": [
														2285
													],
													"declarations": [
														{
															"constant": false,
															"id": 2285,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "16181:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 2318,
															"src": "16176:6:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2284,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "16176:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2287,
													"initialValue": {
														"hexValue": "30",
														"id": 2286,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16185:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "16176:10:7"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "16206:3:7",
														"subExpression": {
															"id": 2292,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2285,
															"src": "16206:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2294,
													"nodeType": "ExpressionStatement",
													"src": "16206:3:7"
												},
												"nodeType": "ForStatement",
												"src": "16171:153:7"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2319,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2264,
															"src": "16342:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2320,
															"name": "earnings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2276,
															"src": "16352:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"id": 2321,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "16341:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"functionReturnParameters": 2259,
												"id": 2322,
												"nodeType": "Return",
												"src": "16334:27:7"
											}
										]
									},
									"functionSelector": "fcfc1b14",
									"id": 2324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPendingAndDepositedForUsers",
									"nameLocation": "15829:30:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "users",
												"nameLocation": "15878:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "15860:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2247,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "15860:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2248,
													"nodeType": "ArrayTypeName",
													"src": "15860:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "15890:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "15885:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2250,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15885:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15859:35:7"
									},
									"returnParameters": {
										"id": 2259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "15930:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2253,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15930:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2254,
													"nodeType": "ArrayTypeName",
													"src": "15930:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "15949:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2256,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15949:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2257,
													"nodeType": "ArrayTypeName",
													"src": "15949:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15929:38:7"
									},
									"scope": 2325,
									"src": "15820:548:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2326,
							"src": "336:16036:7",
							"usedErrors": [
								30,
								35,
								211,
								214,
								625,
								906,
								911,
								914
							],
							"usedEvents": [
								41,
								219,
								1226,
								1234,
								1242,
								1252
							]
						}
					],
					"src": "39:16334:7"
				},
				"id": 7
			},
			"contracts/interfaces/ISalesFactory.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/ISalesFactory.sol",
					"exportedSymbols": {
						"ISalesFactory": [
							2342
						]
					},
					"id": 2343,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2327,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "39:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISalesFactory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2342,
							"linearizedBaseContracts": [
								2342
							],
							"name": "ISalesFactory",
							"nameLocation": "75:13:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "4c0ec736",
									"id": 2334,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setSaleOwnerAndToken",
									"nameLocation": "104:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2329,
												"mutability": "mutable",
												"name": "saleOwner",
												"nameLocation": "133:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "125:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "125:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2331,
												"mutability": "mutable",
												"name": "saleToken",
												"nameLocation": "152:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "144:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "144:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "124:38:8"
									},
									"returnParameters": {
										"id": 2333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "171:0:8"
									},
									"scope": 2342,
									"src": "95:77:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a00249e8",
									"id": 2341,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isSaleCreatedThroughFactory",
									"nameLocation": "186:27:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "sale",
												"nameLocation": "222:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2341,
												"src": "214:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "214:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "213:14:8"
									},
									"returnParameters": {
										"id": 2340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2341,
												"src": "251:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2338,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "251:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "250:6:8"
									},
									"scope": 2342,
									"src": "177:80:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2343,
							"src": "65:194:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:221:8"
				},
				"id": 8
			},
			"contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2697
						]
					},
					"id": 2698,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2344,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "39:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2345,
								"nodeType": "StructuredDocumentation",
								"src": "65:563:9",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 2697,
							"linearizedBaseContracts": [
								2697
							],
							"name": "SafeMath",
							"nameLocation": "637:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2375,
										"nodeType": "Block",
										"src": "864:98:9",
										"statements": [
											{
												"assignments": [
													2358
												],
												"declarations": [
													{
														"constant": false,
														"id": 2358,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "882:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 2375,
														"src": "874:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2357,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "874:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2362,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2359,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2348,
														"src": "886:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2360,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2350,
														"src": "890:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "886:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "874:17:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2363,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2358,
														"src": "905:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2364,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2348,
														"src": "909:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "905:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2370,
												"nodeType": "IfStatement",
												"src": "901:28:9",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 2366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "920:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 2367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "927:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 2368,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "919:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 2356,
													"id": 2369,
													"nodeType": "Return",
													"src": "912:17:9"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 2371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "947:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 2372,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2358,
															"src": "953:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2373,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "946:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2356,
												"id": 2374,
												"nodeType": "Return",
												"src": "939:16:9"
											}
										]
									},
									"documentation": {
										"id": 2346,
										"nodeType": "StructuredDocumentation",
										"src": "652:131:9",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "797:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2348,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "812:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2376,
												"src": "804:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "823:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2376,
												"src": "815:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "815:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:22:9"
									},
									"returnParameters": {
										"id": 2356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2376,
												"src": "849:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2352,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "849:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2376,
												"src": "855:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "855:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "848:15:9"
									},
									"scope": 2697,
									"src": "788:174:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2402,
										"nodeType": "Block",
										"src": "1184:75:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2388,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2381,
														"src": "1198:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2389,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2379,
														"src": "1202:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1198:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2395,
												"nodeType": "IfStatement",
												"src": "1194:28:9",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 2391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1213:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 2392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1220:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 2393,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1212:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 2387,
													"id": 2394,
													"nodeType": "Return",
													"src": "1205:17:9"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 2396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1240:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2397,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2379,
																"src": "1246:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2398,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2381,
																"src": "1250:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1246:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2400,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1239:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2387,
												"id": 2401,
												"nodeType": "Return",
												"src": "1232:20:9"
											}
										]
									},
									"documentation": {
										"id": 2377,
										"nodeType": "StructuredDocumentation",
										"src": "968:135:9",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1117:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2379,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1132:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2403,
												"src": "1124:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1124:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2381,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1143:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2403,
												"src": "1135:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1135:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1123:22:9"
									},
									"returnParameters": {
										"id": 2387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2403,
												"src": "1169:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2383,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1169:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2403,
												"src": "1175:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:15:9"
									},
									"scope": 2697,
									"src": "1108:151:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2443,
										"nodeType": "Block",
										"src": "1483:359:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2415,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2406,
														"src": "1715:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2416,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1720:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1715:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2422,
												"nodeType": "IfStatement",
												"src": "1711:28:9",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "74727565",
																"id": 2418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1731:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"hexValue": "30",
																"id": 2419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1737:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 2420,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1730:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 2414,
													"id": 2421,
													"nodeType": "Return",
													"src": "1723:16:9"
												}
											},
											{
												"assignments": [
													2424
												],
												"declarations": [
													{
														"constant": false,
														"id": 2424,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1757:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 2443,
														"src": "1749:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2423,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1749:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2428,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2425,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2406,
														"src": "1761:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2426,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2408,
														"src": "1765:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1761:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1749:17:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2429,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2424,
															"src": "1780:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 2430,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2406,
															"src": "1784:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1780:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2432,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2408,
														"src": "1789:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1780:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2438,
												"nodeType": "IfStatement",
												"src": "1776:33:9",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 2434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1800:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 2435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1807:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 2436,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1799:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 2414,
													"id": 2437,
													"nodeType": "Return",
													"src": "1792:17:9"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 2439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1827:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 2440,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2424,
															"src": "1833:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2441,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1826:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2414,
												"id": 2442,
												"nodeType": "Return",
												"src": "1819:16:9"
											}
										]
									},
									"documentation": {
										"id": 2404,
										"nodeType": "StructuredDocumentation",
										"src": "1265:137:9",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1416:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2406,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1431:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2444,
												"src": "1423:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1423:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2408,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1442:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2444,
												"src": "1434:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1434:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1422:22:9"
									},
									"returnParameters": {
										"id": 2414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2444,
												"src": "1468:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2410,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1468:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2444,
												"src": "1474:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1474:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1467:15:9"
									},
									"scope": 2697,
									"src": "1407:435:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2470,
										"nodeType": "Block",
										"src": "2067:76:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2456,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2449,
														"src": "2081:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2457,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2086:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2081:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2463,
												"nodeType": "IfStatement",
												"src": "2077:29:9",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 2459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2097:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 2460,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2104:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 2461,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2096:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 2455,
													"id": 2462,
													"nodeType": "Return",
													"src": "2089:17:9"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 2464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2124:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2465,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2447,
																"src": "2130:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2466,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2449,
																"src": "2134:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2130:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2468,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2123:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2455,
												"id": 2469,
												"nodeType": "Return",
												"src": "2116:20:9"
											}
										]
									},
									"documentation": {
										"id": 2445,
										"nodeType": "StructuredDocumentation",
										"src": "1848:138:9",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "2000:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2447,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2015:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "2007:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2007:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2449,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2026:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "2018:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2018:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2006:22:9"
									},
									"returnParameters": {
										"id": 2455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "2052:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2451,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2052:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "2058:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2058:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2051:15:9"
									},
									"scope": 2697,
									"src": "1991:152:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2497,
										"nodeType": "Block",
										"src": "2378:76:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2483,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2476,
														"src": "2392:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2484,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2397:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2392:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2490,
												"nodeType": "IfStatement",
												"src": "2388:29:9",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 2486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2408:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 2487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2415:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 2488,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2407:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 2482,
													"id": 2489,
													"nodeType": "Return",
													"src": "2400:17:9"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 2491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2435:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2492,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2474,
																"src": "2441:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 2493,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2476,
																"src": "2445:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2441:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2495,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2434:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2482,
												"id": 2496,
												"nodeType": "Return",
												"src": "2427:20:9"
											}
										]
									},
									"documentation": {
										"id": 2472,
										"nodeType": "StructuredDocumentation",
										"src": "2149:148:9",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2311:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2474,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2326:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "2318:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2318:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2476,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2337:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "2329:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2329:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2317:22:9"
									},
									"returnParameters": {
										"id": 2482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "2363:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2478,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2363:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "2369:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2369:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2362:15:9"
									},
									"scope": 2697,
									"src": "2302:152:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2523,
										"nodeType": "Block",
										"src": "2756:108:9",
										"statements": [
											{
												"assignments": [
													2509
												],
												"declarations": [
													{
														"constant": false,
														"id": 2509,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2774:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 2523,
														"src": "2766:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2508,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2766:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2513,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2510,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2501,
														"src": "2778:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2511,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2503,
														"src": "2782:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2778:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2766:17:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2515,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2509,
																"src": "2801:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2516,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2501,
																"src": "2806:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2801:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 2518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2809:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 2514,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2793:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2793:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2520,
												"nodeType": "ExpressionStatement",
												"src": "2793:46:9"
											},
											{
												"expression": {
													"id": 2521,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2509,
													"src": "2856:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2507,
												"id": 2522,
												"nodeType": "Return",
												"src": "2849:8:9"
											}
										]
									},
									"documentation": {
										"id": 2499,
										"nodeType": "StructuredDocumentation",
										"src": "2460:224:9",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 2524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2698:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2501,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2710:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2524,
												"src": "2702:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2503,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2721:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2524,
												"src": "2713:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2701:22:9"
									},
									"returnParameters": {
										"id": 2507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2524,
												"src": "2747:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2747:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:9:9"
									},
									"scope": 2697,
									"src": "2689:175:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2545,
										"nodeType": "Block",
										"src": "3202:88:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2535,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2529,
																"src": "3220:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2536,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2527,
																"src": "3225:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3220:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 2538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3228:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 2534,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3212:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3212:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2540,
												"nodeType": "ExpressionStatement",
												"src": "3212:49:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2541,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2527,
														"src": "3278:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2542,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2529,
														"src": "3282:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3278:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2533,
												"id": 2544,
												"nodeType": "Return",
												"src": "3271:12:9"
											}
										]
									},
									"documentation": {
										"id": 2525,
										"nodeType": "StructuredDocumentation",
										"src": "2870:260:9",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3144:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2527,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3156:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "3148:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3148:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2529,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3167:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "3159:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3159:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3147:22:9"
									},
									"returnParameters": {
										"id": 2533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "3193:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3193:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3192:9:9"
									},
									"scope": 2697,
									"src": "3135:155:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2579,
										"nodeType": "Block",
										"src": "3604:148:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2556,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2549,
														"src": "3618:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2557,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3623:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3618:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2561,
												"nodeType": "IfStatement",
												"src": "3614:20:9",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 2559,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3633:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 2555,
													"id": 2560,
													"nodeType": "Return",
													"src": "3626:8:9"
												}
											},
											{
												"assignments": [
													2563
												],
												"declarations": [
													{
														"constant": false,
														"id": 2563,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "3652:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 2579,
														"src": "3644:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2562,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3644:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2567,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2564,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2549,
														"src": "3656:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2565,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2551,
														"src": "3660:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3656:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3644:17:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2569,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2563,
																	"src": "3679:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2570,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2549,
																	"src": "3683:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3679:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2572,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2551,
																"src": "3688:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3679:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 2574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3691:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 2568,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3671:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3671:56:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2576,
												"nodeType": "ExpressionStatement",
												"src": "3671:56:9"
											},
											{
												"expression": {
													"id": 2577,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2563,
													"src": "3744:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2555,
												"id": 2578,
												"nodeType": "Return",
												"src": "3737:8:9"
											}
										]
									},
									"documentation": {
										"id": 2547,
										"nodeType": "StructuredDocumentation",
										"src": "3296:236:9",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 2580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3546:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2549,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3558:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2580,
												"src": "3550:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3550:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2551,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3569:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2580,
												"src": "3561:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3561:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3549:22:9"
									},
									"returnParameters": {
										"id": 2555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2580,
												"src": "3595:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3595:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3594:9:9"
									},
									"scope": 2697,
									"src": "3537:215:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2601,
										"nodeType": "Block",
										"src": "4283:83:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2591,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2585,
																"src": "4301:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4305:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4301:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 2594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 2590,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4293:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4293:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2596,
												"nodeType": "ExpressionStatement",
												"src": "4293:44:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2597,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2583,
														"src": "4354:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2598,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2585,
														"src": "4358:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4354:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2589,
												"id": 2600,
												"nodeType": "Return",
												"src": "4347:12:9"
											}
										]
									},
									"documentation": {
										"id": 2581,
										"nodeType": "StructuredDocumentation",
										"src": "3758:453:9",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "4225:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2583,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4237:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "4229:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4229:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2585,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4248:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "4240:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4240:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4228:22:9"
									},
									"returnParameters": {
										"id": 2589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "4274:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4274:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4273:9:9"
									},
									"scope": 2697,
									"src": "4216:150:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2623,
										"nodeType": "Block",
										"src": "4886:81:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2613,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2607,
																"src": "4904:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2614,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4908:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4904:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 2616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4911:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 2612,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4896:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4896:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2618,
												"nodeType": "ExpressionStatement",
												"src": "4896:42:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2619,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2605,
														"src": "4955:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 2620,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2607,
														"src": "4959:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4955:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2611,
												"id": 2622,
												"nodeType": "Return",
												"src": "4948:12:9"
											}
										]
									},
									"documentation": {
										"id": 2603,
										"nodeType": "StructuredDocumentation",
										"src": "4372:442:9",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4828:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2605,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4840:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "4832:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4832:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2607,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4851:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "4843:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4843:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4831:22:9"
									},
									"returnParameters": {
										"id": 2611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "4877:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4877:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4876:9:9"
									},
									"scope": 2697,
									"src": "4819:148:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2647,
										"nodeType": "Block",
										"src": "5526:68:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2637,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2629,
																"src": "5544:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2638,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2627,
																"src": "5549:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5544:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2640,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2631,
															"src": "5552:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2636,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5536:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5536:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2642,
												"nodeType": "ExpressionStatement",
												"src": "5536:29:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2643,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2627,
														"src": "5582:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2644,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2629,
														"src": "5586:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5582:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2635,
												"id": 2646,
												"nodeType": "Return",
												"src": "5575:12:9"
											}
										]
									},
									"documentation": {
										"id": 2625,
										"nodeType": "StructuredDocumentation",
										"src": "4973:453:9",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "5440:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2627,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5452:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2648,
												"src": "5444:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5444:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2629,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5463:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2648,
												"src": "5455:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5455:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2631,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5480:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 2648,
												"src": "5466:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2630,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5466:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5443:50:9"
									},
									"returnParameters": {
										"id": 2635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2634,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2648,
												"src": "5517:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5517:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5516:9:9"
									},
									"scope": 2697,
									"src": "5431:163:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2671,
										"nodeType": "Block",
										"src": "6346:67:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2661,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2653,
																"src": "6364:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6368:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6364:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2664,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2655,
															"src": "6371:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2660,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6356:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6356:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2666,
												"nodeType": "ExpressionStatement",
												"src": "6356:28:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2667,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2651,
														"src": "6401:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2668,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2653,
														"src": "6405:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6401:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2659,
												"id": 2670,
												"nodeType": "Return",
												"src": "6394:12:9"
											}
										]
									},
									"documentation": {
										"id": 2649,
										"nodeType": "StructuredDocumentation",
										"src": "5600:646:9",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "6260:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2651,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6272:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "6264:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6264:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2653,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6283:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "6275:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6275:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2655,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6300:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "6286:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2654,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6286:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6263:50:9"
									},
									"returnParameters": {
										"id": 2659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "6337:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6337:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6336:9:9"
									},
									"scope": 2697,
									"src": "6251:162:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2695,
										"nodeType": "Block",
										"src": "7154:67:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2685,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2677,
																"src": "7172:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2686,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7176:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7172:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2688,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2679,
															"src": "7179:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2684,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7164:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7164:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2690,
												"nodeType": "ExpressionStatement",
												"src": "7164:28:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2691,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2675,
														"src": "7209:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 2692,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2677,
														"src": "7213:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7209:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2683,
												"id": 2694,
												"nodeType": "Return",
												"src": "7202:12:9"
											}
										]
									},
									"documentation": {
										"id": 2673,
										"nodeType": "StructuredDocumentation",
										"src": "6419:635:9",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "7068:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2675,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7080:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "7072:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7072:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2677,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "7091:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "7083:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7083:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2679,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7108:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "7094:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2678,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7094:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7071:50:9"
									},
									"returnParameters": {
										"id": 2683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "7145:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7145:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7144:9:9"
									},
									"scope": 2697,
									"src": "7059:162:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2698,
							"src": "629:6594:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:7185:9"
				},
				"id": 9
			}
		}
	}
}